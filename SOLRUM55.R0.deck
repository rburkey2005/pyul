* 1800A JOB 55-238-50  YUL SYSTEM
*       YUL
Y  YUL  ADD NEW COMPUTER AGC4
Y  YUL  ASSEMBLY PASS 1 FOR AGC4 IS AVAILABLE
Y  YUL  ASSEMBLY PASS 2 FOR AGC4 IS AVAILABLE
Y  YUL  ASSEMBLY PASS 3 FOR AGC4 IS AVAILABLE
Y  YUL  ASSEMBLE NEW AGC4 PROGRAM SOLRUM55 BY NASA 1021108-021
L 001   ASSEMBLY AND OPERATION INFORMATION
R0001  2TABLE OF LOG CARDS              (ALL LOG CARDS ARE TWO SPACED)
R0002   ASSEMBLY AND OPERATION INFORMATION
R0003   ERASABLE ASSIGNMENTS
R0004   INTERRUPT TRANSFER ROUTINES
R0005   FIXED-FIXED INTERPRETER SECTION
R0006   BANK 03 INTERPRETER SECTION
R0007   EXECUTIVE
R0008   WAITLIST
R0009   RESTART CONTROL
R0010   501 RESTART TABLES AND ROUTINES
R0011   FRESH START AND RESTART
R0012   DOWN-TELEMETRY PROGRAM
R0013   T4RUPT OUTPUT CONTROL PROGRAMS
R0014   MODE SWITCHING AND MARK ROUTINES
R0015   IMU COMPENSATION PACKAGE
R0016   IRIG PULSE-TORQUING ROUTINES
R0017   EXTENDED VERBS FOR MODING
R0018   AGC SELF-CHECK
R0019   INTER-BANK COMMUNICATION
R0020   ALARM AND DISPLAY PROCEDURES
R0021   ORBITAL INTEGRATION PROGRAM
R0025   ORBITAL INTEGRATION FOR 501
R0028   PRELAUNCH ALIGNMENT PROGRAM
R0029   INFLIGHT ALIGNMENT PROGRAM
R0030   RTB OP CODES
R0031   IMU PERFORMANCE TESTS 1
R0032   IMU PERFORMANCE TESTS 2
R0033   INFLIGHT ALIGNMENT SUBROUTINES
R0034   KEYRUPT, UPRUPT, FRESH START
R0035   PINBALL GAME  BUTTONS AND LIGHTS
R0036   501 MISSION CONTROL PROGRAM
R0037   POWERED FLIGHT SUBROUTINES
R00375  TIME OF FREE-FALL CALCULATIONS
R0038   DUMMY 501 INITIALISATION
R0039   RE-ENTRY CONTROL
R0040   AVERAGE G INTEGRATOR
R0041   VERIFICATION ASSISTANCE PROGRAMS
R0042   SUM-CHECK END OF RECORD MARKS
P0043  3TABLE OF ERROR CODES
R0044  2OPTICS SUB-SYSTEM
R0045   00101    ZERO CDU SWITCH ALTERED BEFORE EXPIRATION OF 30 SECOND WAIT
R0046   00102    COMPUTER UNABLE TO ACHIEVE DESIRED OPTICS MODE
R0047   00103    SXT-ON SWITCH TURNED ON WITH OPTICS NOT IN ZERO CDU MODE
R0048   00104    NO VAC AREA AVAILABLE FOR MARKS
R0049   00105    INTERNAL MARKS REQUEST WITH MARK SYSTEM BUSY
R0050   00106    SXT-ON SWITCH NOT IN DESIRED STATE AT MARK TIME OR MARK WITH AL
 0051  9L REQUESTED MARKS ACCEPTED
R0052   00107    MARK ACCEPT WITH MARK SYSTEM NOT IN USE
R0053   00110    MARK ACCEPT WITH ALL REQUESTED MARKS ACCEPTED, OR NO MARKS SINC
 0054  9E INITIALIZATION OR LAST MARK ACCEPT
R0055  2IMU SUB-SYSTEM
R0056   00201    CDU ZERO SWITCH ALTERED BEFORE EXPIRATION OF 30 SECOND WAIT
R0057   00202    COMPUTER UNABLE TO ACHIEVE DESIRED MODE
R0058   00203    NO IMU MODE INDICATED TO COMPUTER
R0059   00204    MODE SWITCH WITH TRNSW IN COMPUTER CONTROL, BUT COMPUTER NOT CO
 0060  9MMANDING
R0061  2GENERAL MISSION PROGRAM ERRORS (ERROR RETURN ON IMUSTALL, ETC.)
R0062   00301    CURTAINS PROGRAM
R0063  2PROCEDURAL DIFFICULTY
R0064   00401    DESIRED GIMBAL ANGLES YIELD GIMBAL LOCK (MGA GREATER THAN 60 DE
 0065  9GREES).
R0066   00402    STAR OUT OF FIELD OF VIEW
R0067   00403    STAR OUT OF FIELD OF VIEW
R0068  2COMPUTER HARDWARE MALFUNCTIONS
R0069   01101    RUPT2 OCCURRED
R0070   01102    AGC SELF TEST ERROR (Q IN SFAIL)
R0071   01103    UNUSED CCS BRANCH EXECUTED
R0072   01104    C-RELAY FAILED DURING C-RELAY TEST
R0073  2LIST OVERFLOWS (ALL ABORTS)
R0074   01201    EXECUTIVE OVERFLOW - NO VAC AREAS
R0075   01202    EXECUTIVE OVERFLOW - NO CORE SETS
R0076   01203    WAITLIST OVERFLOW - TOO MANY TASKS
R0077   01204    SLIGHT VARIATION OF 01203
R0078   01205    MASTER CONTROL OVERFLOW - TOO MANY JOBS WAITING
R0079   01206    KEYBOARD + DISPLAY WAITING LINE OVERFLOW
R0080   01207    NO VAC AREA FOR MARKS
R0081   01210    SOMETHING ALREADY WAITING IN IMUSTALL
R0082  2INTERPRETER ERRORS
R0083   01301    ARCCOS-ARCSIN INPUT ANGLE TOO LARGE
R0084   01302    SQRT CALLED WITH NEGATIVE ARGUMENT
R0085  2DISPLAY ALARMS
R0086   01401    (VG) INCREASING - LOSS OF CONTROL
R0087   01402    (DELV) TOO LOW - ENGINE NOT ON
R00871  01403    501 ABORT. WILL OVERSHOOT TARGET.
R00872  01404    501 ABORT. PRESENT SMA LESS THAN RE/2
R00873  01405    501 ABORT. COT SQ(GAMMA E) NEGATIVE.
R00874  01406    501 ABORT. FREE-FALL ANGLE EXEEDS ---
R00875  01407    COMMANDED CDUZ EXCEEDS 60 DEGREES
R00876 201411    TIME TO INCORPORATE AVE G UPDATE ALREADY PAST
R0088  2KEYBOARD AND DISPLAY PROGRAM
R0089   01501    KEYBOARD AND DISPLAY ALARM DURING INTERNAL USE (NVSUB). ABORT
P0090  4VERB DEFINITIONS
R0091    REGULAR VERBS
R0092   01  DISPLAY OCTAL COMP 1 (R1)
R0093   02  DISPLAY OCTAL COMP 2 (R1)
R0094   03  DISPLAY OCTAL COMP 3 (R1)
R0095   04  DISPLAY OCTAL COMP 1,2 (R1,R2)
R0096   05  DISPLAY OCTAL COMP 1,2,3 (R1,R2,R3)
R0097   06  DECIMAL DISPLAY
R0098   07  DP DECIMAL DISPLAY (R1,R2)
R0099   10  REQUEST WAITLIST
R0100   11  MONITOR OCT COMP 1 (R1)
R0101   12  MONITOR OCT COMP 2 (R1)
R0102   13  MONITOR OCT COMP 3 (R1)
R0103   14  MONITOR OCT COMP 1,2 (R1)
R0104   15  MONITOR OCT COMP 1,2,3 (R1,R2,R3)
R0105   16  MONITOR DECIMAL
R0106   17  MONITOR DP DECIMAL (R1,R2)
R0107   20  REQUEST EXECUTIVE
R0108   21  LOAD COMP 1 (R1)
R0109   22  LOAD COMP 2 (R2)
R0110   23  LOAD COMP 3 (R3)
R0111   24  LOAD COMP 1,2 (R1,R2)
R0112   25  LOAD COMP 1,2,3 (R1,R2,R3)
R0113   26  SPARE
R0114   27  SPARE
R0115   30  SPARE
R0116   31  BANK DISPLAY
R0117   32  C(R2) INTO R3, C(R1) INTO R2
R0118   33  PROCEED WITHOUT DATA
R0119   34  TERMINATE CURRENT TEST OR LOAD REQUEST
R0120   35  RELEASE DISPLAY SYSTEM
R0121   36  FRESH START
R0122   37  CHANGE MAJOR MODE
R0123  4END OF REGULAR VERBS
R0124   EXTENDED VERBS
R0125   40  ZERO (USED WITH NOUN ICDU OR OCDU)
R0126   41  COARSE ALIGN (USED WITH NOUN ICDU OR OCDU)
R0127   42  FINE ALIGN IMU
R0128   43  LOCK IMU
R0129   44  SET IMU TO ATTITUDE CONTROL
R0130   45  SET IMU TO RE-ENTRY CONTROL
R0131   46  RETURN IMU TO COARSE ALIGN
R0132   47  OPTICAL TRACKER ON (NOT IN USE YET)
R0133   50  PLEASE PERFORM
R0134   51  PLEASE MARK
R0135   52  MARK REJECT (UNTIL BUTTON AVAILABLE)
R0136   53  FREE (USED WITH NOUN ICDU OR OCDU)
R0137   54  PULSE TORQUE GYROS
R0138   55  ALIGN TIME
R0139   56  PERFORM BANKSUM
R0140   57  DO SYSTEM TEST
R0141   60  PREPARE FOR STANDBY
R0142   61  RECOVER FROM STANDBY
R0143   62  ILLEGAL VERB
R0144   63  ILLEGAL VERB
R0145   64  ILLEGAL VERB
R0146   65  ILLEGAL VERB
R0147   66  ILLEGAL VERB
R0148   67  ILLEGAL VERB
R0149   70  ILLEGAL VERB
R0150   71  DO TFFMIN UPDATE
R0151   72  ABORT
R0152   73  ILLEGAL VERB
R0153   74  ILLEGAL VERB
R0154   75  MANUAL I/O FOR FLIGHTS
R0155   76  DO RVT UPDATE
R0156   77  DO L/O TIME UPDATE
P0157   NORMAL NOUNS                                       SCALE AND DECIMAL POI
 0158  9NT
R0159   00  NOT IN USE
R0160   01  SPECIFY MACHINE ADDRESS (FRACTIONAL)           (.XXXXX)
R0161   02  SPECIFY MACHINE ADDRESS (WHOLE)                (XXXXX.)
R0162   03  SPECIFY MACHINE ADDRESS (DEGREES)              (XXX.XXDEGREES)
R0163   04  SPECIFY MACHINE ADDRESS (HOURS)                (XXX.XXHOURS)
R0164   05  SPECIFY MACHINE ADDRESS (SECONDS)              (XXX.XXSECONDS)
R0165   06  SPECIFY MACHINE ADDRESS (GYRO DEGREES)         (XX.XXXDEGREES)
R0166   07  SPECIFY MACHINE ADDRESS (Y OPT DEGREES)        (XXX.XXDEG OR XX.XXXD
 0167  9EG)
R0168   10  SPARE
R0169   11  SPARE
R0170   12  SPARE
R0171   13  SPARE
R0172   14  SPARE
R0173   15  INCREMENT MACHINE ADDRESS                      (OCTAL ONLY)
R0174   16  TIME SECONDS                                   (XXX.XXSECONDS)
R0175   17  TIME HOURS                                     (XXX.XXHOURS)
R0176   20  ICDU                                           (XXX.XXDEGREES)
R0177   21  PIPAS                                          (XXXXX.PULSES)
R0178   22  NEW ANGLES I                                   (XXX.XXDEGREES)
R0179   23  DELTA ANGLES I                                 (XXX.XXDEGREES)
R0180   24  DELTA TIME (SECONDS)                           (XXX.XXSECONDS)
R0181   25  CHECKLIST                                      (XXXXX.)
R0182   26  PRIO/DELAY                                     (XXXXX.)
R0183   27  SELF TEST ON/OFF SWITCH                        (XXXXX.)
R0184   30  STAR NUMBERS                                   (XXXXX.)
R0185   31  FAILREG, SFAIL, ERCOUNT                        (OCTAL ONLY)
R0186   32  DECISION TIME (MIDCOURSE)                      (XXX.XXHOURS (INTERNA
 0187  9L UNITS = WEEKS))
R0188   33  EPHEMERIS TIME (MIDCOURSE)                     (XXX.XXHOURS (INTERNA
 0189  9L UNITS = WEEKS))
R0190   34  MEASURED QUANTITY (MIDCOURSE)                  (XXXX.XKILOMETERS)
R0191   35  ROLL, PITCH, YAW                               (XXX.XXDEGREES)
R0192   36  LANDMARK DATA 1                                (OCTAL ONLY)
R0193   37  LANDMARK DATA 2                                (OCTAL ONLY)
R0194   40  VG FOR 501                                     (XXXX.X METERS/SEC)
R0195   41  SPARE
R0196   42  SPARE
R0197   43  SPARE
R0198   44  SPARE
R0199   45  SPARE
R0200   46  SPARE
R0201   47  SPARE
R0202   50  SPARE
R0203   51  SPARE
R0204   52  GYRO BIAS DRIFT                                (.BBXXXXXMILLIRAD/SEC
 0205  9)
R0206   53  GYRO INPUT AXIS ACCELERATION DRIFT             (.BBXXXXX(MILLIRAD/SE
 0207  9C)/(CM/SEC SEC))
R0208   54  GYRO SPIN AXIS ACCELERATION DRIFT              (.BBXXXXX(MILLIRAD/SE
 0209  9C)/(CM/SEC SEC))
R0210  4END OF NORMAL NOUNS
R0211   MIXED NOUNS                                        SCALE AND DECIMAL POI
 0212  9NT
R0213   55  OCDU                                           (XXX.XXDEG, XXX.XXDEG
 0214  9 OR XX.XXXDEG)
R0215   56  UNCALLED MARK DATA (OCDU & TIME(SECONDS))      (XXX.XXDEG, XXX.XXDEG
 0216  9 OR XX.XXXDEG, XXX.XXSEC)
R0217   57  NEW ANGLES OCDU                                (XXX.XXDEG, XXX.XXDEG
R0218  9 OR XX.XXXDEG)
R0219   60  IMU MODE STATUS (IN3, WASKSET, OLDERR)         (OCTAL ONLY)
R0220   61  TARGET AZIMUTH AND ELEVATION                   (XXX.XXDEG, XX.XXXDEG
 0221  9)
R0222   62  RE-ENTRY VARIABLES                             (XXX.XXSEC, XXXXX., X
 0223  9XXXX.)
R0224   63  OCDUX AND TIME                                 (XXX.XXDEG, XXX.XXSEC
 0225  9)
R0226   64  OCDUY AND TIME                                 (XXX.XXDEG OR XX.XXXD
 0227  9EG, XXX.XXSEC)
R0228   65  SAMPLED TIME (HOURS AND SECONDS)               (XXX.XXHOURS, XXX.XXS
 0229  9EC)
R0230           (FETCHED IN INTERRUPT)
R0231   66  SYSTEM TEST RESULTS                            (XXXXX., .XXXXX, XXXX
 0232  9X.)
R0233   67  DELTA GYRO ANGLES                              (XX.XXXDEG  FOR EACH)
R0234   70  PIPA BIAS                                      (X.XXXXCM/SEC SEC  FO
 0235  9R EACH)
R0236   71  PIPA SCALE FACTOR ERROR                        (XXXXX.PARTS/MILLION
 0237  9 FOR EACH)
R0238   72  DELTA POSITION                                 (XXXX.XKILOMETERS  FO
 0239  9R EACH)
R0240   73  DELTA VELOCITY                                 (XXXX.XMETERS/SEC  FO
 0241  9R EACH)
R0242   74  MEASUREMENT DATA (MIDCOURSE)                   (XXX.XXHOURS (INTERNA
 0243  9L UNITS=WEEKS), XXXX.XKILOMETERS, XXXXX.
R0244   75  MEASUREMENT DEVIATIONS (MIDCOURSE)             (XXXX.XKILOMETERS, XX
 0245  9XX.XMETERS/SEC, XXXX.XKILOMETERS)
R0246   76  POSITION VECTOR                                (XXXX.XKILOMETERS  FO
 0247  9R EACH)
R0248   77  VELOCITY VECTOR                                (XXXX.XMETERS/SEC  FO
 0249  9R EACH)
P0250  4MAJOR MODES FOR FLIGHT 501
R0251  4         00     IDLING
R0252  2         0X     PRELAUNCH
R0253            01     INITIALIZATION
R0254            02     GYROCOMPASSING
R0255            03     OPTICAL VERIFICATION
R0256            04     INERTIAL REFERENCE
R02561           05     VERTICAL ERECT.  (COUNTING)
R02562 2         06     VERTICAL ERECT.  (UNCONDITIONAL)
R0257  4         07     SYSTEM TEST
R0258  2         1X     BOOSTER MONITOR
R0259  2         11     FIRST STAGE BOOSTER MONITORING
R0260  4         14     SIV-B BOOSTER MONITOR WITH TUMBLE MON. ON
R0261  2         2X     COASTING PHASE
R0262            21     MANEUVER TO COLDSOAK ATTITUDE
R0263            22     HOLD ATTITUDE DURING ORBITAL INTEGRATION
R0264            23     HOLD ATTITUDE
R0265  2         24     HOLD ATTITUDE WITH STATE VECTOR UPDATE ALLOWED.
R02655           26     HOLD SPS2 ATTITUDE AND WAIT FOR TFF = TFFMIN
R0266  4         27     R, V, T UPDATING
R0267  2         3X     PRE-THRUSTING PHASES
R0268            31     PRE-SPS1
R0269  4         32     PRE-SPS2
R0270  2         4X     THRUSTING PHASES
R0271            41     SPS1
R0272  4         42     SPS2
R0275  4         5X     ALIGNMENT
R0276  2         6X     ENTRY
R0277            61     CM/SM SEPARATION MANEUVER
R0278            62     PRE-ENTRY MANEUVER
R0279            63     INITIATE ENTRY STEERING
R0280            64     .05 G INDICATION
R0281            65     UP-CONTROL PHASE
R0282            66     BALLISTIC PHASE
R0283  4         67     FINAL PHASE
R0284  2         7X     ABORT PHASES
R0285            71     POST-TUMBLE ATTITUDE RECOVERY
R0286            72     FREE-FALL ENTRY ABORT
R0287            73     ABORT BURN
R0288  2         74     TUMBLE ARREST BURN
R0289            77     G+N FLUSHED
P0290  2JOB PRIORITIES FOR 501
R0291   PRIO37 = DOALARM
R0292   PRIO36 = NWJOB
R0293   PRIO35 = BIASONLY
R0294          = 1/GYRO
R0295          = ENEMA
R0296          = MODE32
R0297          = MODE26
R0298   PRIO33 = POSTBY3
R0299          = CHARIN
R0300   PRIO32 = MKVB50
R0301          = MKVB51
R0302          = REMKVB51
R0303   PRIO31 = SPITGYRO
R0304          = MONDO
R0305          = FREDSPDO
R0306   PRIO27 = SPITGYRO
R0307          = ENEMA
R0308          = S4BSMSEP
R0309   PRIO25 = ABORTEST
R0310          = REDO4.21
R0311          = BEGIN501
R0312   PRIO24 = LIFTOFF
R0313   PRIO23 = MANUJOB
R0314   PRIO22 = TUMBJOB1
R0315          = TUMBJOB
R0316   PRIO21 = CGJOB
R0317   PRIO20 = TOP1
R0318          = TSELECT
R0319          = PRAWAKE
R0320          = STARTPL2
R0321          = GYRDRFT2
R0322          = CDUXJOB
R0323   PRIO16 = SERVICER
R0324          = ENTRYTOP
R0325   PRIO15 = SMOOTHER
R0326   PRIO14 = CHKOPT
R0327          = UPTHETA1
R0328   PRIO13 = SOAKJOB
R0329   PRIO12 = TARGJOB
R0330          = SOAKINIT
R0331          = ATTIJOB
R0332          = ATTIJOB1 -1
R0333          = ATTIJOB2
R0334          = SEPMANU
R0335          = ENTAJOB
R0336   PRIO10 = ROLLJOB
R0337   PRIO7  = MODE23
R0338          = MODE44
R0339   PRIO6  = UPJOB
R03395  PRIO5  = MONITJOB
R0340          = MARKDISP
R0341   PRIO2  = FXFXCHK
L      2ERASABLE ASSIGNMENTS
R0001   COUNTER AND SPECIAL REGISTER TAGS
R0002  2------- --- ------- -------- ----
 0003   A        EQUALS 0
 0004   Q        EQUALS 1
 0005   Z        EQUALS 2
 0006   LP       EQUALS 3
 0007   IN0      EQUALS 4
 0008   IN1      EQUALS 5
 0009   IN2      EQUALS 6
 0010   IN3      EQUALS 7
 0011   OUT0     EQUALS 10
 0012   OUT1     EQUALS 11
 0013   OUT2     EQUALS 12
 0014   OUT4     EQUALS 14
 0015   BANKREG  EQUALS 15
 0016   RELINT   EQUALS 16
 0017   INHINT   EQUALS 17
 0018   CYR      EQUALS 20
 0019   SR       EQUALS 21
 0020   CYL      EQUALS 22
 0021   SL       EQUALS 23
 0022   ZRUPT    EQUALS 24
 0023   BRUPT    EQUALS 25
 0024   ARUPT    EQUALS 26
 0025  2QRUPT    EQUALS 27
 0026   BANKRUPT EQUALS 30
 0027   OVRUPT   EQUALS 31
 0028   LPRUPT   EQUALS 32
 0029  2DSRUPTSW EQUALS 33              T4RUPT PHASE COUNT GOES 7(-1)0
 0030   OVCTR    EQUALS 34
 0031   TIME2    EQUALS 35
 0032   TIME1    EQUALS 36
 0033   TIME3    EQUALS 37
 0034   TIME4    EQUALS 40
 0035   UPLINK   EQUALS 41
 0036   OUTCR1   EQUALS 42
 0037   OUTCR2   EQUALS 43
 0038   PIPAX    EQUALS 44
 0039   PIPAY    EQUALS 45
 0040   PIPAZ    EQUALS 46
 0041   CDUX     EQUALS 47
 0042   CDUY     EQUALS 50
 0043   CDUZ     EQUALS 51
 0044   OPTX     EQUALS 52
 0045   OPTY     EQUALS 53
P0046  2         INTERPRETIVE SPECIAL REGISTERS CONTAINED IN THE WORK AREA.
 0047   VAC      EQUALS 32D             RELATIVE TO FIXLOC
 0048   VACX     EQUALS VAC
 0049   VACY     EQUALS VAC  + 2
 0050   VACZ     EQUALS VAC  + 4
 0051   X1       EQUALS 38D             INDEXES ARE RELATIVE TO FIXLOC
 0052   X2       EQUALS 39D
 0053   S1       EQUALS 40D             AND SO ARE STEP REGISTERS
 0054   S2       EQUALS 41D
 0055  8QPRET    EQUALS 42D             AS IS QPRET
 0056  2         SETLOC 60
R0057            THE FOLLOWING REGISTERS ARE USED BY THE INTERPRETER, AND MAY BE
 0058  9 USED BY A BASIC JOB OR BASIC
R0059   PORTIONS OF AN INTERPRETIVE JOB (SOME RESTRICTIONS APPEAR WITH RTB FOLLO
 0060  9WED BY TC DANZIG, BUT THE NINE REGISTERS
R0061   VBUF AND BUF ARE AVAILABLE THEN). THE REGISTERS ARE NOT SAVED IN THEIR E
 0062  9NTIRETY DURING CHANGE JOB (MOST OF THEM
R0063  2ARE IGNORED), SO THAT THESE MUST BE USED ONLY AS TEMPORARIES BETWEEN ANY
 0064  9 CCS NEWJOBS.
 0065   NNADTEM  EQUALS 54              TEMP FOR NOUN ADDRESS TABLE ENTRY.
 0066   NNTYPTEM EQUALS 55              TEMP FOR NOUN TYPE TABLE ENTRY.
 0067   IDAD1TEM EQUALS 56              TEMP FOR INDIR ADRES TABLE ENTRY(MIXNN)
A0068                                   MUST = IDAD2TEM-1, = IDAD3TEM-2.
 0069   IDAD2TEM EQUALS 57              TEMP FOR INDIR ADRES TABLE ENTRY(MIXNN)
A0070                                   MUST = IDAD1TEM+1, = IDAD3TEM-1.
 0071   IDAD3TEM ERASE                  TEMP FOR INDIR ADRES TABLE ENTRY(MIXNN)
A0072  4                                MUST = IDAD1TEM+2, = IDAD2TEM+1.
 0073   BANKSET  ERASE                  STORAGE FOR BANK BITS OF OBJECT PROGRAM
 0074   ADDRWD   ERASE                  THIS WILL CONTAIN A PROPER 12 BIT ADDR
 0075   ORDER    ERASE                  STORAGE FOR RIGHT-HAND OPERATORS
 0076   UPDATRET =      ORDER           RETURN FOR UPDATNN, UPDATVB
 0077   CHAR     =      ORDER           TEMP FOR CHARIN
 0078   ERCNT    =      ORDER           COUNTER FOR ERROR LIGHT RESET
 0079   DECOUNT  =      ORDER           COUNTER FOR SCALING AND DISPLAY (DEC)
 0080   TEM11    ERASE
 0081   SGNON    =      TEM11           TEMP FOR +,- ON
 0082   NOUNTEM  =      TEM11           COUNTER FOR MIXNOUN FETCH
 0083   DISTEM   =      TEM11           COUNTER FOR OCTAL DISPLAY VERBS
 0084   DECTEM   =      TEM11           COUNTER FOR FETCH (DEC DISPLAY VERBS)
 0085   DECTEM1  =      TEM11           TEMP FOR NUM
 0086   MODE     ERASE                  DENOTES VECTOR, DP, OR TP.
 0087   ENTRET   =      MODE            EXIT FROM ENTER
 0088   LOADIND  ERASE                  LOAD INDICATOR
 0089   NEWEQIND EQUALS LOADIND
 0090   MONTEM   =      NEWEQIND        TEMP RETURN FOR MONITOR
 0091   FIXLOC   ERASE                  ADDRESS OF CURRENT VAC AREA
 0092   VACLOC   ERASE                  ADDRESS OF CURRENT VAC (= FIXLOC+32D)
 0093   VBUF     ERASE  +5              6 WORD TEMPORARY BLOCK FOR VXV, MXV, ETC
 0094   TEMQS    EQUALS VBUF            TEMP STORAGE FOR SWCALL ROUTINE
 0095   BANKTEM  EQUALS VBUF +1         LIKEWISE
 0096   B        EQUALS VBUF +2         ARGUMENT STORAGE IN FUNCTIONS
 0097   PROGREG  =      VBUF    +2      FOR GO EXEC PROGRAM
 0098   MIXTEMP  =      VBUF    +2      FOR MIXNOUN DATA
 0099   SIGNRET  =      VBUF    +2      RETURN FOR +,- ON
R0100   ALSO PROGREG+1 ,PROGREG+2.  MIXTEMP+1, MIXTEMP+2.
 0101   ESCAPE2  EQUALS VBUF +4         NEGATIVE ARGUMENT SWITCH IN ARCCOS
 0102   TAG1     EQUALS VBUF +4         USED FOR PICKING UP INDEX AND STEP REGS
 0103   TEMQ3    EQUALS VBUF +5         RETURN FROM DDV AND SQRTDIV
 0104   POLISH   EQUALS VBUF +5         TEMPORARY STORAGE FOR COMPLETE ADDRESSES
 0105   WDCNT    =      VBUF    +5      CHAR COUNTER FOR DSPWD
 0106   INREL    =      VBUF    +5      INPUT BUFFER SELECTOR ( X,Y,Z, REG )
 0107   BUF      ERASE  +2              USED BY DMP1, SQRTDIV
 0108   LOGTEM   EQUALS BUF             LOG SUBROUTINE TEMP.
 0109   SGNDMAX  EQUALS BUF +2          USED IN TPAGREE
 0110   TEM3     EQUALS BUF +2
 0111   GCOMPSW  EQUALS BUF +2
 0112   TEM2     ERASE
 0113   DSREL    =      TEM2            REL ADDRESS FOR DSPIN(TEM2 USED BY DAD1)
 0114   TEM4     ERASE
 0115   TEMQ     EQUALS TEM4            RETURN FROM TPAGREE
 0116   DSMAG    =      TEM4            MAGNITUDE STORE FOR DSPIN
 0117   IDADDTEM =      TEM4            MIXNOUN INDIRECT ADDRESS STORAGE
 0118   TEM5     ERASE
 0119   TEMQ2    EQUALS TEM5
 0120   BASE     =      TEM5
 0121   COUNT    =      TEM5            FOR DSPIN  (TEM5 IS USED BY DAD)
 0122   TEM8     ERASE
 0123   TEM6     EQUALS TEM8            ERASABLE ASSIGNMENTS BY EQUALS
 0124   TEM9     ERASE
 0125   WRDRET   =      TEM9            RETURN FOR 5BLANK
 0126   WDRET    =      TEM9            RETURN FOR DSPWD
 0127   DECRET   =      TEM9            RETURN FOR PUTCOM(DEC LOAD)
 0128   21/22REG =      TEM9            TEMP FOR CHARIN
 0129   TEM10    ERASE
 0130   IND      EQUALS TEM10           USED IN CROSS ROUTINE
 0131   MIXBR    =      TEM10           INDICATOR FOR MIXED OR NORMAL NOUN
 0132   DSPMMTEM =      TEM10           DSPCOUNT SAVE FOR DSPMM
 0133   DVSW     ERASE                  (THIS CAN PROBABLY BE EQUATED)
 0134   SGNOFF   =      DVSW            TEMP FOR +,- ON
 0135   NVTEMP   =      DVSW            TEMP FOR NVSUB
 0136   SFTEMP1  =      DVSW            STORAGE FOR SF CONST HI PART(=SFTEMP2-1)
 0137   DECTEM2  =      DVSW            TEMP FOR NUM
 0138   BRANCHQ  ERASE                  (DITTO)
 0139   CODE     =      BRANCHQ         FOR DSPIN
 0140   SFTEMP2  =      BRANCHQ         STORAGE FOR SF CONST LO PART(=SFTEMP1+1)
 0141   COMPON   ERASE                  (DITTO)
 0142   DSEXIT   =      COMPON          RETURN FOR DSPIN
 0143   EXITEM   =      COMPON          RETURN FOR SCALE FACTOR ROUTINE SELECT
 0144   BLANKRET =      COMPON          RETURN FOR 2BLANK
 0145   ARETURN  ERASE                  RETURN ADDRESS FOR ARCSIN/ARCCOS.
 0146   LSTPTR   =      ARETURN         LIST POINTER FOR GRABUSY
 0147   RELRET   =      ARETURN         RETURN FOR RELDSP
 0148  2FREERET  =      ARETURN         RETURN FOR FREEDSP
 0149   ESCAPE   ERASE                  ARCSIN/ARCCOS SWITCH
 0150  2CADRTEM  =      ESCAPE          TEMP STORAGE FOR GRAB ROUTINES
R0151  2         THE FOLLOWING REGISTERS ARE USED EXCLUSIVELY BY THE EXECUTIVE.
 0152   MPAC     ERASE  +2              MULTIPLE-PRECISION ACCUMULATOR
 0153   LOC      ERASE                  LOCATION COUNTER FOR OPERATOR WORDS
 0154   ADRLOC   ERASE                  LOCATION COUNTER FOR OPERAND ADDRESSES
 0155   OVFIND   ERASE                  0 FOR NO OVERFLOW, NON-ZERO OTHERWISE
 0156   PUSHLOC  ERASE                  NEXT AVAILABLE ENTRY IN PUSH-DOWN LIST
 0157  2PRIORITY ERASE                  PRIORITY OF CURRENT JOB
 0158  2         ERASE  +55D            EIGHT JOBS POSSIBLE
 0159  2NEWJOB   ERASE                  SET NON-ZERO TO SIGNAL EXECUTIVE RUPT
 0160   VAC1USE  ERASE                  SEE EXECUTIVE PROGRAMS FOR USE OF THESE
 0161   VAC1     ERASE  +42D            REGISTERS
 0162   VAC2USE  ERASE
 0163   VAC2     ERASE  +42D
 0164   VAC3USE  ERASE
 0165   VAC3     ERASE  +42D
 0166   VAC4USE  ERASE
 0167   VAC4     ERASE  +42D
 0168   VAC5USE  ERASE
 0169  2VAC5     ERASE  +42D
R0170  2         THE FOLLOWING REGISTERS ARE USED EXCLUSIVELY BY THE WAITLISTER.
 0171   LST1     ERASE  +6              DELTA T'S.
 0172   LST2     ERASE  +7              TASK CADRS.
 0173  2RUPTAGN  ERASE                  WAITLIST ADDITIONAL TASK INDICATOR.
 0174  2KEYTEMP2 =      RUPTAGN         TEMP FOR KEYRUPT, UPRUPT
R0175            THE FOLLOWING GROUP OF REGISTERS MAY BE USED AS TEMPORARY STORA
 0176  9GE BY ANY INTERRUPT PROGRAM OR BY ANY
R0177   PROGRAM WHICH INHIBITS INTERRUPT. CARE MUST BE TAKEN, HOWEVER, TO SEE TH
 0178  9AT THEY ARE NOT USED DURING A CALL
R0179  2TO THE EXECUTIVE (FOR EXAMPLE), FOR THE EXECUTIVE MAY USE THEM AS TEMPOR
 0180  9ARIES TOO.
 0181   EXECTEM1 ERASE                  THESE REGISTERS, EXECTEM1-3, MAY BE USED
 0182   RUPTSTOR =      EXECTEM1
 0183   IN1HITEM =      EXECTEM1        INTERRUPT TEMP FOR STANDBY PREP
 0184   EXECTEM2 ERASE                  AS SCRATCH STORAGE BY ANY PROGRAM WHICH
 0185   PROG     EQUALS EXECTEM2
 0186   IN1LOTEM =      EXECTEM2        INTERRUPT TEMP FOR STANDBY PREP
 0187   EXECTEM3 ERASE                  INHIBITS INTERRUPTS
 0188   ITEMP3   EQUALS EXECTEM3
 0189   SRRUPT   EQUALS EXECTEM3        SHORT STORAGE FOR SR DURING INTERRUPT.
 0190   LOOKRET  =      EXECTEM3        INTERRUPT TEMP FOR STANDBY PREP
 0191   EXECTEM4 ERASE
 0192   EXECTEM5 ERASE                  BANK RETURN FROM PHASE CONTROL.
 0193   NEWPRIO  ERASE                  PRIORITY OF NEW JOB
 0194   NVAL     =      NEWPRIO
 0195   DELT     =      NVAL
 0196   ITEMP1   =      NEWPRIO
 0197   WTEXIT   ERASE
 0198   ITEMP2   =      WTEXIT
 0199   KEYTEMP1 =      WTEXIT          TEMP FOR KEYRUPT, UPRUPT
 0200   DSRUPTEM =      WTEXIT          TEMP FOR DSPOUT
 0201   LOCCTR   ERASE                  USED TO LOCATE STORAGE FOR CORE REGISTRS
 0202  2PHASDATA EQUALS LOCCTR
R0211  2ERASABLE ASSIGNMENTS SPECIFIC TO PINBALL
 0212   VERBREG  ERASE                  VERB CODE
 0213   NOUNREG  ERASE                  NOUN CODE
 0214   XREG     ERASE                  R1 INPUT BUFFER
 0215   YREG     ERASE                  R2 INPUT BUFFER
 0216   ZREG     ERASE                  R3 INPUT BUFFER
 0217   XREGLP   ERASE                  LO PART OF XREG (FOR DEC CONV ONLY)
 0218   YREGLP   ERASE                  LO PART OF YREG (FOR DEC CONV ONLY)
 0219   ZREGLP   ERASE                  LO PART OF ZREG (FOR DEC CONV ONLY)
 0220   MODREG   ERASE                  MODE CODE
 0221   REQRET   ERASE                  RETURN REGISTER FOR LOAD
 0222   DSPCOUNT ERASE                  DISPLAY POSITION INDICATOR
 0223   DECBRNCH ERASE                  +DEC, - DEC, OCT INDICATOR
 0224            SETLOC 616             NEEDED FOR PINBALL AUTO CHECK
 0225   DSPTEM1  ERASE  +2              BUFFER STORAGE AREA 1 (MOSTLY FOR TIME)
 0226   LANDMARK EQUALS DSPTEM1
 0227   V75TEMP  EQUALS DSPTEM1
 0228   DSPTEM2  ERASE  +2              BUFFER STORAGE AREA 2 (MOSTLY FOR DEG)
 0229   NOUNADD  ERASE                  MACHINE ADDRESS FOR NOUN
 0230   MONSAVE  ERASE                  N/V CODE FOR MONITOR. ALSO ACTIVITY
 0231   MONSAVE1 ERASE                  NOUNADD STORAGE FOR MONITOR WITH MATBS
 0232   CADRSTOR ERASE                  ENDIDLE STORAGE
 0233   GRABLOCK ERASE                  INTERNAL INTERLOCK FOR DISPLAY SYSTEM
 0234   NVSBCADR ERASE                  NVSUB STORAGE FOR CALLING CADR
 0235   LOADSTAT ERASE                  STATUS INDICATOR FOR LOADTST
 0236   CLPASS   ERASE                  PASS INDICATOR FOR CLEAR
 0237  4DSPLIST  ERASE  +2              WAITING LIST FOR DSP SYST INTERNAL USE
R02371 2LONG-TERM STORAGE USED DURING INTERUPT, NOT USED BY EXECUTIVE, WAITLIST,
 02372 9 ETC.
 02373  RUPTREG1 ERASE
 02374  KSAMPTEM EQUALS RUPTREG1
 02375  RUPTREG2 ERASE
 02376  OSAMPTEM EQUALS RUPTREG2
 02377  RUPTREG3 ERASE
 02378 2RUPTREG4 ERASE
R0238  2MISCELLANEOUS RESERVATIONS
 0239  2SAMPTIME ERASE  +1              SAMPLED TIME FOR PINBALL REFERENCE.
R0240  2         INTERPRETER SWITCH ASSIGNMENTS.
 0241  2STATE    ERASE  +2              45 SWITCHES USED BY INTERPRETIVE PROGS.
 0242   DSPLOCK  EQUALS STATE           BIT 4
 0243   EXTVBACT EQUALS STATE           BIT 3
 0244   UPLOCK   EQUALS STATE           BIT 2
 0245   FLAGWRD1 EQUALS STATE +1
 0246  2FLAGWRD2 EQUALS STATE +2
 0247   JSWITCH  EQUALS 1               FREE-FALL INTEGRATION.
 0248   ABORTSIG EQUALS 2               SET WHEN GROUND ABORT V72 IS RECEIVED.
 0249   TFF2FLAG EQUALS 3               TOM D. NAMED THIS
 0250   BIASFLAG EQUALS 4               CAUSES DELV TO BE ZEROED AFTER 1/PIPA
 0251   NBSMBIT  EQUALS 5               IN-FLIGHT ALIGNMENT.
 0252   GONEPAST EQUALS 6                RE-ENTRY
 0253   RELVELSW EQUALS 7D              RE-ENTRY.
 0254   EGSW     EQUALS 8D              RE-ENTRY.
 0255   HUNTSW1  EQUALS 9D              RE-ENTRY.
 0256   HIND     EQUALS 10D             ENTRY.
 02565  VERIFLAG EQUALS 10D
A0257   DSKYFLAG EQUALS 11D             GUARDS AGAINST DOUBLE KEYBOARD ENTRIES.
A0258   DSPLOCK  EQUALS 12D             KEYBOARD/SUBROUTINE CALL INTERLOCK
A0259   EXTVBACT EQUALS 13D             EXTENDED VERB ACTIVITY
A0260   UPLOCK   EQUALS 14D             UPLINK INTERLOCK (ACTIVATED BY RECPTION
A0261  2                                OF A BAD CODE IN UPLINK)
 02615  INRLSW   EQUALS 15D             PROGSTALL NOT USED DURING ENTRY.
 0262  2PRGSW    EQUALS 15D             USED BY PRGSTALL.
 0263   COASTFLG EQUALS 17D             17 TO 47 ARE 501 SEQUENCE CONTROL FLAGS.
 0264   UPDATFLG EQUALS 18D
 0265   SOAKFLAG EQUALS 19D
 0266   SHTDNFLG EQUALS 20D
 0267   ACTIVFLG EQUALS 21D
 0268   INTPFLAG EQUALS 22D
 0269   INITFLAG EQUALS 23D
 0270   S4BSMFLG EQUALS 24D
 0271   INT1FLAG EQUALS 25D
 0272   MONITFLG EQUALS 26D
 0273   DVMONFLG EQUALS 27D
 0274   STEERFLG EQUALS 28D
 0275   ENTRYFLG EQUALS 29D
 0276   LIFTFLAG EQUALS 30D
 0277  2TUMBFLAG EQUALS 31D
 0278   DRIFTFLG EQUALS 33D
 0279   CDUXFLAG EQUALS 34D
 0280   BACKFLAG EQUALS 35D
 0281   ROLLFLAG EQUALS 36D
 0282   CALCFLAG EQUALS 37D
 0283   DOMANFLG EQUALS 38D
 0284   NEGFLAG  EQUALS 39D
 0285   BEGINFLG EQUALS 40D
 0286   SPS4FLAG EQUALS 41D
 0287   SPS3FLAG EQUALS 42D
 0288   SPS2FLAG EQUALS 43D
 0289   SPS1FLAG EQUALS 44D
 0290   TABTFLAG EQUALS 45D
 0291   ABRTFLAG EQUALS 46D
 0292  2ARRSTFLG EQUALS 47D
R0293  2         STORAGE USED BY PHASE CONTROL.
 0294   PHASETAB ERASE  +5              PHASE VALUES FOR 6 PROGRAMS
 0295   PHASE1   EQUALS PHASETAB
 0296   PHASE2   EQUALS PHASETAB + 1
 0297   PHASE3   EQUALS PHASETAB + 2
 0298   PHASE4   EQUALS PHASETAB + 3
 0299   PHASE5   EQUALS PHASETAB + 4
 0300   PHASE6   EQUALS PHASETAB + 5
 0301   PHASEBAR ERASE  +5              COMPLEMENTED COPY.
 0302   -PHASE1  EQUALS PHASEBAR
 0303   TBASE2   ERASE
 0304   TBASE3   ERASE
 0305   TBASE4   ERASE
 0306  2TBASE5   ERASE                   SHOULD COMPLETE THIS SET.
R0307  2         THE FOLLOWING REGISTERS ARE USED BY THE DOWNRUPT PROGRAM.
 0308   TELCOUNT ERASE                  ENDPULSE FREQUENCY MONITORING COUNTER.
 0309   LDATALST ERASE
 0310   DNLSTADR ERASE                  BASE ADDRESS OF APPROPRIATE TM LIST.
 0311   DNTMGOTO ERASE                  ADDRESS OF CURRENT DOWNLINK PHASE.
 0312   TMINDEX  ERASE                  STEPS THROUGH THE DOWNLIST
 0313   TMMARKER ERASE
 0314  2MARKERCT ERASE
R0315  2         THE FOLLOWING STORAGE IS USED BY T4RUPT.
 0316   CDUIND   ERASE                  IMU CDU STATUS INDICATOR AND INDEXER.
 0317   THETAD   ERASE  +2              SET OF THREE DEISRED ANGLES IN 2S COMPL.
 0318   OPTIND   ERASE                  OPTICS CDU STATUS INDICATOR AND INDEXER.
 0319  2DESOPTX  ERASE  +1              DESIRED OPTICS CDU ANGLES.
 0320   DSPCNT   ERASE                  STEPS THROUGH K-RELAY SLOTS IN DSPTAB.
 0321   NOUT     ERASE                  HOLDS NUMBER OF RELAY WORDS TO CHANGE.
 0322  2DSPTAB   ERASE  +13D            HOLDS STATE OF ALL RELAYS AND CHANGE INF
 0323  2OLDERR   ERASE                  LAST-SAMPLED SYSTEM ERROR BITS.
R0324  2         THE BITS OF OLDERR HAVE THE FOLLOWING MEANINGS:
R0325   BIT 1 = 1 IF THE PILOTS ATTITUDE BUTTON IS DEPRESSED.
R0326   BIT 2 = 1 IF RESTART FAILED (AND DID A FRESH START).
R0327   BIT 3 = 1 IF BIT 4 OF OUT1 WAS NOT INVERTED LAST NWJOB.
R0328   BIT 4 = 1 TO INHIBIT IMU FAIL FOR 5 SECONDS AFTER COARSE ALIGN.
R0329   BIT 5 = 1 IF CURTAINS CALLED (IMU MODING FAILURE, ETC.)
R0330   BIT10 = 1 IF CDU FAIL IS ON IN FINE ALIGN.
R0331   BIT11 = 1 IF PIPA FAIL IS ON.
R0332  2BIT12 = 1 IF IMU FAIL IS ON IN ANY MODE BUT COARSE ALIGN.
R0333            IN FLIGHT 501, BITS 2, 5, 11, AND 12 INHIBIT MAINTENANCE OF THE
 0334  9 NIGHT WATCHMAN ALARM
R0335  2SO THAT IF THEY ARE PRESENT FOR 2 CONSECUTIVE NWJOBS, G & N FAIL WILL BE
 0336  9 SENT TO THE MCP.
 0337   WASKSET  ERASE                  LAST SETTING OF IMU MODE SWITCHES.
 0338  2WASOPSET ERASE                  LAST SETTING OF OPTICS MODE SWITCHES.
 0339   DESKSET  ERASE                  DESIRED SETTING OF IMU MODE SWITCHES.
 0340  2DESOPSET ERASE                  DESIRED OPTICS MODES.
R0341  2         THE FOLLOWING REGISTERS ARE USED BY THE MODE SWITCHING AND MARK
 0342  9 PROGRAMS.
 0343   IMUCADR  ERASE                  USED BY IMUSTALL.
 0344   MODECADR EQUALS IMUCADR         FOR INDEXING PURPOSES.
 0345  2OPTCADR  ERASE                  USED BY OPTSTALL.
 0346   MARKSTAT ERASE                  MARK BUTTON STATUS REGISTER.
P0347  2         THE FOLLOWING STORAGE IS RESERVED FOR IMU COMPENSATION PARAMETE
 0348  9RS.
 0349   PBIASX   ERASE                  PIPA BIAS AND SCALE FACTOR TERMS
 0350   PIPABIAS EQUALS PBIASX          INTERMIXED.
 0351   PIPASCFX ERASE
 0352   PIPASCF  EQUALS PIPASCFX
 0353   PBIASY   ERASE
 0354   PIPASCFY ERASE
 0355   PBIASZ   ERASE
 0356  2PIPASCFZ ERASE
 0357   GBIASX   ERASE                  GYRO BIAS DRIFTS.
 0358   GBIASY   ERASE
 0359  2GBIASZ   ERASE
 0360   ADIAX    ERASE                  ACCELERATION SENSITIVE DRIFT ALONG THE
 0361   ADIAY    ERASE                  INPUT AXIS.
 0362  2ADIAZ    ERASE
 0363   ADSRAX   ERASE                  ACCELERATION SENSITIVE DRIFT
 0364   ADSRAY   ERASE                  ALONG THE SPIN-REFERENCE AXIS.
 0365  2ADSRAZ   ERASE
 0366  21/PIPADT ERASE                  DELTA TIME FOR 1/PIPA.
 0367  2OLDBT1   EQUALS   1/PIPADT      TIME1 STORAGE DURING FREE-FALL COMP.
 0368  2GCOMP    ERASE    +5            CONTAINS COMPENSATING GYRO TORQUES.
R0369  2         THE FOLLOWING INTERLOCK REGISTER IS USED BY THE GYRO ROUTINES.
 0370   LGYRO    ERASE                  ZERO IF GYROS AVAILABLE - ADDRESS OF
A0371                                   COMMANDS IF IN USE
P0372            THE FOLLOWING STORAGE CONTAINS REFERENCE VARIABLES FOR SEVERAL
 0373  9MISSION PROGRAMS. INCLUDED HERE ARE
R0374  4POSITION, VELOCITY, THEIR ASSOCIATED TIME, AND IMU STABLE MEMBER ORIENTA
 0375  9TION (WHEN THE IMU IS ALIGNED).
 0376   REFRRECT ERASE  +5              REFERENCE RECTIFICATION VECTORS.
 0377   REFVRECT ERASE  +5
 0378   DELTAV   ERASE  +5              REFERENCE DEVIATION VECTORS.
 0379   NUV      ERASE  +5
 0380  2REFRCV   ERASE  +5              REFERENCE CONIC POSITION VECTOR.
 0381   REFVCV   ERASE  +5              REFERENCE CONIC VELOCITY VECTOR.
 0382   REFTC    ERASE  +1              REFERENCE TIME SINCE RECTIFICATION.
 0383  2TE       ERASE  +1              TIME CORRESPONDING TO POSITION AND VEL.
 0384   REFXKEP  ERASE  +1              REFERENCE CONIC VARIABLE X.
 0385  2PBODY    ERASE
 0386   NSHIFT   ERASE                  AVERAGE G INTEGRATOR PARAMETERS REQUIR-
 0387   XSHIFT   ERASE                  ING PERMANENT STORAGE
 0388   CALCG    ERASE
 0389  2UNITW    ERASE  +5
 0390   RN       EQUALS REFRRECT        SYMBOLS FOR POSITION AND VELOCITY
 0391   RPIP     EQUALS REFRRECT        DURING ACCELERATED PHASES.
 0392   VN       EQUALS REFVRECT
 0393  2VPIP     EQUALS REFVRECT
 0394   DELV     EQUALS DELTAV          PIPA DATA DURING ACCELERATED PHASES.
 0395   DELVX    EQUALS DELV
 0396   DELVY    EQUALS DELV +2
 0397   DELVZ    EQUALS DELV +4
 0398   GRAVITY  EQUALS NUV             AVERAGE G INTEGRATOR VARIABLES
 0399   UNITR    EQUALS REFRCV
 0400   RMAG     EQUALS REFVCV
 0401   RMAGSQ   EQUALS REFVCV +2
 0402  2DELTAT   EQUALS REFVCV +4
 0403   TEMX     EQUALS REFTC
 0404   TEMY     EQUALS REFTC + 1
 0405   TEMZ     EQUALS TE
 0406   TEMXY    EQUALS TE + 1
 0407  2PIPAGE   EQUALS REFXKEP
 0408   REFSMMAT ERASE  +17D            REFERENCE TO SM MATRIX
 0409  2DTEPOCH  ERASE  +1
 04092  REDOCNTR ERASE                  RESTART DATA SAVED IN THESE REGISTERS
 04094  REDOTIME ERASE  +1
P0410            THE FOLLOWING STORAGE IS TIME-SHARED BY MISSION PROGRAMS UNDER
 0411  9THE SUPERVISION OF MASTER COMTROL. IT IS
R0412   ORGANIZED INTO THREE PARTS REFERRED TO AS A MEMORY, B MEMORY, AND C MEMO
 0413  9RY. A PARTICULAR MISSION PHASE IS
R0414   ASSIGNED TO ONE OF THE SEGMENTS IN SUCH A WAY THAT NO OTHER MISSION PHAS
 0415  9E USING THE SAME SEGMENT WILL EVER RUN
R0416   CONCURRENTLY; E.G., RE-ENTRY WILL NEVER RUN CONCURRENT WITH TVC. THE NUM
 0417  9BER OF AREAS (3) IS DETERMINED BY THE
R0418  2MAXIMUM NUMBER OF DISTINCT MISSION PROGRAMS WHICH RUN SIMULTANEOUSLY.
R0419            A MEMORY IS USED BY NAVIGATION PROGRAMS: MID-COURSE DURING FREE
 0420  9-FALL PORTIONS OF THE MISSION AND
R0421   AVERAGE G INTEGRATION DURING ACCELERATED PHASES. GUIDANCE PROGRAMS SUCH
 0422  9AS TVC USE B MEMORY TOGETHER WITH THEIR
R0423   ASSOCIATED ALIGNMENTS. THE C MEMORY PORTION IS USED THROUGHOUT MOST OF T
 0424  9HE MISSION FOR THE MIDCOURSE ERROR
R0425   TRANSITION MATRIX W, AND LATER BY RE-ENTRY AFTER THE LAST MEASUREMENT HA
 0426  9S BEEN INCORPORATED. THE EXCEPTION IS
R0427  4SYSTEM TEST, ASSIGNED TO A MEMORY, WHICH NEVER RUNS CONCURRENTLY WITH MI
 0428  9SSION PROGRAMS.
 0429   AMEMORY  ERASE  +139D
 0430   BMEMORY  ERASE  +164D
 0431  4CMEMORY  ERASE  +71D
R0432  2         STORAGE USED TO SAVE T1,2 DURING STANDBY.
 0433   TIME2SAV EQUALS AMEMORY +000D
 0434   TIME1SAV EQUALS AMEMORY +001D
 0435   IN1HISAV EQUALS AMEMORY +002D
 0436   IN1LOSAV EQUALS AMEMORY +003D
 0437   IN1HIDIF EQUALS AMEMORY +004D
 0438   IN1LODIF EQUALS AMEMORY +005D
R0439  2         THE FOLLOWING A MEMORY LOCATIONS ARE USED BY MID-COURSE NAVIGAT
 0440  9ION:
 0441   RRECT    EQUALS AMEMORY +000D
 0443   RIGNTION EQUALS AMEMORY +000D
 0444   VRECT    EQUALS AMEMORY +006D
 0445   VIGNTION EQUALS AMEMORY +006D
 0446   TDELTAV  EQUALS AMEMORY +012D
 0447   NEWDLTAV EQUALS AMEMORY +012D
 0448   YV       EQUALS AMEMORY +012D
 0449   TNUV     EQUALS AMEMORY +018D
 0450   -UPADR   EQUALS TNUV
 0451   STCNTR   EQUALS TNUV +1
 0452   NEWNUV   EQUALS AMEMORY +018D
 0453   ZV       EQUALS AMEMORY +018D
 0454   RCV      EQUALS AMEMORY +024D
 0455   FOUNDR   EQUALS AMEMORY +024D
 0456   VCV      EQUALS AMEMORY +030D
 0457   FOUNDV   EQUALS AMEMORY +030D
 0458   TC       EQUALS AMEMORY +036D
 0459   TET      EQUALS AMEMORY +038D
 0460   XKEP     EQUALS AMEMORY +040D
 0461   ALPHAV   EQUALS AMEMORY +042D
 0462   DELR     EQUALS AMEMORY +042D
 0463   BETAV    EQUALS AMEMORY +048D
 0464   DELVEL   EQUALS AMEMORY +048D
 0465   UVL      EQUALS AMEMORY +048D
 0466   PHIV     EQUALS AMEMORY +054D
 0467   STARMEAS EQUALS AMEMORY +054D
 0468   LNDMRKV  EQUALS AMEMORY +060D
 0469   PSIV     EQUALS AMEMORY +060D
 0470   ROTLMV   EQUALS AMEMORY +066D
 0471  2FV       EQUALS AMEMORY +066D
 0472  2VECTAB   EQUALS AMEMORY +072D
 0473   TAVEGON  EQUALS AMEMORY +072D
 0474   TRESUME  EQUALS AMEMORY +074D
 0475   RAVEGON  EQUALS AMEMORY +076D
 0476   BVECTOR  EQUALS AMEMORY +080D
 0477   UNE      EQUALS AMEMORY +080D
 0478   VAVEGON  EQUALS AMEMORY +082D
 0479   UNP      EQUALS AMEMORY +088D
 0480   RIG-4SEC EQUALS AMEMORY +088D
 0481   ERADSQ/4 EQUALS AMEMORY +094D
 0482   ERAD/2   EQUALS AMEMORY +096D
 0483   ALPHAM   EQUALS AMEMORY +108D
 0484   BETAM    EQUALS AMEMORY +110D
 0485   LONGDES  EQUALS AMEMORY +110D
 0486   TAU      EQUALS AMEMORY +112D
 0487   GIVENT   EQUALS AMEMORY +112D
 0488   DLONG    EQUALS AMEMORY +112D
 0489   DT/2     EQUALS AMEMORY +114D
 0490   LAT      EQUALS AMEMORY +114D
 0491   H        EQUALS AMEMORY +116D
 0492   LONG     EQUALS AMEMORY +116D
 0493   TDEC     EQUALS AMEMORY +118D
 0494   AZ       EQUALS AMEMORY +120D
 0495   FBRANCH  EQUALS AMEMORY +120D
 0496   HBRANCH  EQUALS AMEMORY +121D
 0497   GMODE    EQUALS AMEMORY +122D
 0498   NUMBTEMP EQUALS AMEMORY +122D
 0499   NUMBOPT  EQUALS AMEMORY +123D
 0500   VARIANCE EQUALS AMEMORY +124D
 0501   HMAG     EQUALS AMEMORY +124D
 0502   MEASQ    EQUALS AMEMORY +126D
 0503   COTGAM   EQUALS AMEMORY +126D
 0504  2DELTAQ   EQUALS AMEMORY +126D
 0505   MEASMODE EQUALS AMEMORY +128D
 0506   SITENUMB EQUALS AMEMORY +128D
 0507   NVCODE   EQUALS AMEMORY +129D
 0508   MIDEXIT  EQUALS AMEMORY +130D
 0509   DSPRTRN  EQUALS AMEMORY +130D
 0510   WMATFLAG EQUALS AMEMORY +131D
 0511   INCORPEX EQUALS AMEMORY +131D
 0512   STEPEXIT EQUALS AMEMORY +132D
 0513   DIFEQCNT EQUALS AMEMORY +133D
 0514   NORMGAM  EQUALS AMEMORY +133D
 0515   SCALEA   EQUALS AMEMORY +134D
 0516   SCALEB   EQUALS AMEMORY +135D
 0517   SCALEDT  EQUALS AMEMORY +136D
 0518   SCALDELT EQUALS AMEMORY +137D
 0519  2SCALER   EQUALS AMEMORY +138D
 0520  4FFFLAGS  EQUALS AMEMORY +139D
R0520012         A MEMORY ASSIGNMENTS FOR UPDATE ROUTINE
 052002 STBUFF   EQUALS AMEMORY +000D
 052003 UPOLDMD  EQUALS AMEMORY +014D
 0520044COMPNUMB EQUALS AMEMORY +015D
R0521  2         ENTRY ITEMS IN AMEMORY TO BE INCLUDED IN DOWN-LINK.
 0522   FX       EQUALS AMEMORY + 0     SHARES THIS LOC WITH RRECT.
 0523   PREDANG  EQUALS AMEMORY + 06D   SHARES THIS LOC WITH VRECT.
 0524   JJ       EQUALS AMEMORY + 07D   SHARES THIS LOC WITH VRECT.
 0525   THETAH   EQUALS AMEMORY + 08D   SHARES THIS LOC WITH VRECT.
 0526   LATANG   EQUALS AMEMORY + 010D  SHARES THIS LOC WITH VRECT.
 0527   L/D      EQUALS AMEMORY + 082D  SHARES THIS LOC WITH VAVEGON.
 0528   DIFF     EQUALS AMEMORY + 084D  SHARES THIS LOC WITH VAVEGON.
R0529  4 END OF ENTRY ITEMS.
R0530  2         A MEMORY ASSIGNMENTS FOR ROTATING EARTH ROUTINE.
 0531   RTINIT   EQUALS AMEMORY +012D
 0532   RTEAST   EQUALS AMEMORY +018D
 0533   RTNORM   EQUALS AMEMORY +024D
 0534   RT       EQUALS AMEMORY + 076D  SHARES THIS LOCATION WITH RAVEGON
 0535  4DTEAROT  EQUALS AMEMORY +036D
R05352 2         A MEMORY TEMPORARIES USED BY PRELAUNCH
 05354 4PTEMP    EQUALS AMEMORY + 99D
R0536  2   A MEMORY  USAGE AS TEMPORARIES BY AVERAGE G ROUTINE.
 0537   RN1      EQUALS AMEMORY +127D
 0538   VN1      EQUALS AMEMORY +133D
 0539  4AVGRETRN EQUALS AMEMORY +139D
R05391 2         A MEMORY TEMPORARIES USED BY SERVICER
 053911 VGCNT1   EQUALS AMEMORY +113D
 053912 DVCNT1   EQUALS AMEMORY +114D
 05392 4VR1      EQUALS AMEMORY +115D   12 LOCATIONS FOR VR, DIFFVECT
R0540  2         SYSTEM TEST A MEMORY USAGE:
 0541   GENPL    EQUALS AMEMORY +000D
 0542   TAR1POS  EQUALS GENPL
 0543   FILDELX  EQUALS AMEMORY +012D
 0544   TMARK    EQUALS AMEMORY +060D
 0545   VMARK    EQUALS AMEMORY +062D
 0546   COARSAGN EQUALS AMEMORY +075D
 0547   TESTTIME EQUALS AMEMORY +077D
 0548   LTSTNDX  EQUALS AMEMORY +078D
 0549   COUNTPL  EQUALS AMEMORY +080D
 0550   PIPINDEX EQUALS AMEMORY +081D
 0551   PIPANO   EQUALS AMEMORY +082D
 0552   POSITON  EQUALS AMEMORY +083D
 0553   RESULTCT EQUALS AMEMORY +084D
 0554   NDXCTR   EQUALS RESULTCT
 0555  2QPLACE   EQUALS AMEMORY +085D
 0556   PIPNDX   EQUALS AMEMORY +086D
 0557   STOREPL  EQUALS AMEMORY +088D
 0558   NBPOS    EQUALS AMEMORY +89D
 0559   TESTNDX  EQUALS AMEMORY +90D
 0560   CDUNDX   EQUALS AMEMORY +91D
 0561   GYROD    EQUALS AMEMORY +92D
 0562  2DATAPL   EQUALS AMEMORY +98D
 0563   VACADR   EQUALS AMEMORY +130D
 0564   MKSTAT1  EQUALS AMEMORY +132D
 0565   COAROFIN EQUALS AMEMORY +133D
 0566   MAXPTS2  EQUALS AMEMORY +135D
 0567   QPLAC    EQUALS AMEMORY +136D
 0568   PTS      EQUALS AMEMORY +137D
 0569   RUN      EQUALS AMEMORY +138D
 0570   EROPTN   EQUALS AMEMORY +139D
 0571   TESTNO   EQUALS CMEMORY +000D
 0572   SAVE     EQUALS CMEMORY +001D
 0573   PLOW     EQUALS CMEMORY +002D
 0574   CUSSANG  EQUALS CMEMORY +003D
 0575   NEGCDU1  EQUALS CMEMORY +004D
 0576   NEGCDU2  EQUALS CMEMORY +005D
 0577   LOCNO    EQUALS CMEMORY +006D
 0578   CALCDIR  EQUALS CMEMORY +007D
 0579   BUBBLE   EQUALS CMEMORY +008D
 0580   TEMDELV  EQUALS CMEMORY +009D
 0581   RETAA    EQUALS CMEMORY +010D
 0582   RETBB    EQUALS CMEMORY +011D
 0583  4STARNUMB EQUALS DSPTEM2
R0584  2B MEMORY USED BY POWERED FLIGHT AND ATTITUDE MANEUVERS
 0585   CDUTEMP  EQUALS BMEMORY +000D
 0586   CDUBUF   EQUALS BMEMORY +006D
 0587   WC       EQUALS BMEMORY +006D
 0588   UNITN    EQUALS BMEMORY +006D
 0589   RTRNSLUN EQUALS BMEMORY +006D
 0590   VF       EQUALS BMEMORY +006D
 0591   SINCDU   EQUALS BMEMORY +012D
 0592   COSCDU   EQUALS BMEMORY +018D
 0593   DCDU     EQUALS BMEMORY +024D
 0594   DUPCDU   EQUALS BMEMORY +024D
 0595   STEERROR EQUALS BMEMORY +024D
 0596   DNB      EQUALS BMEMORY +030D
 0597   VG       EQUALS BMEMORY +030D
 0598   UNITVG   EQUALS BMEMORY +030D
 0599   ERRORSUM EQUALS BMEMORY +036D
 0600   XSC      EQUALS BMEMORY +042D
 0601   UNITRXV  EQUALS BMEMORY +042D
 0602   UNITF    EQUALS BMEMORY +042D
 0603   UNITD    EQUALS BMEMORY +042D
 0606   YSC      EQUALS BMEMORY +048D
 0607   UNITHORZ EQUALS BMEMORY +048D
 0608   UNITS    EQUALS BMEMORY +048D
 0609   ZSC      EQUALS BMEMORY +054D
 0610   UNITMDT  EQUALS BMEMORY +054D
 0611   XSCD     EQUALS BMEMORY +060D
 0612   CBDT     EQUALS BMEMORY +060D
 0613   YSCD     EQUALS BMEMORY +066D
 0614   VR       EQUALS BMEMORY +066D
 0615   ZSCD     EQUALS BMEMORY +072D
 06155  SGNTHETA EQUALS BMEMORY +072D
 0616   DIFFVECT EQUALS BMEMORY +072D
 0617   RTARG    EQUALS BMEMORY +078D
 06175  DTEMP1   EQUALS BMEMORY +078D
 0618   S        EQUALS BMEMORY +078D
 0619   DN       EQUALS BMEMORY +080D
 0620   SMA      EQUALS BMEMORY +082D
 0621   ANORMAL  EQUALS BMEMORY +084D
 0622   LOOKANG  EQUALS BMEMORY +086D
 06225  DISPCNTR EQUALS BMEMORY +087D
 0623   MDT      EQUALS BMEMORY +088D
 0624   VGCNTR   EQUALS BMEMORY +090D
 0625   DVCNTR   EQUALS BMEMORY +091D
A0626   K1ROLL   EQUALS BMEMORY +092D   N.B. THIS LOCATION SHARED WITH ENTRY
 0627   DTHETA   EQUALS BMEMORY +094D
 0628   THETAMAN EQUALS BMEMORY +096D
 0629   TFF      EQUALS BMEMORY +098D
 0630   LONGTIME EQUALS BMEMORY +100D
 0631   TLIFTOFF EQUALS BMEMORY +102D
 0632   TENGON   EQUALS BMEMORY +102D
 0633   TCUTOFF  EQUALS BMEMORY +102D
 0634   PIPTIME  EQUALS BMEMORY +104D
 0635   LONGEXIT EQUALS BMEMORY +106D
 0636   CALLCADR EQUALS BMEMORY +107D
 0637   VRCADR   EQUALS BMEMORY +108D
 0638   EXITCADR EQUALS BMEMORY +109D
 0639   ROLLC    EQUALS BMEMORY +110D   N.B. THIS LOCATION SHARED WITH ENTRY
 0640  2EXITCAD1 EQUALS BMEMORY +112D
R0650  4B, C MEMORY USED FOR ERASABLE 501 LAUNCH, AIMPOINT, VEHICLE DATA.
 06545  TATLAN1  EQUALS CMEMORY +030D
 0655   TATLANT  EQUALS BMEMORY +138D
 06555  RTATLAN1 EQUALS CMEMORY +032D
 0656   RTATLANT EQUALS BMEMORY +140D
 06565  TPACIF1  EQUALS CMEMORY +038D
 0657   TPACIFC  EQUALS BMEMORY +146D
 06575  RTPACIF1 EQUALS CMEMORY +040D
 0658   RTPACIFC EQUALS BMEMORY +148D
 0659   ESQ(VR)  EQUALS BMEMORY +154D
 0660   SEMILAT  EQUALS BMEMORY +158D
 0661   TCOAST   EQUALS BMEMORY +162D
 06615 4TDECAY   EQUALS BMEMORY +164D
R0662  2         THE FOLLOWING ARE RE-ENTRY AND PRE-RE-ENTRY ASSIGNMENTS:
 0663   (V)      EQUALS BMEMORY +000D
 0664   DIFFOLD  EQUALS BMEMORY + 008D
 0665   Q7       EQUALS BMEMORY + 010D
 0666   FACT2    EQUALS BMEMORY +012D
 0667   ESQ      EQUALS BMEMORY +014D
 0670   LEWD     EQUALS BMEMORY +020D
 0671   VSQUARE  EQUALS BMEMORY +022D
 0672   DADV1    EQUALS BMEMORY + 24D
 0673   RDOT     EQUALS BMEMORY +026D
 0674   TENTRY   EQUALS BMEMORY +028D
 0675   ROLLBIAS EQUALS BMEMORY +30D
R0676     A HOLE.
 0677   ETA      EQUALS BMEMORY +034D
 0678   D        EQUALS BMEMORY +038D
 0679   V1       EQUALS BMEMORY +040D
 0680   NEGTHET  EQUALS BMEMORY +042D
 0681   V1OLD    EQUALS BMEMORY + 044D
 0682   K2ROLL   EQUALS BMEMORY +046D
 0683   GOTOADDR EQUALS BMEMORY +048D
 0684   XPIPSUM  EQUALS BMEMORY +049D
 0685   YPIPSUM  EQUALS BMEMORY +050D
 0686   ZPIPSUM  EQUALS BMEMORY +051D
 0687   XPIPBUF  EQUALS BMEMORY +052D
 0688   YPIPBUF  EQUALS BMEMORY +056D
 0689   ZPIPBUF  EQUALS BMEMORY +060D
 0690   PIPCTR   EQUALS BMEMORY + 64D
 0691   DOLD     EQUALS BMEMORY + 65D
R0692     A HOLE.
 0693   TEM1B    EQUALS BMEMORY + 68D
 0694   M1       EQUALS BMEMORY + 69D
 0695   GRAD     EQUALS BMEMORY + 70D
R0696     A HOLE.
 0697   LEQ      EQUALS BMEMORY + 77D
 0698   DHOOK    EQUALS BMEMORY + 79D
 0699   AHOOKDV  EQUALS BMEMORY + 81D
 0700   DVL      EQUALS BMEMORY + 83D
 0701   K1ROLL   EQUALS BMEMORY +092D   N.B. THIS LOCATION SHARED WITH POW. FL.
R0704  2  UNB,X,Y,Z ARE DEFINED LATER.
R0705  4                                         END OF  RE-ENTRY STUFF
R0706  2         B MEMORY ASSIGNMENTS FOR PRE-LAUNCH ALIGNMENT.
 0707   LATITUDE EQUALS BMEMORY +000D
 0708   AZIMUTH  EQUALS BMEMORY +002D
 0709   GYROCSW  EQUALS BMEMORY +004D
 0710   PRELTEMP EQUALS BMEMORY +005D
 0711   PRELXGA  EQUALS BMEMORY +006D
 0712   PRELYGA  EQUALS BMEMORY +007D
 0713   PRELZGA  EQUALS BMEMORY +008D
 0715   INFLANG  EQUALS BMEMORY +014D
 0716   GYROANG  EQUALS BMEMORY +020D
 0717   TAZ      EQUALS BMEMORY +26D
 0718   TEL      EQUALS BMEMORY +28D
 0719   VAZ      EQUALS BMEMORY +30D
 0720   CHKNVTEM EQUALS BMEMORY +32D
 0721   FILTER   EQUALS BMEMORY +34D
 0722   DELE     EQUALS BMEMORY +36D
 0723   FILDELZ  EQUALS DELE
 0724   DELS     EQUALS BMEMORY +38D
 0725   FILDELY  EQUALS DELS
 0726   INT      EQUALS BMEMORY +40D
 0727   PREVTIME EQUALS BMEMORY +44D
 0728   THETAY   EQUALS BMEMORY +90D
 0729   THETAZ   EQUALS BMEMORY +92D
 0730   THETAX   EQUALS BMEMORY +94D
 0731   THETASTH EQUALS BMEMORY +96D
 0732   THETAE   EQUALS BMEMORY +98D
 0733   VECTEM   EQUALS BMEMORY +48D
 0735   TIME2GR  EQUALS BMEMORY +106D
 0736   TIME1GR  EQUALS BMEMORY +107D
 0737  4TARGET1  EQUALS BMEMORY +054D
R0738  2         THE FOLLOWING LOCATIONS ARE USED BY IN-FLIGHT ALIGNMENT:
 0739   STARS    EQUALS BMEMORY +052D
 0740   STARAD   EQUALS TARGET1
 0741   STAR     EQUALS BMEMORY +066D
 0742   XSM      EQUALS BMEMORY +072D
 0743   YSM      EQUALS BMEMORY +078D
 0744   ZSM      EQUALS BMEMORY +084D
 0745   XNB      EQUALS BMEMORY +114D
 0746   XDC      EQUALS BMEMORY +114D
 0747   XDSMPR   EQUALS BMEMORY +114D
 0748   YNB      EQUALS BMEMORY +120D
 0749   YDC      EQUALS BMEMORY +120D
 0750   YDSMPR   EQUALS BMEMORY +120D
 0751   ZNB      EQUALS BMEMORY +126D
 0752   ZDC      EQUALS BMEMORY +126D
 0753   ZDSMPR   EQUALS BMEMORY +126D
 0754   OGC      EQUALS BMEMORY +132D
 0755   SAC      EQUALS BMEMORY +132D
 0756   IGC      EQUALS BMEMORY +134D
 0757   PAC      EQUALS BMEMORY +134D
 0758  4MGC      EQUALS BMEMORY +136D
R07582 2   RE-ENTRY ATTITUDE CONTROL UNIT VECTORS ALONG NAV BASE.
 07583  UXNB     EQUALS XNB             USED IN RE-ENTRY CONTROL.
 07584  UYNB     EQUALS YNB             USED IN RE-ENTRY CONTROL.
 07585 4UZNB     EQUALS ZNB             USED IN RE-ENTRY CONTROL.
R0759  2THE FOLLOWING IS USED FOR ATTITUDE CONTROL
 0760   ROLL     EQUALS BMEMORY +000D
 0761   PITCH    EQUALS BMEMORY +001D
 0762  4YAW      EQUALS BMEMORY +002D
R0763  2         CMEMORY USED FOR STORAGE OF 501 BOOST ATTITUDE MONITOR PARAMETE
 0764  9RS
 0766   TROLL    EQUALS CMEMORY +001D
 0767   TPITCH   EQUALS CMEMORY +003D
 0768   TENDPTCH EQUALS CMEMORY +005D
 0769   TMONITOR EQUALS CMEMORY +007D
 0770   TTUMON   EQUALS CMEMORY +009D
 0771   POLYENTR EQUALS CMEMORY +010D
 0772   POLYORDR EQUALS CMEMORY +011D
 0773   POLYCOEF EQUALS CMEMORY +012D
 0774   POLYEND  EQUALS CMEMORY +026D
 0775  4ROLLDTH  EQUALS CMEMORY +027D
R0776  2         THE FOLLOWING IS THE MIDCOURSE 6X6 ERROR TRANSITION MATRIX:
 0777  4W        EQUALS CMEMORY +000D
R0778  2         C MEMORY ASSIGNMENTS FOR RE-ENTRY:
 0779   UNI      EQUALS CMEMORY +000D
 0780   UNITV    EQUALS CMEMORY +006D
 0781   INITL/D  EQUALS CMEMORY +12D
 0782   VCORR    EQUALS CMEMORY +014D
 0783   A0       EQUALS CMEMORY +016D
 0784   VBARS    EQUALS CMEMORY +018D
 0785   COSG/2   EQUALS CMEMORY +020D
 0786   GAMMAL   EQUALS CMEMORY +022D
 0787   VS       EQUALS CMEMORY + 024D
 0788   D0       EQUALS CMEMORY +026D
 0789   VL       EQUALS CMEMORY + 28D
 0790   V        EQUALS CMEMORY +030D
 0791   FACTOR   EQUALS CMEMORY +032D
 0792   VREF     EQUALS CMEMORY +034D
 0793   RDOTREF  EQUALS CMEMORY +036D
 0794   ALP      EQUALS CMEMORY +038D
 0795  8FACT1    EQUALS CMEMORY +040D
R07951 4
R07953 2    SAVE RRECT AND VRECT IN CMEMORY TO RESTART ORBITAL INTEGRATION.
 07954  RRECCMEM EQUALS CMEMORY + 60D
 07955 4VRECCMEM EQUALS CMEMORY + 66D
R0796  2         ERASABLE ADDED TO THE END OF 202 ASSIGNMENTS FOR FLIGHTS 501 &
 0797  92.
 0799   UPTIME   ERASE  +1              SHOULD BE SET TO 37777, 37777 DURING
A0800                                   PRELAUNCH ERASABLE LOAD.
 080102 ANGLEX   ERASE                  COLDSOAK -  X GIMBAL ANGLE
 080104 ANGLEY   ERASE                  COLDSOAK -  Y GIMBAL ANGLE
 080106 ANGLEZ   ERASE                  COLDSOAK -  Z GIMBAL ANGLE
 080108 TFFMIN   ERASE  +1              TIME TO START SPS2 BURN SEQUENCE
 08011  1/RLLRTE ERASE  +1              ROLL RATE DURING BOOST MONITOR
 080112 MAXROLL  ERASE  +1              MAX DELTA ROLL ANGLE DURING ROLL MONITOR
 080113 CGY      ERASE  +3              C.G. ROTATION ABOUT Y S/C AXIS
 080114 CGZ      ERASE  +3              C.G. ROTATION ABOUT Z S/C AXIS
 080115 ATDT     ERASE  +3              INTEGRATED INITIAL THRUST ACC. MAGNITUDE
 080116 TFFNOM   ERASE  +1              NOMINAL TIME FROM NOMCASE TO 400,000 FT.
 080117 S2SWITCH ERASE                  SET NEGATIVE TO RECOMPUTE SPS2 ATTITUDE
 080118 REFSWTCH ERASE                  SET NEGATIVE FOR UNCOND. 280K FT FF REF
 080119 REDOSPS1 ERASE                  SET NEGATIVE TO REDO SPS1 AT AVGON
 08012  ECC      ERASE  +1              FOR SIMULATION EDITING
P0801252THE FOLLOWING STORAGE IS RESERVED EXCLUSIVELY FOR SELF-CHECK
 0802  2SELFERAS ERASE  1760 - 1777
 08021  ERESTORE =      1760
 0803   QADRS    EQUALS MPAC            RESERVED
 0804   2OPTIONS =      1761
 0805   SMODE    =      1762
 0806   FAILREG  =      1763
 0807   SFAIL    =      1764
 0808   ERCOUNT  =      1765
 0809   SCOUNT   =      1766
 0810   SKEEP1   =      1771
 0811   SKEEP2   =      1772
 0812   SKEEP3   =      1773
 0813   SKEEP4   =      1774
 0814   SKEEP5   =      1775
 0815   SKEEP6   =      1776
 0816   SKEEP7   EQUALS 1777
L 001  2INTERRUPT TRANSFER ROUTINES
 0001  2         SETLOC 2000
 0002            TS     ARUPT
 0003            XCH    Q
 0004            XCH    QRUPT
 0005  2         TC     T3RUPT
 0006            TS     ARUPT
 0007            XCH    Q
 0008            XCH    QRUPT
 0009  2         TC     ERRUPT
 0010            TS     ARUPT
 0011            XCH    Q
 0012            XCH    QRUPT
 0013  2         TC     T4RUPT          OUTPUT CONTROL.
 0014            TS     ARUPT
 0015            XCH    Q
 0016            XCH    QRUPT
 0017  2         TC     KEYRUPT
 0018            TS     ARUPT
 0019            XCH    Q
 0020            XCH    QRUPT
 0021  2         TC     UPRUPT
 0022            TS     ARUPT
 0023            XCH    Q
 0024            XCH    QRUPT
 0025  2         TC     DOWNRUPT        DOWNLINK.
 0026            INHINT                 GOJAM - PARITY ALARM, POWER FAIL, ETC.
 0027  2         CAF    EXECBANK
 0028            TS     BANKREG
 0029  8         TC     GOPROG
 0030   ERRUPT   TC     ALARM           ***NO ERRUPTS IN SYSTEM 5***
 0031            OCT    01101
 0032  2         TC     NBRESUME
 0033   UPRUPT   CAF    UPBANK          CALL IN BANK WITH UPRUPT PROGRAM.
 0034            XCH    BANKREG
 0035  2         TC     UPRUPTB
 0036   KEYRUPT  CAF    MODEBANK
 0037            XCH    BANKREG
 0038  2         TC     KEYRUPTA
 0039   MODEBANK CADR   KEYRUPTA
L 001  2FIXED-FIXED INTERPRETER SECTION
 0001  2         SETLOC 4000            SECOND HALF OF FIXED-FIXED.
 0002   INTPRET  CCS    Q               ENTRY TO INTERPRETER
 0003  2         TS     ADRLOC
 0004            CS     BANKREG         GET BANKBITS
 0005            TS     BANKSET
 0006  2         TC     +3
 0007   NEWEQUN  CS     BANKSET         HERE FOR NEW EQUATIONS
 0008            TS     BANKREG
 0009            CAF    ONE             SET NEWEQIND TO CALL LOAD
 0010            TS     NEWEQIND
 0011            AD     ADRLOC          C(ADRLOC) = LOCATION LAST ADDRESS USED
 0012            TS     LOC             FOR OPERATORS
 0013            INDEX  A               GET FIRST OP  AND NO. OF OPERATOR WORDS
 0014            CS     0
 0015            AD     MINUS1
 0016            TS     ORDER
 0017            MASK   LOW7            NUMBER OF ADDITIONAL OPERATOR WORDS
 0018            AD     LOC
 0019            TS     ADRLOC          AND SET ADRLOC
 0020            CAF    ZERO            TO SET ORDER TO ZERO
 0021  8         TC     IPROC2
 0022   DANZIG   CCS    NEWJOB          INTERPRETIVE INTERRUPT
 0023  2         TC     CHANG2          CALL IN BANK0 AND SWITCH JOBS
 0024            CS     BANKSET         RESET BANK BITS OF OBJECT PROGRAM
 0025  2         TS     BANKREG
 0026            CCS    ORDER           HAS NEXT OP CODE BEEN PROCESSED
 0027  2         TC     LOWWD           NEXT INSTRUCTION WAS RIGHT-HAND
 0028            INDEX  LOC             PICK UP POSSIBLE NEXT INSTRUCTION
 0029            CS     1
 0030            CCS    A
 0031            TC     IPROC           IT IS - GO PROCESS IT
 0032  2         TC     +1              IN CASE THE FIRST ADDRESS WAS INACTIVE
 0033            INDEX  ADRLOC          END OF EQUATION
 0034            CS     1
 0035            CCS    A               IS THERE ANOTHER ADDRESS
 0036            TC     PUSHDOWN        NO - INSERT IN PUSH-DOWN LIST
 0037  2D34      DEC    34              USED TO DISPATCH STORE OPERATIONS
 0038   STORADR  TS     POLISH          PROCESS STORE ADDRESSES
 0039            TC     INCADR          TO SHOW WE PICKED UP ANOTHER ADDRESS
 0040            CAF    D34             FORM CODES 32 - 34
 0041            AD     MODE
 0042            DOUBLE                 BECAUSE WE HAVE TO PUT IT INTO CYR
 0043            TS     CYR
 0044            CAF    LOW11
 0045            MASK   POLISH          SAVE ERASABLE PART PLUS POSSIBLE TAG
 0046            XCH    POLISH
 0047            AD     NEGIDEX         DIRECT OR INDEXED
 0048            CCS    A
 0049            TC     INDEX           IT IS INDEXED - PRESENT POLISH  OK
 0050   NEGIDEX  OCT    -33777          NEGATIVE OF STORE ADDRESS PREFIX +1
 0051            CS     BIT11
 0052            AD     POLISH
 0053            TS     POLISH
 0054  8         TC     NONINDEX
 0055   IPROC    TS     ORDER           OP CODE WORD WAS PICKED UP BY CCS
 0056            XCH    LOC
 0057            AD     ONE
 0058            XCH    LOC
 0059            MASK   LOW7            SAVE LOW ORDER CODE
 0060   IPROC2   XCH    ORDER           ENTRY FROM NEWEQUN
 0061            INDEX  OPOVF
 0062            MP     BIT8            SHIFT IT RIGHT SEVEN PLACES
 0063  2         TS     CYR             GETTING RID OF THE RIGHT-HAND OP
 0064   JUMPIT   CCS    CYR             LOOK AT LOW-ORDER PREFIX BIT
 0065            TC     ADDRESS         INDEXABLE - DECODE ADDRESS IMMEDIATELY
 0066  2LOADOP   OCT    43              USED BY UNARY LOAD
 0067            CCS    CYR             LOOK AT SECOND ONE HERE
 0068            TC     INCADR          PROCESS MISCELLANEOUS
 0069  2         TC     MISCPROC
 0070   UNAPROC  CCS    NEWEQIND        PROCESS UNARY REQUESTS
 0071  2         TC     UNALOAD         LOAD AN ACCUMULATOR AND RETURN
 0072            CAF    LOW7
 0073            TS     BANKREG         CALL IN BANK 0 WHERE UNARIES ARE
 0074            MASK   CYR             WITHOUT CLOBBERING
 0075            INDEX  A
 0076            TC     UNAJUMP
P0077  2         PROCESS MISCELLANOUS OP CODES.
 0078   MISCPROC INDEX  A
 0079            CS     0               WE KNOW ITS AN ADDRESS
 0080            AD     ONE             TO FIT IN WITH THE POLISH ADDRESS SCHEME
 0081  2         TS     POLISH          SAVE ENTIRE ADDRESS
 0082            CCS    A
 0083            TC     ENDMISC
 0084   42K      OCT    42000
 0085            TC     +2
 0086            TC     MISCREL
 0087            AD     BANKMASK
 0088            CCS    A
 0089            AD     ONE
 0090            TC     +2
 0091  2         TC     MISC2
 0092            AD     42K
 0093            COM
 0094            TS     POLISH
 0095  2         TC     ENDMISC
 0096   MISC2    AD     RELTEST
 0097            CCS    A
 0098            CS     POLISH
 0099            TC     +3
 0100            CS     POLISH
 0101            TC     +2
 0102   MISCREL  AD     FIXLOC
 0103  2         TS     ADDRWD
 0104   ENDMISC  CAF    LOW7
 0105            TS     BANKREG         CALL IN BANK 0
 0106            MASK   CYR
 0107            INDEX  A
 0108  8         TC     NONJUMP
 0109   UNALOAD  CAF    LOW7            PROCESS LOADING REQUESTS FOR UNARY
 0110            MASK   CYR             OPERATIONS. START BY FINDING APPROPRIATE
 0111            CCS    A               MODE
 0112            TC     +3              TMOVE HAS CODE 0
 0113            CS     TWO
 0114            TC     MODESET
 0115            CS     A
 0116            AD     OCT40003
 0117            TS     MODE            SKIP IF SO AND SET A TO -1
 0118            CS     ZERO            IF WE DIDNT SKIP
 0119  2MODESET  TS     MODE
 0120            CAF    NEGSIGN         GET INDEXING BIT FROM UNARY OP CODE IN
 0121            MASK   CYR             CYR
 0122            AD     LOADOP          AD LOAD OPCODE = OCT 43
 0123   60K      DOUBLE                 DOUBLE OP CODE AND DUPLICATE SIGN IN
 0124            XCH    CYR             BIT 1 WHERE IT GOES INTO SIGN OF CYR
 0125            TS     SL              RE-EDIT, NOT BOTHERING ABOUT BITS 8-14
 0126  2         TC     ADDRESS         STANDARD ADDRESS ROUTINE
 0127   ULRET    TS     NEWEQIND        RETURN HERE AFTER LOADING
 0128            XCH    SL
 0129            TS     CYR             RESTORE ORIGINAL OP CODE
 0130  2         TC     UNAPROC +2      AND DISPATCH AS USUAL
 0131   LOWWD    CAF    ZERO            RIGHT HAND OP CODE HAS ALREADY BEEN SET
 0132            XCH    ORDER
 0133  8         TC     JUMPIT -1
 0134   LOAD     TS     NEWEQIND        LOADS FIRST ADDRESS OF NEW EQUATIONS
 0135            INDEX  MODE            TRIGGERS TYPE OF CLEAR-AND-ADD
 0136            TC     +3
 0137            TC     TCA1
 0138            TC     DCA1
 0139  2         TC     VCA1
 0140   LOADRET  CCS    NEWEQIND        IF A UNARY LOAD, THIS IS STILL ONE
 0141  2         TC     ULRET           NO SECOND ADDRESS FOR UNARY LOADS
 0142            CS     BANKSET
 0143  2         TS     BANKREG
 0144   ADDRESS  INDEX  ADRLOC          INDEXABLE ADDRESS ROUTINE
 0145            CS     1               PICK UP WHAT SHOULD BE THE NEXT ADDRESS
 0146            CCS    A
 0147            TC     PUSHUP          NO ADDRESS MEANS TAKE OFF TOP OF STACK
 0148            TC     PUSHUP2         INACTIVE ADDRESS MEANS JUST PUSHUP
 0149            XCH    ADRLOC          SAVE ADDRESS WHILE WE INCREMENT ADRLOC
 0150            AD     ONE
 0151            XCH    ADRLOC          NOW BRING IT BACK
 0152            TS     POLISH
 0153            CAF    NEGSIGN
 0154            MASK   CYR
 0155            CCS    A               INDEXED OR NOT
 0156   BUGMPAC  XCADR  MPAC
 0157            TC     NONINDEX
P0158  2         PROCEDURE FOR INDXED ADDRESSES.
 0159   INDEX    XCH    POLISH
 0160            TS     SR              SR NOW CONTAINS SUB-ADDRESS
 0161            XCH    CYR             SAVE ORDER CODE
 0162            TS     CYL             TO PREPARE FOR RESTORING
 0163            TC     TAG
 0164            INDEX  TAG1
 0165            CS     X1              INDEX REGISTERS ARE SUBTRACTIVE, ALA 70X
 0166            AD     SR
 0167  2         XCH    POLISH          TS WOULD SKIP ON OVERFLOW
 0168            XCH    CYL             RESTORE OP CODE BITS IN CYR
 0169  2         TS     CYR
 0170            CCS    POLISH          SEE IF BIT 15 SHOULD BE ZERO.  IT SHOULD
 0171            TC     NONINDEX        IF THE ADDRESS IS LESS THAN ROUGHLY
 0172            TC     RELTOVAC +1     -1000D.
 0173            TC     +2
 0174  2         TC     RELTOVAC +1     QUICK ACTION ON THESE ZERO CASES.
 0175            AD     RELTEST         (-976D).
 0176            CCS    A
 0177            XCH    POLISH          LESS THAN -1000. GO DIRECTLY TO
 0178  8         TC     SWADDR          SWITCHED-BANK ADDRESS ROUTINE.
 0179   NONINDEX CS     POLISH          GET 14 BIT ADDRESS
 0180            AD     ERASTEST        SEE IF ERASABLE OR NOT
 0181            CCS    A
 0182            AD     RELTEST         YES - SEE IF IN TEMPORARY BLOCK
 0183            TC     TEST2
 0184            AD     STORTEST        NO - SEE IF STORE ADDRESS
 0185            CCS    A
 0186            TC     PUSHUP3         YES - PUSHUP
 0187            TC     +1              IN CASE THE STORED ADDRESS WAS 2000.
 0188            CAF    BIT15
 0189            AD     POLISH
 0190   SWADDR   TS     BANKREG
 0191            TS     POLISH
 0192            MASK   LOW10
 0193            AD     6K
 0194            TS     ADDRWD
 0195  2         TC     JUMP
 0196   TEST2    CCS    A               DOES THIS REFER TO THE TEMPORARY BLOCK
 0197            TC     RELTOVAC        ADDRESS IS RELATIVE TO VAC AREA.
 0198   LOW11    OCT    3777
 0199            XCH    POLISH          YES - FORM ADDRESS
 0200  2         TS     ADDRWD
 0201   JUMP     CAF    THREE           LOOK AT LOW-ORDER 2 BITS IN 5 BIT CODE
 0202            MASK   CYR
 0203            CCS    A               IF ZERO, LOAD NOW AND CALL IN BANK 0
 0204            TC     +3              NON-ZERO - GO ON.
 0205            TC     DPSET           LOAD DP IF NECESSARY
 0206            TS     BANKREG         CALL IN BANK 0
 0207            CAF    LOW7            BITS 6-13 ARE GUARANTEED TO BE ZERO
 0208            MASK   CYR
 0209            INDEX  A
 0210  8         TC     INDJUMP
 0211   PUSHDOWN XCH    PUSHLOC         NO STORE ADDRESS GIVEN - PUSH DOWN
 0212            TS     ADDRWD          STORED IN THE NEXT ENTRY
 0213            INDEX  MODE
 0214            AD     NO.WDS          2 FOR DP, 6 FOR VECTORS, 3 FOR TP
 0215            TS     PUSHLOC
 0216            INDEX  MODE
 0217  2         TC     INDJUMP +34D    DISPATCH TO CORRECT STORE INSTRUCTION
 0218   PUSHUP1  XCH    Q               THE PUSH-UP ROUTINE IS CALLED UNDER THE
 0219            TS     COMPON          FOLLOWING CIRCUMSTANCES:
 0220            CAF    LOW7               1. NO ADDRESS WORD IS FOUND.
 0221            MASK   CYR                2. A STORE ADDRESS IS FOUND.
 0222            AD     -VXSC           OR 3. AN INACTIVE ADDRESS IS FOUND.
 0223            CCS    A               IF THE REQUESTING OPERATION CODE IS VXSC
 0224            TC     PUSHUPOK        THE MODE MUST BE SWITCHED BEFORE PUSHING
 0225   MINUS1   OCT    -1              UP, SINCE VXSC DEMANDS AN ARGUMENT OF
 0226  2         TC     PUSHUPOK        THE OPPOSITE MODE (SCALAR NEEDS VECTOR,
 0227            CCS    MODE            ETC.)
 0228   MINUS2   OCT    -2              UNUSED CCS BRANCHES.
 0229   NEG3     OCT    -3
 0230            CS     FOUR
 0231            AD     NEG2
 0232            TC     +3
 0233   PUSHUPOK INDEX  MODE            DO PUSH-UP OPERATION.
 0234            CS     NO.WDS          2, 3, OR 6.
 0235            AD     PUSHLOC
 0236            TS     PUSHLOC
 0237            TS     ADDRWD          SET ADDRWD AND LEAVE ADDRESS IN A.
 0238  2         TC     COMPON
 0239  2-VXSC    EQUALS MINUS2
 0240  2PUSHUP2  TC     INCADR          SENT HERE ON INACTIVE ADDRESS
 0241   PUSHUP   TC     PUSHUP1         NO ADDRESS GIVEN SENDS US HERE
 0242  2         TC     JUMP            AND JUMP
 0243   PUSHUP3  CCS    ADRLOC          AN UNEXPECTED STORE ADDRESS SENDS US
 0244            TS     ADRLOC          HERE.
 0245  2         TC     PUSHUP
 0246   RELTOVAC XCH    POLISH          ADDRESS WAS LESS THAN 42, SO ADD
 0247            AD     FIXLOC          ADDRESS OF VAC AREA.
 0248  2         TC     JUMP -1
 0249   INCADR   CAF    ONE
 0250            AD     ADRLOC
 0251            TS     ADRLOC
 0252  8         TC     Q
 0253   IJUMP    TC     ITCF            INTERPRETIVE TRANSFER CONTROL
 0254            TC     VXSC1           VECTOR TIMES SCALAR
 0255            TC     VSU1            VECTOR SUBTRACT
 0256            TC     BMN1            BRANCH MINUS
 0257            TC     STZ1            STORE ZERO
 0258            TC     BOVF            BRANCH ON OVERFLOW
 0259            TC     DAD2            DOUBLE PRECISION ADD
 0260            TC     BHIZ1           BRANCH IF MAJOR PART ZERO
 0261            TC     DSU2            DP SUBTRACT
 0262            TC     DBSU            DP BACKWARDS SUBTRACT
 0263            TC     DMP2            DP MULTIPLY
 0264            TC     SHIFTL          TP LEFT SHIFT
 0265            TC     DDV             DP DIVIDE
 0266            TC     BDDV            DP BACKWARDS DIVIDE
 0267            TC     TRAD            TRIPLE PRECISION ADD
 0268            TC     TSLC            TP SHIFT LEFT AND COUNT
 0269            TC     SHIFTR1         TP SHIFT RIGHT
 0270            TC     DMP2            DP MULTIPLY AND THEN ROUND
 0271            TC     TSU1            TP SUBTRACT
 0272            TC     SIGN            AFFIX SIGN OF X TO MPAC
 0273            TC     MXV1            MATRIX TIMES VECTOR
 0274            TC     VXM1            VECTOR TIMES MATRIX
 0275            TC     VAD1            VECTOR ADD
 0276            TC     BZE1            BRANCH ON ZERO
 0277            TC     BVSU1           BACKWARDS VECTOR SUBTRACT
 0278            TC     VSRT1           VECTOR SHIFT RIGHT
 0279            TC     VSLT1           VECTOR SHIFT LEFT
 0280            TC     BPL1            BRANCH POSITIVE
 0281            TC     DOT1            VECTOR DOT PRODUCT
 0282            TC     CROSS1          VECTOR CROSS PRODUCT
 0283  2         TC     VPROJ1          VECTOR PROJECTION
 0284            TC     TTS1
 0285            TC     DTS1            DP TRANSFER TO STORAGE
 0286            TC     VTS1            VECTOR TS
 0287  2         TC     LOAD +1         LOADING
 0288  26K       EQUALS IJUMP +3        BMN STARTS AT LOCATION 6000
 0289  8INDJUMP  EQUALS IJUMP -1
 0290   NONJUMP  TC     EXIT
 0291            TC     AXT             ADDRESS TO INDEX TRUE
 0292            TC     LXA             LOAD INDEX FROM THE ADDRESS
 0293            TC     LXC             LOAD INDEX FROM ADDRESS COMPLEMENTED
 0294            TC     SXA             STORE INDEX IN THE ADDRESS
 0295            TC     XCHX            INDEX REGISTER EXCHANGE
 0296            TC     INCR            INDEX REGISTER INCREMENT
 0297            TC     XAD             INDEX REGISTER ADD FROM ERASABLE
 0298            TC     XSU             INDEX REGISTER SUBTRACT FROM ERASABLE
 0299            TC     AST             ADDRESS TO STEP TRUE
 0300            TC     AXC             ADDRESS TO INDEX COMPLEMENTED
 0301            TC     TIX             TRANSFER ON INDEX
 0302            TC     NOLOAD          LEAVE MPAC (OR VAC) LOADED
 0303            TC     ITA1            TRANSFER ADDRESS
 0304            TC     SWITCHEM        SWITCH AND TEST INSTRUCTIONS
 0305  2         TC     NEXT            LODON AND ITCQ
 0306   UNAJUMP  TC     TMOVE           FOR TP AS WELL
 0307            TC     VMOVE
 0308            TC     UNIT
 0309            TC     ABVAL1          ABVAL
 0310            TC     VSQ             SQUARE OF VECTOR LENGTH
 0311            TC     SSP             ABSOLUTE VALUE OF SCALAR
 0312            TC     ARCSIN1
 0313            TC     ARCCOS1
 0314            TC     SIN1
 0315            TC     COS1
 0316            TC     SQRTS
 0317            TC     SQUARE
 0318            TC     COMP            COMPLEMENT
 0319            TC     DMOVE
 0320            TC     SMOVE
 0321  8         TC     VDEF            VECTOR DEFINE
 0322   THREE    OCT    3
 0323            OCT    2
 0324  2NO.WDS   OCT    6               3, 2, 6 ORDER IMPORTANT FOR PUSH-DOWN.
 0325   POSMAX   OCT    37777           MUST BE 2 LOCATIONS BEFORE NEGMAX
 0326   FIVE     OCT    5
 0327  2LIMITS   EQUALS POSMAX +1       USED BY CDU COUNTER ARITHMETIC PROGRAMS.
 0328   BIT15    OCT    40000
 0329   BIT14    OCT    20000
 0330   BIT13    OCT    10000
 0331   BIT12    OCT    04000
 0332   BIT11    OCT    02000
 0333   BIT10    OCT    01000
 0334   BIT9     OCT    00400
 0335   BIT8     OCT    00200
 0336   BIT7     OCT    00100
 0337   BIT6     OCT    00040
 0338   BIT5     OCT    00020
 0339   BIT4     OCT    00010
 0340   BIT3     OCT    00004
 0341   BIT2     OCT    00002
 0342  2BIT1     OCT    00001
 0343   QUARTER  EQUALS BIT13
 0344   EIGHT    EQUALS BIT4
 0345   ONE      EQUALS BIT1
 0346   ERASTEST EQUALS BIT11
 0347   BUGBITS  EQUALS 5777
 0348   ATSBITS  EQUALS 5777
 0349   NEG2     EQUALS MINUS2
 0350   SIX      EQUALS NO.WDS
 0351   NEG1     EQUALS MINUS1
 0352  2NEGSIGN  EQUALS BIT15
 0353   RELTEST  DEC    -976
 0354   NEG1/2   2DEC   -.5
 0355   POS1/2   2DEC   .5
 0356  8HALF     EQUALS POS1/2
 0357   TCS1     CS     BUF +2          USED BY DMP, ETC
 0358            TS     MPAC +2
 0359            CS     BUF +1
 0360            TS     MPAC +1
 0361            CS     BUF
 0362            TS     MPAC
 0363  2         TC     Q
 0364   TCA1     INDEX  ADDRWD          TRIPLE PRECISION CLEAR AND ADD
 0365            CS     2
 0366            CS     A
 0367  2         TC     +2
 0368   DCA1     XCH    ZERO            DOUBLE PRECISION CLEAR AND ADD
 0369            TS     MPAC +2           (CLEARS MPAC +2)
 0370            INDEX  ADDRWD
 0371            CS     1
 0372            CS     A
 0373            TS     MPAC +1
 0374            INDEX  ADDRWD
 0375            CS     0
 0376            CS     A
 0377            TS     MPAC
 0378  2         TC     LOADRET         PREPARE TO DECODE NEXT ADDRESS
 0379   STORE3   CS     MPAC +2         TRIPLE PRECISION TRANSFER TO STORAGE
 0380            CS     A
 0381            INDEX  ADDRWD
 0382            TS     2
 0383   DTS1     CS     MPAC +1         DOUBLE PRECISION TRANSFER TO STORAGE
 0384            CS     A
 0385            INDEX  ADDRWD
 0386   TSQ      TS     1
 0387            CS     MPAC
 0388   MSIGN    CS     A
 0389            INDEX  ADDRWD
 0390            TS     0
 0391  2NEQRET   TC     NEWEQUN         START NEW EQUATION
 0392  8TTS1     EQUALS STORE3
 0393  9                35W
 0394   DOBR     XCH    POLISH          DOES BRANCHES
 0395  2         TC     DOBR2
 0396   EXIT2    CS     BANKSET         COMPLETE EXIT EXECUTION BY CALLING IN
 0397            TS     BANKREG         BANK OF OBJECT INTERPRETIVE PROGRAM.
 0398  2         TC     ADRLOC
 0399   SWF/F    CS     BANKSET         BRANCHING TEST INSTRUCTION
 0400            TS     BANKREG         RETURNS HERE TO PICK UP BRANCHING ADDRES
 0401            INDEX  ADRLOC
 0402            CAF    0               BRANCH IS ALWAYS TO FIXED.
 0403            AD     NEG1            UNDO YULISH INCREMENT.
 0404  2         AD     BIT15
 0405   DOBR2    TS     BANKREG
 0406            MASK   LOW10
 0407            AD     6K-1
 0408  2         TC     INTPRET +1
 0409   LOW10    OCT    1777
 0410   LOW9     OCT    777
 0411  26K-1     OCT    5777
 0412   VCA1     XCH    Q               VECTOR CLEAR-AND-ADD ROUTINE
 0413            TS     TEM5
 0414            CAF    NEGSIGN
 0415            TC     VECMOVE
 0416  2         TC     TEM5
 0417   VCS1     XCH    Q               DP VECTOR CLEAR-AND-SUBTRACT
 0418            TS     TEM5
 0419            CAF    NOOP
 0420  2         TC     VCA1 +3
 0421   VTS1     XCH    ADDRWD          TRANSFER TO STORAGE
 0422            XCH    VACLOC          EXCHANGE VACLOC AND ADDRWD AND DO AN
 0423            TS     ADDRWD          EFFECTIVE *CLEAR-AND-ADD*.
 0424            CAF    NEGSIGN
 0425            TC     VECMOVE
 0426            XCH    ADDRWD          RESTORE VACLOC
 0427            TS     VACLOC
 0428  8         TC     NEWEQUN         THIS ONLY HAPPENS AT END OF EQUATION
 0429   VECMOVE  TS     TEM2            MOVES A DP VECTOR IN THE FASTEST WAY
 0430            INDEX  ADDRWD          AVAILABLE. USED BY VCA, VCS, AND VTS.
 0431            CS     5
 0432            INDEX  TEM2
 0433            0      0               COM FOR VCA, VTS. NOOP FOR VCS.
 0434            INDEX  VACLOC
 0435  2         TS     5
 0436            INDEX  ADDRWD
 0437            CS     4
 0438            INDEX  TEM2
 0439            0      0
 0440            INDEX  VACLOC
 0441  2         TS     4
 0442            INDEX  ADDRWD
 0443   OCT40003 CS     3               CONSTANT USED BY UNARY LOAD ROUTINE.
 0444            INDEX  TEM2
 0445            0      0
 0446            INDEX  VACLOC
 0447  2         TS     3
 0448            INDEX  ADDRWD
 0449   OCT40002 CS     2
 0450            INDEX  TEM2
 0451            0      0
 0452            INDEX  VACLOC
 0453  2         TS     2
 0454            INDEX  ADDRWD
 0455   CSQ      CS     1               CONSTANT USED BY WAITLIST.
 0456            INDEX  TEM2
 0457            0      0
 0458            INDEX  VACLOC
 0459  2         TS     1
 0460            INDEX  ADDRWD
 0461            CS     0
 0462            INDEX  TEM2
 0463            0      0
 0464            INDEX  VACLOC
 0465  2         TS     0
 0466  8         TC     Q               DONE
 0467   STZ1     CAF    ZERO
 0468            INDEX  ADDRWD
 0469  2         TS     0
 0470   RE-ENTER CS     BANKSET         ROUTINE  SIMILAR TO *DANZIG* EXCEPT THAT
 0471  2         TS     BANKREG         NO PUSHING DOWN IS DONE AT END OF EQUN.
 0472            CCS    ORDER           IT IS USED BY MISCELLANEOUS INSTRUCTIONS
 0473  2         TC     LOWWD           AND BRANCHES WHICH FAILED
 0474            INDEX  LOC             IF WE HAD RETURNED DIRECTLY TO THE MAIN
 0475            CS     1
 0476            CCS    A
 0477            TC     IPROC           IT IS USED BY BRANCH INSTRUCTIONS WHICH
 0478  2NOOP     NOOP                   IN CASE THE FIRST ADDRESS WAS INACTIVE
 0479            INDEX  ADRLOC          SEE IF A LEFT-OVER ADDRESS
 0480            CS     1
 0481            CCS    A
 0482            TC     NEWEQUN         NO - START NEW EQUATION
 0483   LOW7     OCT    177
 0484  2         TC     STORADR         YES - MUST BE STORE ADDRESS
 0485  8STOR1    EQUALS STZ1 +1
 0486   TAG      CCS    CYR             SETS TAG1 ACCORDING TO SIGN BIT IN CYR
 0487            CAF    ZERO
 0488            CCS    A               SKIP NEXT INS WITHOUT CHANGING Q
 0489            CAF    ONE
 0490            AD     FIXLOC          INDEXES AND STEPS IN VAC AREA
 0491            TS     TAG1
 0492  2         TC     Q
 0493  2TCBUF    ADRES  BUF
 0494   DSU2     TC     DPSET           DP SUBTRACT
 0495            TC     ADDTOSUB
 0496  2         TC     DAD2 +1
 0497   DBSU     TC     DPSET
 0498            TC     DACCOM          COMPLEMENT DP ACCUM
 0499  2         TC     DAD2 +1         AND ADD
 0500   MPACCOM  CS     MPAC +2         COMPLEMENT MPAC
 0501            TS     MPAC +2
 0502   DACCOM   CS     MPAC +1
 0503            TS     MPAC +1
 0504            CS     MPAC
 0505            TS     MPAC
 0506  2         TC     Q
 0507   DPSET    CS     ONE             SET UP DP MODE AND LOAD IF NECESSARY
 0508            TS     MODE
 0509            CCS    NEWEQIND
 0510            TC     LOAD
 0511  2         TC     Q
 0512   VECSET   CS     ZERO            SIMILARLY FOR VECTORS
 0513            TS     MODE
 0514            CCS    NEWEQIND
 0515            TC     LOAD
 0516  2         TC     Q
 0517   TPSET    CS     TWO             AND FOR TP
 0518            TS     MODE
 0519            CCS    NEWEQIND
 0520            TC     LOAD
 0521  8         TC     Q
 0522   DAD2     TC     DPSET           DOUBLE PRECISION ADD INSTRUCTION
 0523            CAF    DAD2 +4
 0524            TC     DAD1            PROGRAM USES CLOSED SUBROUTINE DAD1,
 0525  2         TC     INT1            WITH ADDRESSES SET UP IN ADDRWD, TEM2
 0526  2+4       ADRES  MPAC
 0527   TSU1     TC     TPSET           TRIPLE PRECISION SUBTRACT INSTRUCTION
 0528            TC     ADDTOSUB
 0529  2         TC     TRAD +1
 0530   TRAD     TC     TPSET           TRIPLE PRECISION ADD INSTRUCTION
 0531            TC     +2
 0532  2         TC     INT1
 0533   +3       XCH    Q
 0534            TS     TEM5
 0535            CAF    DAD2 +4
 0536            TS     TEM2
 0537            INDEX  A
 0538            XCH    2
 0539            INDEX  ADDRWD
 0540            AD     2
 0541            INDEX  TEM2
 0542            TS     2               AGAIN SKIPPING, AS IN DAD1
 0543            CAF    ZERO
 0544            INDEX  TEM2
 0545            AD     1
 0546  2         TC     DAD1 +3         FINISH IN DAD1
 0547  8         TC     TEM5            AND RETURN
 0548   DAD1     TS     TEM2            DOUBLE PRECISION ADD ROUTINE
 0549            INDEX  TEM2            POLYNOMIAL EVALUATOR ENTERS HERE.
 0550            XCH    1
 0551   +3       INDEX  ADDRWD
 0552            AD     1
 0553            INDEX  TEM2
 0554            TS     1               SKIPS IF OVERFLOW WITH COUNT IN A
 0555            CAF    ZERO            NO OVERFLOW IF HERE
 0556            INDEX  TEM2            ARRIVE HERE WITH 1 OR -1 IN A IF OVERFLO
 0557            AD     0
 0558            INDEX  ADDRWD
 0559            AD     0
 0560            INDEX  TEM2
 0561            TS     0               AND AGAIN SKIP IF OVERFLOW
 0562            TC     Q               EXIT IF NONE
 0563            TS     OVFIND          SAVE ANY OVERFLOW FOR BOV TESTING
 0564  2         TC     Q
 0565   8TO2     TS     TEM8            MOVES THE DP WORD LOCATED AT THE ADDRESS
 0566            INDEX  A               IN A TO THE ADDRESS IN TEM2
 0567            CS     0
 0568            CS     A
 0569            INDEX  TEM2
 0570            TS     0
 0571            INDEX  TEM8
 0572            CS     1
 0573            CS     A
 0574            INDEX  TEM2
 0575            TS     1
 0576  2         TC     Q
 0577   ADDTOSUB XCH    ADDRWD          BY PUTTING THE APPROPRIATE BITS IN
 0578            AD     ATSBITS         ADDRWD, DAD1 DOES A DOUBLE SUBTRACT IN-
 0579            TS     ADDRWD          STEAD OF A DOUBLE ADD.
 0580  8         TC     Q
 0581   DMP2     TC     DPSET           DP MULTIPLY (AND ROUND) ROUTINE
 0582            XCH    ADDRWD
 0583            AD     BUGBITS         MAKE EXENDED CODE ADDRESS.
 0584   DSQ2     TS     TEM4            ENTRY FROM DSQ ROUTINE.
 0585            XCH    DAD2 +4         C(DAD2 +4) = TC MPAC
 0586            TC     DMP1            EXECUTE MULTIPLY AT DMP1, THEN EXIT
 0587            TC     TCS1            VIA TCS1 TO MOVE (BUF TO BUF+2)
A0588  2                                INTO (MPAC TO MPAC+2).
 0589   OCT40020 CS     CYR
 0590            CCS    CYR
 0591   MPACRND  CAF    DAD2 +4         SET UP ROUND SUBROUTINE TO ROUND MPAC.
 0592            TC     PREROUND +1
 0593  2         TC     DANZIG
 0594   SHIFTR1  TC     DPSET           TSRT INSTRUCTION.
 0595            TS     BANKREG         SUBROUTINE IN BANK 0
 0596            TC     TRUE2           GET INTEGER ADDRESS BACK
 0597            TC     SHIFTR -1       WITH DECREMENTED COUNT IN A.
 0598  8         TC     DANZIG
 0599   DMP1     TS     TEM2            GENERAL PURPOSE DP MULTIPLICATION
 0600            INDEX  TEM2            POLYNOMIAL ENTERS HERE.
 0601            CS     1
 0602            TS     OVCTR           -N1 TO OVCTR
 0603            INDEX  TEM4
 0604            MP     1               -M1N1
 0605            XCH    OVCTR           -U(M1N1) TO OVCTR, -N1 TO A
 0606            INDEX  TEM4
 0607            MP     0               -M0N1
 0608            XCH    OVCTR           -U(M0N1) TO OVCTR, -U(M1N1) TO A
 0609            AD     LP              MAYBE INCREMENT -U(M0N1) IN OVCTR
 0610            XCH    BUF +1          -L(M0N1)-U(M1N1) TO BUF+1
 0611            INDEX  TEM2
 0612            CS     0
 0613            TS     BUF +2          -N0 TO BUF+2
 0614            INDEX  TEM4
 0615            MP     1               -M1N0
 0616            XCH    OVCTR           -U(M1N0) TO OVCTR, -U(M0N1) TO A
 0617            XCH    BUF +1          -U(M0N1) TO BUF+1, -L(M0N1)-U(M1N1) TO A
 0618            AD     LP              MAYBE INCREMENT -U(M1N0) IN OVCTR
 0619            XCH    BUF +2          -L(M1N0)-L(M0N1)-U(M1N1) TO BUF+2, -N0 T
 0620  9O A
 0621            INDEX  TEM4
 0622            MP     0               -M0N0
 0623            XCH    OVCTR           -U(M0N0) TO OVCTR, -U(M1N0) TO A
 0624            AD     LP
 0625            XCH    BUF +1
 0626            AD     BUF +1
 0627            XCH    BUF +1
 0628            XCH    OVCTR
 0629            TS     BUF
 0630  2         TC     Q
R0631  8           TIMING:  86 MC +-2  OR 1.032 MS +-0.024
 0632  9                          30 WORDS
 0633   BDDV     TC     DPSET           BACKWARDS DP DIVIDE
 0634            CAF    ONE             SET SWITCH
 0635  2         TC     +2              AND GO ON AS USUAL
 0636   DDV      TC     DPSET           REGULAR DP DIVIDE
 0637            TS     DVSW            DPSET RETURNS WITH 0 IN A
 0638            CAF    LDANZIG         RETURN TO DANZIG
 0639            TS     TEMQ3
 0640            CAF    TCBUF
 0641            TS     TEM2
 0642            XCH    ADDRWD
 0643  2         TC     8TO2            X,X+1 INTO BUF, BUF+1
 0644            CAF    ZERO
 0645            TS     BANKREG         CALL IN BANK 0
 0646  2         TC     DDV0            TO BANK 0 PORTION
 0647   DMP      XCH    Q               DP MULTIPLY ROUTINE WHICH CAN BE CALLED
 0648            TS     TEM5            BY TC DMP, FOLLOWED BY A WORD CONTAINING
 0649            INDEX  A               THE ADDRESS OF THE MULTIPLIER WITH
 0650            CAF    0               BITS IN THE ORDER CODE TO CALL IN MP
 0651            TS     TEM4            IN THE EXTENDED CODE (UNKNOWN AS YET)
 0652            CAF    DAD2 +4
 0653            TC     DMP1
 0654            TC     TCS1
 0655            INDEX  TEM5            TIME IS 120 MC+-2, OR ABOUT 1.44 MS
 0656  2         TC     1               RETURN TO INSTRUCTION AFTER ADDRESS WORD
 0657   DAD      XCH    Q               DP ADD ROUTINE WORKING JUST AS MP ABOVE
 0658            TS     TEM5            HERE, HOWEVER, ONLY *ADRES X* IS NEEDED
 0659            INDEX  A               SINCE AD IS PART OF THE REGULAR CODE
 0660            CAF    0
 0661            TS     ADDRWD
 0662            CAF    DAD2 +4
 0663            TC     DAD1
 0664            INDEX  TEM5
 0665  8         TC     1               TIME IS 48+-2 MC OR 576 MICRO-SEC.
 0666   VACCOM   XCH    Q               COMPLEMENT THE APPROPRIATE VAC
 0667            TS     TEM5
 0668            CS     VACLOC
 0669            COM
 0670            XCH    ADDRWD
 0671            TS     TEM4
 0672  2         TC     VCS1 +2
 0673   VSU1     TC     VECSET          DP VECTOR SUBTRACT
 0674            TC     ADDTOSUB
 0675  2         TC     VAD1 +1         USES VAD ROUTINE WITH SUBS
 0676   BVSU1    TC     VECSET          DP VECTOR BACKWARDS SUBTRACT
 0677            TC     VACCOM          JUST COMPLEMENT VAC
 0678            XCH    TEM4
 0679            TS     ADDRWD
 0680  2         TC     VAD1 +1         AND ADD
 0681   VAD1     TC     VECSET
 0682            XCH    VACLOC          DP VECTOR ADD
 0683            TS     VACLOC
 0684            TC     DAD1
 0685            TC     AD2
 0686            TC     INCRT2
 0687            TC     DAD1
 0688            TC     AD2
 0689            TC     INCRT2
 0690            TC     DAD1
 0691  8         TC     INT1
 0692   DOT1     TC     VECSET          DP DOT PRODUCT ROUTINE
 0693            TC     DOT2
 0694            TC     MPACCOM
 0695   DPEXIT   CS     ONE             CHANGE MODE TO DOUBLE-PRECISION
 0696            TS     MODE
 0697  2         TC     DANZIG
 0698   AD2      XCH    ADDRWD
 0699            AD     TWO
 0700            TS     ADDRWD
 0701  2         TC     Q
 0702   DOT2     XCH    TWO             SUBROUTINE DOT2 COMPUTES THE TRIPLE-
 0703            TS     TEM11
 0704            XCH    TCBUF           SIGN, IN MPAC TO MPAC+2.
 0705            XCH    ADDRWD
 0706            AD     BUGBITS
 0707            TS     TEM4
 0708            XCH    Q
 0709            TS     TEM8
 0710            XCH    VACLOC
 0711            TS     VACLOC
 0712            TC     DMP1
 0713            XCH    BUF
 0714            TS     MPAC
 0715            XCH    BUF +1
 0716            TS     MPAC +1
 0717            XCH    BUF +2
 0718            TS     MPAC +2
 0719            TC     INCRT4
 0720            TC     INCRT2
 0721            TC     DMP1
 0722            TC     TRAD +3
 0723            TC     INCRT4
 0724            XCH    VACLOC
 0725            TS     VACLOC
 0726            AD     FOUR
 0727            TC     DMP1
 0728            TC     TRAD +3
 0729  8         TC     TEM8
 0730   INCRT4   XCH    TEM4
 0731            AD     TEM11
 0732            TS     TEM4
 0733  2         TC     Q
 0734   VXM1     TC     VECSET          DP VECTOR TIMES MATRIX
 0735            CS     ADDRWD
 0736            TS     TEM10
 0737            XCH    TWO
 0738            TS     TEM9
 0739            XCH    SIX
 0740            TC     DOT2 +1
 0741  2         TC     MXV2            REST OF OPERATION USES MXV ROUTINE
 0742   MXV1     TC     VECSET          MATRIX TIMES DP VECTOR
 0743            CS     ADDRWD
 0744            TS     TEM10
 0745            XCH    SIX             PROGRAM USES DOT PRODUCT ROUTINES TO
 0746            TS     TEM9
 0747  2         TC     DOT2
 0748   MXV2     CAF    K2              USES VBUF
 0749            TC     STORDAC
 0750            CS     TEM10
 0751            AD     TEM9
 0752            TS     TEM10
 0753            TS     ADDRWD
 0754  2         TC     DOT2 +2
 0755            CAF    K2 +1
 0756            TC     STORDAC
 0757            XCH    TEM10
 0758            AD     TEM9
 0759            TS     ADDRWD
 0760  8         TC     DOT2 +2
 0761            CAF    K2
 0762            TS     ADDRWD
 0763            AD     FOUR
 0764            TC     STORDAC
 0765            TC     VCA1
 0766  2         TC     DANZIG
 0767   STORDAC  TS     TEM4            SUBROUTINE TO STORE MPAC, MPAC+1 IN
 0768            CS     MPAC            ADDRESSES INDICATED BY C(A) AT ENTRY.
 0769            INDEX  TEM4
 0770            TS     0
 0771            CS     MPAC +1
 0772            INDEX  TEM4
 0773            TS     1
 0774  2         TC     Q
 0775   VXSC1    CCS    NEWEQIND        DP VECTOR TIMES SCALAR
 0776            TC     VECSET          LOAD INSTRUCTION
 0777            CCS    MODE            IF NOT, WHICH MODE ARE WE IN
 0778   SEVEN    OCT    7
 0779  2MINUS13  DEC    -13
 0780  2         TC     VECCHECK
 0781            XCH    ADDRWD
 0782            AD     BUGBITS         TO CALL IN MP
 0783  2         TC     VXSC2
 0784   VECCHECK TC     VCA1            USE ADDRWD TO LOAD VECTOR
 0785  8         CAF    BUGMPAC
 0786   VXSC2    TS     TEM4
 0787            CS     VACLOC
 0788            COM
 0789            TC     DMP1
 0790            TC     PREROUND
 0791            TC     STB
 0792            TC     INCRT2
 0793            TC     DMP1
 0794            TC     ROUND
 0795            TC     STB
 0796            TC     INCRT2
 0797            TC     DMP1
 0798            TC     ROUND
 0799            TC     STB
 0800   ZEROEXIT CS     ZERO            CHANGE MODE TO VECTOR
 0801  2         TC     DPEXIT +1
 0802  2INT1     EQUALS DANZIG
 0803   INCRT2   XCH    TEM2
 0804            AD     TWO
 0805            TS     TEM2
 0806  8         TC     Q
 0807   SHORTMP  XCH    MPAC +2         MULTIPLY THE CONTENTS OF MPAC,MPAC+1,
 0808            EXTEND                 MPAC+2 BY THE SINGLE PRECISION NUMBER
 0809            MP     MPAC +2         ARRIVING IN A.
 0810  2         XCH    MPAC +2
 0811   SHORTMP2 XCH    MPAC +1         FASTER BUT SLOPPIER VERSION FOR DP
 0812            EXTEND
 0813            MP     MPAC +1
 0814            TS     OVCTR
 0815            XCH    LP
 0816            AD     MPAC +2         THE SHORTMP2 RESULT WILL BE OFF IN THE
 0817            XCH    MPAC +2           LAST BIT IF THIS AD OVERFLOWS.
 0818            XCH    MPAC
 0819            EXTEND
 0820            MP     MPAC +1
 0821            XCH    OVCTR
 0822            AD     LP
 0823            XCH    MPAC +1
 0824            XCH    OVCTR           ARGUMENT IN OVCTR UPON EXIT
 0825            TS     MPAC
 0826  2         TC     Q
 0827   PREROUND CAF    TCBUF
 0828  2         TS     TEM8
 0829   ROUND    CAF    ZERO            ROUND THE TRIPLE-PRECISION NUMBER WHOSE
 0830            INDEX  TEM8            ADDRESS IS IN TEM8 TO DOUBLE-PRECISION,
 0831            XCH    2               SETING THE LOWEST ORDER OF THE THREE
 0832            DOUBLE                 WORDS TO ZERO IN THE PROCESS
 0833            TS     OVCTR
 0834  2         TC     Q               DONE IF DOESNT SKIP
 0835            INDEX  TEM8
 0836            AD     1
 0837            INDEX  TEM8
 0838            TS     1
 0839  2         TC     Q
 0840            INDEX  TEM8
 0841            AD     0
 0842            INDEX  TEM8
 0843            TS     0               ANY CARRIES BEYOND THIS POINT ARE
 0844  2         TC     Q               OVERFLOW
 0845            TS     OVFIND
 0846  8         TC     Q
 0847   STB      CS     BUF
 0848            INDEX  TEM2
 0849            TS     0
 0850            CS     BUF +1
 0851            INDEX  TEM2
 0852            TS     1
 0853  2         TC     Q
 0854   K2       0      VBUF
 0855            0      VBUF +2
 0856  2         0      VBUF +4
 0857  2STORTEST EQUALS K2 -2
 0858   SEQ      OCT    2
 0859   ZERO     OCT    0
 0860   FOUR     OCT    4
 0861   TWO      OCT    2
 0862  2NEG0     OCT    -0
 0863   VPROJ1   TC     VECSET          VECTOR PROJECT
 0864            TC     DOT2            LEAVES (VAC.X)VAC IN VAC
 0865            TC     DACCOM
 0866  2         TC     VXSC2 -1        FINISH IN VXSC (USING MPAC)
 0867   CROSS1   TC     VECSET          DP VECTOR CROSS PRODUCT (BOTH WAYS)
 0868            XCH    TCBUF
 0869            XCH    ADDRWD
 0870            AD     BUGBITS         AGAIN FOR MP
 0871            TS     BASE
 0872            AD     TWO             WHERE THE VECTOR X IS THAT ADDRESSED
 0873            TS     TEM4            BY THE ORDER, AND V IS C(VAC).
 0874  8         XCH    TWO
 0875   LUP      TS     IND
 0876            INDEX  IND
 0877            XCH    SEQ
 0878            AD     VACLOC
 0879            TC     DMP1
 0880            INDEX  IND
 0881            XCH    SEQ +2
 0882            AD     K2
 0883            TS     TEM6
 0884            TS     TEM2
 0885            TC     STB
 0886            INDEX  IND
 0887            XCH    SEQ
 0888            AD     BASE
 0889            TS     TEM4
 0890            INDEX  IND
 0891            XCH    SEQ +1
 0892            AD     VACLOC
 0893            TC     DMP1
 0894            XCH    TEM6
 0895            TC     DAD1
 0896            CCS    IND
 0897  2         TC     LUP
 0898   CREXIT   XCH    K2
 0899            TS     ADDRWD
 0900            TC     VCS1            VXV
 0901  8LDANZIG  TC     DANZIG
R0902  2DOUBLE-PRECISION POLYNOMIAL EVALUATION ROUTINE.
R0903  2PROGRAM ENTRY
R0904   L        TC     POLY
R0905                                                                N
R0906   L+1      OCT    -2N             COMPUTES A  + A X + ... + A X , WHERE
R0907                                             0    1           N
R0908   L+2      D.P.   - A             X = C(MPAC).
R0909  2                   0
R0910  2-   -   -   -   -   -   -   -
R0911   L+2+2N   D.P.   - A
R0912  2                   N
R0913  2L+4+2N   NEXT OPERATION
 0914   POLY     CAF    BUGBITS2        CONTAINS XCADR VBUF
 0915            TS     TEM4
 0916            CAF    ZERO            ZERO INTO BUF, BUF+1 TO START POLYLUP
 0917            TS     BUF
 0918  2         TS     BUF +1
 0919            XCH    MPAC            ARGUMENT  X  INTO 6T, 7T
 0920            TS     VBUF            TEMPORARY STORAGE
 0921            XCH    MPAC +1
 0922  2         TS     VBUF +1
 0923            CAF    DAD2 +4         ADDRESS OF MPAC
 0924  2         TS     TEM2
 0925            INDEX  Q               2N  INTO 10T
 0926            CAF    0
 0927            TS     TEM10
 0928            AD     Q               EXIT ADDRESS INTO 11T
 0929            AD     THREE
 0930            TS     TEM9
 0931  8         TC     POLYLUP +3
 0932   POLYLUP  TS     TEM10
 0933  2         TC     DMP1 +1
 0934            XCH    ADDRWD
 0935    +3      AD     NEG2            REDUCE COEFFICIENT INDEX BY 1
 0936            TS     ADDRWD          COEFFICIENT LOC IN ADDRWD FOR USE BY
 0937            TC     TCS1 +2         -BUF,BUF+1 INTO MPAC,MPAC+1
 0938  2         TC     DAD1 +1         - COEFF + (BUF) INTO BUF
 0939            CCS    TEM10
 0940            AD     NEG1            THE AD NEG1 ORDER, -0 WILL BE THE END
 0941  2         TC     POLYLUP
 0942  2BUGBITS2 XCADR  VBUF            USED BY POLY
 0943  8         TC     TEM9            RETURN
 0944   ITCF     CS     BANKSET         ITC - UNCONDITIONAL TRANSFER
 0945            XCH    ADRLOC          PLACE IN QPRET THE POLISH ADDRESS OF
 0946            MASK   LOW10           THE NEXT EQUATION. ITC MUST BE THE LAST
 0947            AD     ADRLOC          NON-BLANK OPERATOR IN AN EQUATION
 0948            AD     ONE
 0949            INDEX  FIXLOC
 0950            TS     QPRET
 0951            CCS    ADDRWD
 0952  2         TC     INTPRET +1      BANKREG IS ALREADY SET
 0953   BOVF     CCS    OVFIND          BRANCH IF OVERFLOW INDICATOR IS ON
 0954            TC     +2              OVFIND CAN BE EITHER -1, 0, OR +1
 0955            TC     DANZIG          IT WAS OFF - DISPATCH NEXT OPERATOR.
 0956            TS     OVFIND          IT WAS ON - SET TO 0 (OFF)
 0957  2         TC     DOBR            AND DO THE BRANCH
 0958   VSLT1    TC     VECSET          DP VECTOR SHIFT LEFT
 0959            TS     BANKREG
 0960  2         TC     VSLT2
 0961   VSRT1    TC     VECSET          DP VECTOR SHIFT RIGHT
 0962            TS     MPAC +1         SET SHIFTING BIT IN MPAC,MPAC+1
 0963            TS     BANKREG         CALL IN BANK ZERO.
 0964            TC     TRUE2           GET INTEGER ADDRESS
 0965            AD     NEG13
 0966            CCS    A
 0967            TC     VSRT3
 0968   NEG14    DEC    -14
 0969            TC     +1
 0970            INDEX  ADDRWD
 0971            CAF    BIT15
 0972            TS     MPAC
 0973  2         TC     VECCHECK +1     FINISH IN VXSC ROUTINE.
 0974   VSRT3    INDEX  A
 0975            CAF    BIT14
 0976            XCH    MPAC +1         WHICH PREVIOUSLY CONTAINED A ZERO
 0977  2         TC     VSRT3 -2
 0979  2         SETLOC 5777            STANDARD LOCATION FOR EXTENDING BITS
 0980   OPOVF    XCADR  0
L 001  2BANK 03 INTERPRETER SECTION
 0001  2         SETLOC 6000
 0002   BMN1     TC     BRANCH          BRANCH MINUS
 0003            TC     RE-ENTER
 0004            TC     RE-ENTER
 0005  2         TC     DOBR
 0006   BPL1     TC     BRANCH          BRANCH PLUS
 0007            TC     DOBR
 0008            TC     DOBR
 0009  2         TC     RE-ENTER
 0010   BZE1     TC     BRANCH          BRANCH ZERO
 0011            TC     RE-ENTER
 0012            TC     DOBR
 0013  2         TC     RE-ENTER
 0014   BHIZ1    CCS    MPAC            BRANCH ON HIGH ORDER ZERO
 0015            TC     RE-ENTER        PNZ
 0016            TC     DOBR
 0017            TC     RE-ENTER
 0018  2         TC     DOBR
 0019   BRANCH   XCH    Q
 0020            TS     BRANCHQ
 0021            CCS    MPAC
 0022            TC     BRANCHQ
 0023            TC     +2
 0024  2         TC     MINUS
 0025            CCS    MPAC +1
 0026            TC     BRANCHQ
 0027            TC     +2
 0028  2         TC     MINUS
 0029            CCS    MPAC +2
 0030            TC     BRANCHQ
 0031            TC     +2
 0032   MINUS    CAF    ONE
 0033            AD     ONE
 0034            AD     BRANCHQ
 0035  8         XAQ
 0036   TRUE2    CS     FIXLOC          RESTORES INTEGER ADDRESSES
 0037            AD     ADDRWD
 0038            TS     ADDRWD
 0039            CCS    A               WE MUST ELIMINATE THE MINUS ZERO CASE
 0040            TC     Q               OK HERE
 0041            TC     CCSHOLE
 0042            TC     +2              IF ADDRESS WAS NEGATIVE
 0043            TC     DANZIG          FAST EXIT FOR ZERO SHIFT COUNTS
 0044            INDEX  MODE            RIGHT SHIFT INSTEAD OF A LEFT ONE
 0045            TC     +3              CCS  FOLLOWED BY ADD LEFT THE COUNT POS.
 0046            TC     SHIFTR1 +3      SO WE NEED ONLY CALL THE APPROPRIATE
 0047            TC     SHIFTR1 +3      SHIFT RIGHT INSTRUCTION.
 0048            CS     ADDRWD          PUT POSITIVE COUNT IN ADDRWD.
 0049            TS     ADDRWD
 0050            AD     NEG1            DECREMENT LIKE CCS BEFORE RETURNING.
 0051  2         TC     VSRT1 +4
 0052   AST      TC     TAG
 0053            CS     POLISH
 0054   SSTORE   INDEX  TAG1
 0055            XCH    40D             STEP REGISTER
 0056  2         TC     RE-ENTER
 0057   AXC      TC     TAG             ADDRESS TO INDEX COMPLEMENTED
 0058            XCH    POLISH
 0059  2         TC     XSTORE
 0060   AXT      TC     TAG
 0061            CS     POLISH
 0062   XSTORE   INDEX  TAG1
 0063            XCH    38D             MAY HAVE OVERFLOWED
 0064  2         TC     RE-ENTER
 0065   LXA      TC     TAG
 0066            INDEX  ADDRWD          MUST BE ERASABLE - NOT NEEDED OTHERWISE
 0067            CS     0
 0068   +3       CS     A
 0069  2         TC     XSTORE
 0070   LXC      TC     TAG             LOAD INDEX FROM ADDRESS COMPLEMENTED
 0071            INDEX  ADDRWD
 0072            CS     0
 0073  2         TC     XSTORE
 0074   SXA      TC     TAG
 0075            INDEX  TAG1
 0076            CS     38D             GET INDEX
 0077            CS     A
 0078  8         TC     STOR1
 0079   TIX      TC     TAG
 0080            INDEX  TAG1            GET APPROPRIATE STEP REGISTER
 0081            CS     40D             STEP REGISTER
 0082            INDEX  TAG1
 0083            AD     38D
 0084            TS     TEM2            TO TEMPORARY
 0085            CCS    A
 0086            XCH    TEM2            DECREMENT INDEX AND BRANCH
 0087            TC     TIXBR
 0088            TC     RE-ENTER        INDEX LEFT ALONE AND NO BRANCH
 0089  2LNOBR    TC     RE-ENTER
 0090   TIXBR    INDEX  TAG1
 0091            TS     38D
 0092            CS     POLISH
 0093  2         TC     DOBR2
 0094   INCR     TC     TAG
 0095            CS     POLISH
 0096            INDEX  TAG1
 0097            AD     38D
 0098  2         TC     XSTORE
 0099   XCHX     TC     TAG
 0100            INDEX  ADDRWD
 0101            XCH    0
 0102            INDEX  TAG1
 0103            XCH    38D
 0104  2         TC     STOR1
 0105   XSU      TC     TAG             INDEX REGISTER SUBTRACT FROM ERASABLE
 0106            INDEX  ADDRWD
 0107            CS     0
 0108  2         TC     INCR +2
 0109   XAD      TC     TAG             INDEX REGISTER ADD FROM ERASABLE
 0110            INDEX  ADDRWD
 0111            CS     0
 0112            COM
 0113  8         TC     INCR +2
 0114   VDEF     CAF    ZERO
 0115            AD     VACLOC          USES MPAC AS V0, PUSHES UP FOR V1, AND
 0116            TS     TEM2            PUSHES UP AGAIN FOR V2. THE RESULTING
 0117            CAF    DAD2 +4         VECTOR IS LEFT IN VAC
 0118            TC     8TO2
 0119            TC     INCRT2
 0120            TC     PUSHUP1
 0121            TC     8TO2
 0122            TC     INCRT2
 0123            TC     PUSHUP1
 0124            TC     8TO2
 0125  2         TC     ZEROEXIT        T0 DECLAIN MO45 IS VECTOR
 0126   ITA1     CCS    CYR
 0127            TC     +6              FOR ITA
 0128            TC     CCSHOLE
 0129            INDEX  ADDRWD          PICK UP ADDRESS
 0130            CS     0
 0131            COM
 0132  2         TC     DOBR2           AND DO THE BRANCH
 0133   +6       INDEX  FIXLOC
 0134            CS     QPRET
 0135  2         TC     SXA +3          COMPLEMENT AND DEPOSIT
 0136   EXIT     CCS    CYR             RETURN TO BASIC
 0137  2         TC     EXIT2           EXIT.
 0138  2         TC     CCSHOLE
 0139            CS     POLISH          HERE TO RETURN TO BASIC AT X
 0140  2         TC     SWCALL
 0141   SIGN     INDEX  ADDRWD          AFFIX SIGN OF X TO MPAC OR VAC
 0142            CCS    0               MUST BE NON-ZERO
 0143            TC     DANZIG
 0144            TC     +2              EXAMINE MINOR PART
 0145  2         TC     COMP            COMPLEMENT VECTOR OR SCALAR.
 0146            INDEX  ADDRWD
 0147            CCS    1
 0148            TC     DANZIG
 0149            TC     DANZIG          NO OPERATION IF C(ADDRWD,ADDRWD+1) = 0
 0150            TC     COMP
 0151  8         TC     DANZIG
 0152   VSQ      CS     VACLOC          TAKE SQUARE OF LENGTH OF VECTOR IN VAC.
 0153            COM
 0154            TS     ADDRWD
 0155  2         TC     DOT1 +1         FINISH IN DOT PRODUCT ROUTINE.
 0156  2         AD     ONE             FROM TRUE2
 0157   SHIFTR   XCH    Q
 0158            TS     TEM5            SHIFT TP MPAC RIGHT ACCORDING TO INTEGER
 0159            CCS    Q               PICK UP COUNT, SUBTRACTING ONE
 0160   +3       AD     NEG13           RETURNS HERE FROM SR14
 0161            CCS    A
 0162            AD     ONE             SHIFT COUNT MORE THAN 14 - DECREMENT BY
 0163            TC     SR14            14 AND EXCHANGE
 0164            TC     +2              REMAINING SHIFT COUNT BETWEEN 1 AND 13
 0165            TC     SR14            MULTIPLES OF 14 END UP HERE
 0166            COM
 0167            INDEX  A               PICK UP PROPER SHIFTING BIT
 0168            CAF    BIT2
 0169            TC     SHORTMP         DO SHIFT BY MULTIPLICATION
 0170  2         TC     TEM5            (TEM5 CONTAINS SQRT RETURN IF SQRT CALL)
 0171   SR14     XCH    MPAC            SAVE REDUCED COUNT
 0172            XCH    MPAC +1
 0173            XCH    MPAC +2
 0174            CAF    ZERO
 0175            XCH    MPAC            NOW BRING IT BACK
 0176            CCS    A               SEE IF REMAINING COUNT IS ZERO
 0177            TC     SHIFTR +3       NON-ZERO - BACK TO SHIFT LOOP
 0178  8         TC     TEM5            FINISHED
 0179   ABVAL1   TC     ABVAL
 0180  2         TC     DPEXIT          MODE IS NOW DP
 0181   ABVAL    XCH    Q               TAKES HALF THE LENGTH OF THE VECTOR IN
 0182            TS     TEM10           VAC
 0183            TC     VSR1            SHIFT VECTOR RIGHT ONE
 0184            TC     DOT2            TAKE THE SQUARE OF ITS LENGTH
 0185            CS     FOUR            STORE SQUARE OF LENGTH IN REGISTERS 28
 0186            AD     VACLOC          AND 29 OF VAC AREA.
 0187            TC     STORDAC
 0188            TC     MPACCOM
 0189            TC     SQRT3           TAKE A TRIPLE-PRECISION SQRT (DP ANSWER)
 0190  2         TC     TEM10           AND EXIT
 0191   VSR1     XCH    Q               SUBROUTINE WHICH SHIFTS VECTOR IN VAC
 0192            TS     TEM9            RIGHT ONE PLACE. USED BY ABVAL AND UNIT
 0193            CAF    FOUR
 0194            AD     VACLOC          USED BY ABVAL AND UNIT
 0195            TC     SR1             VECTOR IS SHIFTED RIGHT SO DOT PRODUCT
 0196            XCH    TEM11           WONT OVERFLOW.
 0197            AD     MINUS2
 0198            TC     SR1
 0199            XCH    TEM11
 0200            AD     MINUS2
 0201            TS     ADDRWD          FOR THE DOT ROUTINE.
 0202  2         TC     SR1             VECTOR IS NOW SHIFTED RIGHT
 0203  2         TC     TEM9
 0204   SSM      TC     BRANCH          SET SIGN OF MPAC,MPAC+1 MINUS. USED BY
 0205            TC     MPACCOM         SIGN INSTRUCTION
 0206            TC     DANZIG
 0207  2         TC     DANZIG
 0208   SSP      TC     BRANCH
 0209            TC     DANZIG
 0210            TC     DANZIG
 0211            TC     MPACCOM
 0212  8         TC     DANZIG
 0213   SQUARE   CAF    BUGMPAC         SQUARE MPAC AND LEAVE RESULT IN MPAC, +2
 0214  2         TC     DSQ2            CONTINUE AS IN DMP.
 0215   COMP     CS     MODE
 0216            DOUBLE
 0217            INDEX  A
 0218            TC     +1
 0219            TC     VACCOM
 0220            TC     DANZIG
 0221            TC     MPACCOM         FOR TP
 0222            TC     DANZIG
 0223  2         TC     -2
 0224   SMOVE    CAF    ZERO
 0225            TS     MPAC +1
 0226  2         TC     DANZIG
 0227   NEXT     CCS    CYR             NEXT AND ITCQ OPERATORS
 0228            CCS    ADRLOC          NEXT - KNOCK DOWN ADRLOC BY ONE
 0229            TC     +4              AND BEGIN NEXT EQUN IMMEDIATELY
 0230            INDEX  FIXLOC          ITCQ - PICK UP QPRET AND BRANCH
 0231            XCH    QPRET
 0232  2         TC     DOBR2
 0233   +4       TS     ADRLOC
 0234            CAF    ONE             TURN ON LOAD INDICATOR
 0235  2         TC     SWLODIND
 0236   NOLOAD   CCS    ADRLOC          NOLOD AND ROUND OPERATORS. DECREMENT
 0237            TS     ADRLOC          ADRLOC SINCE WE SHOULDNT HAVE TAKEN AN
 0238            CCS    CYR             ADDRESS. SEE IF NOLOD OR ROUND
 0239            CAF    ZERO            NOLOD - SET NEWEQIND TO ZERO
 0240            TC     +4
 0241            CS     ONE             MODE IS NOW DP
 0242            TS     MODE
 0243  2         TC     MPACRND         GO ROUND MPAC AND RETURN TO DANZIG
 0244   SWLODIND TS     NEWEQIND
 0245  8         TC     DANZIG
 0246   SL1      XCH    MPAC +2         ROUTINE WHICH SHIFTS TRIPLE ACCUMULATOR
 0247            DOUBLE                 LEFT ONE PLACE. IT IS USED BY TSLT AND
 0248            TS     MPAC +2         TSLC
 0249            CAF    ZERO
 0250            AD     MPAC +1
 0251            AD     MPAC +1
 0252            TS     MPAC +1
 0253            CAF    ZERO
 0254            AD     MPAC
 0255            AD     MPAC
 0256            TS     MPAC
 0257            TC     Q
 0258            TS     OVFIND          SET OVFIND IF ENTIRE WORD OVERFLOWS
 0259  2         TC     Q
 0260   SHIFTL   TC     TRUE2           TP LEFT SHIFT - GET INTEGER ADDRESS
 0261            TC     +3
 0262   LEFTLOOP TS     ADDRWD
 0263            TC     SL1
 0264   +3       CCS    ADDRWD
 0265            TC     LEFTLOOP
 0266  2         TC     DANZIG
 0267   TSLC     CAF    ZERO            NORMALIZATION - START BY SETTING COUNT
 0268            TS     TEM2            TO ZERO
 0269            TC     BRANCH
 0270            TC     +2
 0271  2         TC     SLCANS
 0272   RETRN    CS     MPAC            HERE FOR NON-ZERO
 0273            DOUBLE
 0274            OVSK                   SKIP ON OVERFLOW
 0275            TC     +2              NO OVERFLOW - SHIFT AGAIN
 0276            TC     SLCANS          DONE - WE OVERFLOWED
 0277            XCH    TEM2
 0278            AD     ONE
 0279            TS     TEM2
 0280            TC     SL1             DO THE SHIFT
 0281  2         TC     RETRN           AND LOOP
 0282   SLCANS   CS     TEM2            STORE COMPLEMENT OF COUNT
 0283            INDEX  ADDRWD
 0284            TS     0
 0285  8         TC     DANZIG
 0286   SWITCHEM CS     POLISH          SWITCH AND TEST INSTRUCTIONS.
 0287            TS     ADDRWD          DECOMPOSE ADDRESS INTO SWITCH WORD AND
 0288            MASK   SBITMASK        BIT. MULTIPLES OF 16 ARE EXCLUDED.
 0289            XCH    ADDRWD
 0290            EXTEND
 0291            MP     BIT11
 0292  2         TS     TEM8            0, 1, OR 2.
 0293            INDEX  ADDRWD          PICK UP A 1 IN SPECIFIED SWITCH POS.
 0294            CAF    BIT15 -1        SWITCHES ARE NUMBERED 1 - 15 D.
 0295            TS     TEM4
 0296            INHINT
 0297            INDEX  TEM8
 0298            MASK   STATE           GET BS WHERE B IS BIT AND S IS *STATE*
 0299  2         TS     TEM5             - THE WORD CONTAINING THE 15 SWITCHES
 0300            CCS    CYR             DECIDE WHETHER INST. IS *SWITCH* OR TEST
 0301            TC     INCADR          TO PICK UP NEXT ADDRESS
 0302            TC     +3
 0303            CS     TEM4
 0304  2         TC     SWITCHIT        SWITCH BIT.
 0305            RELINT
 0306            CCS    TEM5            TEST SWITCH
 0307            TC     RE-ENTER        IT WAS ON - DONT BRANCH
 0308            TC     SWF/F           OFF - GO TO FIXED-FIXED TO PICK UP ADR.
 0309  2         TC     RE-ENTER        COMES HERE IF BIT 15 WAS ON
 0310   SWITCHIT INDEX  TEM8            WE DESIRE THE LOGICAL EXCLUSIVE OR OF B
 0311            MASK   STATE
 0312            TS     Q               SET THIS BIT TO 0SO AD IS OR.
 0313            INDEX  TEM8
 0314            CS     STATE
 0315            MASK   TEM4            COMPLEMENT OF SWITCH BIT.
 0316            AD     Q               OR
 0317            INDEX  TEM8
 0318            TS     STATE
 0319            RELINT
 0320  8         TC     RE-ENTER        DONT PUSH-DOWN IF AT END.
 0321   VSLT2    TS     MPAC +1         SET TO ZERO IN CASE OF RIGHT SHIFT.
 0322  2         TC     TRUE2           RETURNS TO CALLER IF COUNT PNZ.
 0323            TC     VSLTEST
 0324   VSLTLOOP TS     ADDRWD
 0325            CAF    ZERO
 0326            AD     VACLOC
 0327            TS     TEM2
 0328            TC     VSL1
 0329            TC     INCRT2
 0330            TC     VSL1
 0331            TC     INCRT2
 0332            TC     VSL1
 0333   VSLTEST  CCS    ADDRWD
 0334            TC     VSLTLOOP
 0335  2         TC     DANZIG
 0336   VSL1     INDEX  TEM2
 0337            XCH    1
 0338            DOUBLE
 0339            INDEX  TEM2
 0340            TS     1
 0341            CAF    ZERO
 0342            INDEX  TEM2
 0343            AD     0
 0344            INDEX  TEM2
 0345            AD     0
 0346            INDEX  TEM2
 0347            TS     0
 0348            TC     Q
 0349            TS     OVFIND
 0350  8         TC     Q
R0351  2DOUBLE-PRECISION SINE-COSINE ROUTINES.
R0352   THESE PROGRAMS ARE ENTERED AND EXIT IN THE INTERPRETIVE MODE, WITH
R0353   THE ARGUMENT IN MPAC AT ENTRY AND THE ANSWER IN MPAC AT EXIT.  THEY
R0354   COMPUTE, RESPECTIVELY, (1/2) COS (PI X)  AND  (1/2) SIN (PI X) WHERE
R0355  2X = C(MPAC) RANGES OVER THE INTERVAL (-1, +1).
R0356   PROGRAM USES THE SERIES
R0357                               3       5       7        9
R0358   (1/2) SIN(PI X) = C X + 4C X + 16C X + 64C X + 256C X .
R0359                      1      3       5       7        9
R0360   WHERE THE C COEFFICIENTS ARE FROM HASTINGS SERIES
R0361                          3     5     7     9
R0362   SIN(PI X/2) = C X + C X + C X + C X + C X .
R0363  2               1     3     5     7     9
 0364   COSINE   XCH    Q               CLOSED COSINE ROUTINE
 0365            TS     TEM8
 0366            TC     TSGNABS         FORM 1/2 - (ABS(X)) AND COMPUTE SINE
 0367            TC     DACCOM+
 0368  2         TC     SINE +2
 0369   SINE     XCH    Q               CLOSED SINE ROUTINE
 0370            TS     TEM8
 0371            TC     PARTSL1         DOUBLE ARGUMENT
 0372            TS     MPAC
 0373            TC     +2              IF DIDNT SKIP
 0374  2         TC     DACCOM          IF SO, WE WANT -SIN(X) = SIN(-X)
 0375            CS     MPAC
 0376            TS     VBUF +2         SAVE NEGATIVE OF ARGUMENT
 0377            TS     TEM2
 0378            DOUBLE
 0379            TS     Q
 0380  2         TC     SN1             IF ABS(X) LESS THAN 1/2
 0381            INDEX  A               CONTAINS +-1
 0382            CS     NEG1/2 +1
 0383            XCH    TEM2
 0384            AD     TEM2
 0385            AD     TEM2            (ADD +-1/2 TWICE TO MAKE +-1.0)
 0386            TS     MPAC
 0387            CS     MPAC +1
 0388            TS     MPAC +1
 0389            CS     MPAC
 0390  8         TS     VBUF +2
 0391   SN1      CS     MPAC +1         SAVE REST OF ARGUMENT
 0392            TS     VBUF +3
 0393            CAF    BUGMPAC         ADDRESS OF MPAC WITH MP BITS
 0394            TS     TEM4
 0395            CAF    DAD2 +4         SQUARE MPAC
 0396            TC     DMP1
 0397  2         TC     TCS1 +2
 0398            TC     POLY
 0399            DEC    8
 0400            2DEC   -0.3926990796          (   C /4)
A0401  2                                            1
 0402            2DEC   +0.6459637111          (  4C /4)
A0403  2                                            3
 0404            2DEC   -0.318758717           ( 16C /4)
A0405  2                                            5
 0406            2DEC   +0.074780249           ( 64C /4)
A0407  2                                            7
 0408            2DEC   -0.009694988           (256C /4)
A0409  2                                            9
 0410            TC     DMP             DMP BY X
 0411            XCADR  VBUF +2
 0412            TC     SL1             AND SHIFT LEFT 2
 0413            TC     SL1
 0414  2         TC     TEM8            DONE
 0415   SIN1     TC     SINE            INTERPRETER LINKAGE
 0416  2         TC     DANZIG
 0417   COS1     TC     COSINE
 0418  8         TC     DANZIG
 0419   ARCSIN   CAF    TCTAG+1         PICK UP ARCSIN BRANCH
 0420            AD     POSMAX          TO FORCE OVERFLOW
 0421  2         OVSK                   SKIP AND RESTORE NON-OVERFLOW
 0422   ARCCOS   CAF    TCEX            SET ARCCOS SWITCH
 0423            XCH    ESCAPE          NO SKIP, PLEASE
 0424            XCH    Q               ONLY HAVE TO SAVE Q IN ONE PLACE
 0425            TS     ARETURN
 0426            TC     TPAGREE         FORCE SIGN AGREEMENT SO WE CAN CHECK
 0427            CCS    A               SIZE OF ARGUMENT (SIGNUM RETURNS IN A).
 0428            TC     ACOSST          POSITIVE
 0429            TC     +2              ARCCOS = PI/2
 0430  2         TC     NEGARGU
 0431            CAF    QUARTER         ARCCOS(0) = .25(2PI).
 0432            TS     MPAC             (MPAC +1 IS ALREADY ZERO).
 0433  2         TC     ESCAPE
 0434   ACOSST   TC     PARTSL1         DOUBLE ARGUMENT
 0435            XCH    MPAC            NO SKIP, BUT EXAMINE ORIGINAL MPAC
 0436            AD     NEG1/2          MUST BE LESS THAN OR EQUAL TO 1/2
 0437            CCS    A
 0438            TC     ABORT           MAJOR PART GREATER THAN 1/2. NOTE THAT
 0439  2         OCT    01301           MPAC+1 IS NOT CHECKED SO A MARGIN EXISTS
 0440            TC     +4              NORMAL CASE
 0441            TS     MPAC            ARGUMENT WAS 1 (SCALED). LEAVE ZERO
 0442            TS     MPAC +1         AS RESULT AND EXIT
 0443  8         TC     ESCAPE
 0444   +4       CS     MPAC +1
 0445            TS     MPAC +1
 0446            TS     B +1
 0447            CS     MPAC
 0448            TS     B
 0449            AD     HALF
 0450            AD     HALF
 0451  2         TS     MPAC            SQRT ARGUMENT IS NOW READY
 0452  2         TC     +6              NORMAL PATH.
 0453            CAF    POSMAX          WE HAVE FALSE OVERFLOW PRESENT AND IT
 0454            TS     MPAC             MUST BE CORRECTED. MAJOR PART WAS ZERO
 0455            AD     MPAC +1          AND MINOR PART PNZ, SO FORM 1.0 - MPAC
 0456            AD     ONE              PROPERLY FOR THIS CASE.
 0457  2         TS     MPAC +1         GUARANTEED NO OVERFLOW.
 0458  2 +6      TC     SQRT2           GO TAKE THE SQUARE ROOT.
 0459            CS     B +1
 0460            XCH    MPAC +1
 0461            TS     B +1
 0462            CS     B
 0463            XCH    MPAC
 0464  8         TS     B
 0465            TC     POLY            EVALUATE HASTINGS POLYNOMIAL/2PI
 0466            DEC    14
 0467            2DEC*   .49999 99920   B-1*      HASTINGS COEFFICIENTS/2PI
 0468            2DEC*  -.06830 89201   B-1*
 0469            2DEC*   .02832 28913   B-1*
 0470            2DEC*  -.01597 09772   B-1*
 0471            2DEC*   .00983 31911   B-1*
 0472            2DEC*  -.00543 93193   B-1*
 0473            2DEC*   .00212 31556   B-1*
 0474            2DEC*  -.00040 18634   B-1*
 0475            TC     DMP             INTERPRETER SUBROUTINE ONLY
 0476            XCADR  B
 0477  2         TC     ESCAPE          GO TO ARCSIN/ARCCOS SWITCH (OR NEGARGU)
 0478   TAGIT    TC     DACCOM+
 0479            TC     ARETURN
 0480   PARTSL1  XCH    MPAC +1         DOES A DOUBLE SHIFT LEFT EXCEPT FOR THE
 0481            DOUBLE                 FINAL TS. USED BY SIN, COS, ASIN, AND
 0482            TS     MPAC +1         ACOS.
 0483            CAF    ZERO
 0484            AD     MPAC
 0485            AD     MPAC
 0486  2         TC     Q               POSSIBLY WITH OVERLOW PRESENT
 0487   NEGARGU  TC     DACCOM          ARCCOS(-X)=PI-ARCCOS(X)
 0488            CAF    TCSUBTR         SET SWITCH TO PERFORM ABOVE
 0489            XCH    ESCAPE
 0490            TS     ESCAPE2         ADDITIONAL SWITCH HERE.
 0491  8         TC     ACOSST
 0492   SUBTR    CS     MPAC
 0493            AD     HALF
 0494            TS     MPAC
 0495            CS     MPAC +1
 0496            TS     MPAC +1
 0497  4         TC     ESCAPE2         THIS IS NOW THE ARCSIN/ARCCOS SWITCH
 0498   TCTAG+1  TC     TAGIT +1
 0499   TCEX     EQUALS TCTAG+1
 0500  2TCSUBTR  TC     SUBTR
 0501   ARCSIN1  TC     ARCSIN
 0502  2         TC     DANZIG
 0503   ARCCOS1  TC     ARCCOS
 0504  2         TC     DANZIG
 0505   DACCOM+  CS     MPAC +1         USED BY SIN-COS AND ARCSIN-ARCCOS
 0506            TS     MPAC +1
 0507            CS     MPAC
 0508            AD     QUARTER
 0509            TS     MPAC
 0510  8         TC     Q
 0511   MBXCH    XCH    BUF             TO EXCHANGE MPAC AND BUF
 0512            XCH    MPAC
 0513            TS     BUF
 0514            XCH    BUF +1
 0515            XCH    MPAC +1
 0516            TS     BUF +1
 0517  2         TC     Q
 0518   DDV0     TS     MPAC +2         SET MPAC+2 TO ZERO TO RESUME DDV
 0519            TC     TSGNABS         SIGN AGGREMENT ETC
 0520            TS     TEM2            SAVE SGN
 0521            TC     MBXCH           SWITCH CONTENTS
 0522            TC     TSGNABS         SAME FOR ARGUMENT
 0523            AD     TEM2
 0524            CCS    A               TO GET SIGN OF RESULT
 0525            TC     +3
 0526            TC     DPDOFLO +1      HERE FOR 0/0 CASE
 0527            TC     +1
 0528            TS     TEM2
 0529            CCS    DVSW
 0530  2         TC     MBXCH           INTERCHANGE OLD DIVISOR AND DIVIDEND
 0531            CS     BUF             CHECK TO SEE IF C(BUF,BUF+1) LESS
 0532            AD     MPAC            THAN C(MPAC,MPAC+1). OVERFLOW CONDITION
 0533            CCS    A               IF NOT
 0534            TC     DDVOK           SCALING OK
 0535            TC     CCSHOLE
 0536            TC     DPDOFLO         TROUBLE HERE
 0537            CS     BUF +1          CHECK MINOR PARTS IF MAJORS EQUAL
 0538            AD     MPAC +1
 0539            CCS    A
 0540            TC     DDVOK
 0541            TC     CCSHOLE
 0542            TC     DPDOFLO         TROUBLE HERE
 0543  2         TC     DPDOFLO         AS WELL AS WHEN C(BUF,BUF+1)=C(MPAC,+1)
 0544   DDVOK    CAF    ZERO
 0545            AD     MPAC
 0546  8         TC     DPDNORT         TO NORMALIZE
 0547   SQRTDIV  XCH    Q               ENTRY FROM SQRT ROUTINE
 0548            TS     TEMQ3
 0549  2         TC     DVSTART
 0550   DPDNORM  XCH    BUF +1
 0551            DOUBLE
 0552            TS     BUF +1
 0553            CAF    ZERO
 0554            AD     BUF
 0555            AD     BUF
 0556            TS     BUF
 0557  2         TC     SL1 +3          TO DOUBLE MPAC
 0558   DPDNORT  TS     CYL             TO LOOK AT BIT 14
 0559            CCS    CYL
 0560            TC     DPDNORM
 0561            TC     +2
 0562            TC     DVSTART
 0563            XCH    BUF +1          HIGH ORDER ZERO
 0564            XCH    BUF
 0565            XCH    MPAC +1         SET MPAC +1 TO ZERO
 0566            TS     MPAC
 0567  8         TC     DPDNORT         AND TRY AGAIN
 0568   DVSTART  XCH    BUF             OK
 0569            INDEX  OPOVF
 0570            DV     MPAC
 0571            TS     OVCTR
 0572            INDEX  OPOVF
 0573            MP     MPAC +1
 0574   -1/2+2   AD     Q               COMPLIMENT OF REMAINDER.
 0575            CS     A
 0576            AD     BUF +1
 0577            OVSK
 0578            TC     +3              IF NOT
 0579            INDEX  OPOVF           IF OVERFLEW
 0580            SU     MPAC
 0581   +3       TS     BUF
 0582            CCS    A
 0583            AD     ONE
 0584            TC     +2
 0585            AD     ONE
 0586   +2       EXTEND                 WE NOW HAVE ABS(CORRECT BUF)
 0587            SU     MPAC
 0588            CCS    A
 0589            AD     ONE
 0590            TC     +2
 0591            TC     +4
 0592   +2       XCH    BUF
 0593            DOUBLE
 0594            CCS    A
 0595   +4       XCH    BUF
 0596            TC     +2
 0597            CS     BUF
 0598            INDEX  OPOVF
 0599  8         DV     MPAC
 0600   DPDSGNT  TS     MPAC +1
 0601            CCS    TEM2
 0602            TC     POSQUOT
 0603            CS     MPAC +1
 0604            TS     MPAC +1
 0605            CS     OVCTR
 0606            TS     MPAC
 0607  2         TC     TEMQ3
 0608   POSQUOT  XCH    OVCTR
 0609  2         TC     -3
 0610   DPDOFLO  CCS    TEM2
 0611            CAF    TWO
 0612            AD     NEG1
 0613            TS     OVFIND
 0614            EXTEND                 SET MPAC = +- POSMAX
 0615            MP     POSMAX
 0616            XCH    LP
 0617            TS     MPAC +1
 0618  8         TC     POSQUOT -2
 0619   TSGNABS  XCH    Q               SIGNUM AND ABSOLUTE VALUE
 0620            TS     TEMQ2
 0621  2         TC     TPAGREE
 0622            CCS    A               TEST SIGNUM
 0623            AD     ONE
 0624  2         TC     TEMQ2
 0625            TC     MPACCOM         COMPLEMENT IF NEGATIVE
 0626            CS     ONE
 0627  2         TC     TEMQ2
 0628   TPAGREE  XCH    Q               FORCE SIGN AGREEMENT IN TP WORD IN MPAC
 0629            TS     TEMQ
 0630            TC     BRANCH
 0631            TC     SGN=+
 0632  2         TC     SGN=0
 0633            CS     POSMAX
 0634            TS     SGNDMAX
 0635            CS     ONE
 0636  2         TC     SGFORCE
 0637   SGN=0    CAF    ZERO
 0638            TS     MPAC
 0639            TS     MPAC +1
 0640            TS     MPAC +2
 0641  2         TC     TEMQ
 0642   SGN=+    CAF    POSMAX
 0643            TS     SGNDMAX
 0644  8         CAF    ONE
 0645   SGFORCE  AD     MPAC +2
 0646            AD     SGNDMAX
 0647            TS     MPAC +2
 0648  2         CAF    ZERO
 0649            AD     MPAC +1
 0650            AD     SGNDMAX
 0651            TS     MPAC +1
 0652  2         CAF    ZERO
 0653            AD     MPAC
 0654            AD     SGNDMAX
 0655            TS     MPAC
 0656   SBITMASK OCT    17
 0657  8         TC     TEMQ
 0658   UNIT     TC     ABVAL           UNIT VECTOR ROUTINE - START BY GETTING
A0659                                   LENGTH
 0660  2         TC     VSR1            LEAVES 1/2 UNIT VECTORS
 0661            CCS    NEWJOB          ALLOW FOR INTERRUPTS
 0662  2         TC     UNITRUPT        SO WE CAN RETURN IN BASIC
 0663   UNITRSM  AD     VACLOC          RETURNS HERE FROM BREAKPOINT IF CALLED.
 0664            TS     ADDRWD
 0665            CAF    TWO
 0666            TS     DVSW            NON-ZERO FOR BACKWARDS DIVIDE
 0667   UNITLOOP TS     COMPON
 0668            CS     MPAC
 0669            CS     A
 0670            INDEX  ADDRWD
 0671            XCH    0               LENGTH TO COMPONENT AND COMPONENT TO BUF
 0672            TS     BUF
 0673            CS     MPAC +1
 0674            CS     A
 0675            INDEX  ADDRWD
 0676            XCH    1
 0677  2         TS     BUF +1
 0678            CAF    +4              CALL BACKWARDS DIVIDE
 0679            TS     TEMQ3
 0680            CAF    ZERO
 0681            TC     DDV0
 0682  2         TC     +1
 0683            XCH    MPAC            RESULT BACK TO COMPONENT BRINGING BACK
 0684            INDEX  ADDRWD          LENGTH
 0685            XCH    0
 0686            TS     MPAC
 0687            XCH    MPAC +1
 0688            INDEX  ADDRWD
 0689            XCH    1
 0690  2         TS     MPAC +1
 0691            TC     AD2             INCREMENT ADDRWD
 0692            CCS    COMPON
 0693            TC     UNITLOOP
 0694            CS     TWO             STORE LENGTH OF ARGUMENT IN REGISTERS 30
 0695            AD     VACLOC
 0696            TS     TEM2            AND 31 OF VAC AREA.
 0697            CAF    DAD2 +4
 0698            TC     8TO2
 0699  8         TC     DANZIG
 0700   UNITRUPT CS     BANKSET         REQUESTS FOR INTERPRETIVE INTERRUPT
 0701            TS     MPAC +2         COME HERE DURING THE UNIT OPERATION.
 0702            XCH    LOC             SINCE WE DESIRE TO RETURN IN BASIC BUT
 0703            INDEX  FIXLOC          BUT STILL SAVE THE INTERPRETER CENTRALS
 0704            TS     30D             (BANKSET AND LOC)
 0705  2         TC     CHANG1
 0706            CS     MPAC +2         ON RETURN, RESTORE AS BEFORE
 0707            TS     BANKSET
 0708            INDEX  FIXLOC
 0709            XCH    30D
 0710            TS     LOC
 0711            CAF    ZERO
 0712            TC     UNITRSM         ENTER UNIT DIVIDE LOOP.
 0713  2MPACSR1  CAF    DAD2 +4
 0714   SR1      TS     TEM11           SHIFTS RIGHT ONE USING ADDRESS IN A
 0715            INDEX  A
 0716            XCH    0
 0717            INDEX  OPOVF
 0718            MP     HALF
 0719            INDEX  TEM11
 0720            TS     0
 0721            INDEX  TEM11
 0722            XCH    1
 0723            TS     SR
 0724            XCH    SR
 0725            AD     LP
 0726            INDEX  TEM11
 0727            TS     1
 0728  8         TC     Q
 0729   SQRT2    CAF    ZERO            ENTRY TO IGNORE C(MPAC+2)
 0730  2         TS     MPAC +2
 0731   SQRT3    XCH    Q               HERE TO TREAT TRIPLE-PRECISION CASES
 0732            TS     TEMQ2
 0733            TC     TPAGREE         FORCE SIGN AGREEMENT
 0734            CCS    A               TEST SIGNUM
 0735            TC     SETNORM         PNZ - OK.
 0736            TC     TEMQ2           FAST EXIT FOR ZERO ARGUMENT
 0737  2         CCS    MPAC            IF ARGUMENT WAS NEGATIVE BUT MAJOR PART
 0738            TC     ABORT           (MPAC IS NEGATIVE) IS ZERO, ANSWER IS
 0739            OCT    01302           TAKEN AS ZERO WITH NO FURTHER ACTION.
 0740            TC     -2              IF NON-ZERO, IT IS ASSUMED A TRANSIENT
A0741  2                                ERROR HAS PRODUCED THE BAD DATA.
 0742            TS     MPAC +1         ARGUMENT NEGATIVE BUT MORE THAN -10-4.
 0743  2         TC     TEMQ2           SET MPAC,+1 TO ZERO AND EXIT.
 0744   SETNORM  TS     ADDRWD          SET NORMALIZATION COUNT TO ZERO
 0745            CS     MPAC
 0746            TS     CYL             WE WILL USE A/2, SO MUST CHECK FOR
 0747            CCS    CYL             NORMALIZATION FIRST
 0748            TC     MPACSR1         NORMALIZED - SHIFT RIGHT ONE.
 0749  2         TC     ARGHI
 0750  2         TC     SRTEST          LESS THAN 1/2 - SEE IF AT LEAST 1/8.
 0751  2         TC     A0=0            MAJOR PART (POSSIBLY MINOR PART) = 0.
 0752   SRTEST   AD     -1/2+2          SEE IF ARG GREATER THAN OR EQUAL TO 1/4.
 0753            CCS    A
 0754            TC     MPACSR1         IT IS - SHIFT RIGHT ONE AND GO TO ARGLO.
 0755  2         TC     ARGLO           (+0 WAS IMPOSSIBLE THIS CCS.)
 0756            TC     SQRTNORM +1     LESS THAN 1/4 - PUT IN EFFECTIVE RIGHT
A0757                                   BY SHIFTING LEFT ONLY ONCE WHEN ADDING
A0758  8                                ONE TO THE RIGHT SHIFT COUNT.
 0759   A0=0     XCH    MPAC +2         MOVE ARGUMENT UP
 0760            XCH    MPAC +1
 0761            XCH    MPAC
 0762            AD     ADDRWD
 0763            AD     SEVEN           INCREASE SHIFT COUNT BY 14/2 = 7
 0764  2         TC     SETNORM
 0765   SQRTNORM TC     SL1
 0766            CAF    ONE             ARGUMENT LESS THAN 1/8, SO SHIFT IT LEFT
 0767            AD     ADDRWD          TWO PLACES AND INCREASE SHIFT COUNT FOR
 0768            TS     ADDRWD          RESULT
 0769            TC     SL1
 0770            TS     CYL
 0771  8         CS     CYL
 0772   NORMTEST CCS    CYL
 0773            CCS    CYL
 0774            TC     SQRTNORM        HERE IF LESS THAN 1/8
 0775  2         TC     ARGHI           HERE IF AT LEAST 1/4, LESS THAN 1/2
 0776   ARGLO    CAF    SLOPELO         HERE IF AT LEAST 1/8, LESS THAN 1/4
 0777            INDEX  OPOVF
 0778            MP     MPAC
 0779            AD     BIASLO          X0/2 = .8324(A0/2) + .2974/2
 0780  2         TC     ARGHI +4
 0781   SLOPELO  DEC    .8324
 0782   BIASLO   DEC    .2974 B-1
 0783   SLOPEHI  DEC    .5884
 0784  2BIASHI   DEC    .4192 B-1
 0785   ARGHI    CAF    SLOPEHI
 0786            INDEX  OPOVF
 0787            MP     MPAC
 0788            AD     BIASHI
 0789   +4       XCH    MPAC            X0/2 TO MPAC
 0790            TS     BUF             A0/2 TO BUF
 0791            TS     TEM2            SET UP POSITIVE QUOTIENT SIGNAL AND
 0792            CAF    ZERO
 0793            XCH    MPAC +1         ZERO LOW-ORDER DIVIDEND FOR DP DIVIDE
 0794            TS     BUF +1          A1/2 TO BUF+1. A2 NOW DISCARDED
 0795            CS     BUF
 0796            INDEX  OPOVF
 0797            DV     MPAC            -(A0/2)/(X0/2).
 0798            TS     SR
 0799            CS     SR
 0800            AD     MPAC            X1 IS GOOD TO 14 BITS
 0801            TS     MPAC            X1 = X0/2 + ((A0/2)/(X0/2))/2
 0802            TS     TEM3            SAVE X1 FOR ADDITION
 0803            TC     SQRTDIV         GO TO FORM DP QUOTIENT OF A0/2, A1/2
 0804            XCH    TEM3            OVER X1, 0. RESULT IN MPAC, MPAC +1
 0805            INDEX  OPOVF
 0806            MP     HALF
 0807            AD     MPAC
 0808  8         TS     OVCTR           AND MAYBE SKIP, IF ARG WAS NEAR POSMAX
 0809            TC     +4              IF NO OVERFLOW
 0810            CAF    POSMAX
 0811            TS     MPAC +1
 0812  2         TC     +5
 0813   +4       XCH    LP              FOR NORMAL CASES
 0814            AD     MPAC +1         ABOVE AND X1/2
 0815            XCH    MPAC +1
 0816            XCH    OVCTR
 0817  2+5       TS     MPAC
 0818            CAF    ZERO            ZERO MPAC+2 SO SHIFT LEFT MAKES SENSE.
 0819  2         TS     MPAC +2
 0820            CCS    ADDRWD          RE-NORMALIZE IF COUNT NON-ZERO
 0821            TC     SHIFTR +3       FITS IN WITH MAIN SHIFT LOOP
 0822  2         TC     TEMQ2           NO RE-SCALING REQUIRED
 0823   SQRTS    CS     MODE            INTERPRETER LINKAGE
 0824            DOUBLE                 TAKE APPROPRIATE SQRT
 0825            INDEX  A
 0826  2         TC     -1
 0827            TC     SQRT2           FOR DP
 0828  2         TC     DANZIG
 0829            TC     SQRT3
 0830  2         TC     DANZIG
 0831   NEG13    EQUALS MINUS13
 0832   DMOVE    EQUALS DANZIG          LOADING ONLY
 0833   VMOVE    EQUALS DANZIG
 0834   TMOVE    CS     TWO             SET MODE TO TRIPLE FOR TP OPERATIONS
 0835            TC     DPEXIT +1
L 001  2EXECUTIVE
R0001   EXECUTIVE PROGRAMS
R0002  4--------- --------
 0003            BANK   1
 0004   FINDVAC  TS     NEWPRIO         PROGRAM TO FIND AN AVAILABLE VAC
 0005            XCH    Q
 0006            TC     EXECCOM         COMMON FF EXECUTIVE SUBROUTINE.
 0007  2         TC     FINDVAC2        OFF TO EXECUTIVE BANK.
 0008   NOVAC    TS     NEWPRIO         ENTRY EXCLUSIVELY FOR BASIC JOBS NOT
 0009            XCH    Q               REQUIRING A VAC AREA.
 0010            TC     EXECCOM         COMMON FF EXECUTIVE SUBROUTINE.
 0011            CAF    ZERO            ZERO PD FIELD IN PUSHLOC.
 0012            TS     EXECTEM3
 0013  2         TC     NOVAC2
 0014   JOBWAKE  TS     EXECTEM2        ENTRY HERE TO RE-ACTIVATE A SLEEPING JOB
 0015            CCS    Q               RETURN ADDRESS - 1 TO WTEXIT.
 0016            TS     WTEXIT          SHARES FINAL PORTION OF FINDVAC, NOVAC.
 0017            TC     EXECSW          COMMON EXEC BANK-SWITCH SUBROUTINE.
 0018  2         TC     JOBWAKE2
 0019   EXECCOM  TS     WTEXIT          EXIT ADDRESS
 0020            INDEX  A               PICK UP JOB OR TASK ADDRESS.
 0021            CAF    0                 (USED BY FINDVAC, NOVAC, AND WAITLIST)
 0022  2         TS     EXECTEM2
 0023   EXECSW   CAF    EXECBANK
 0024            XCH    BANKREG         CALL IN EXEC BANK, SAVING RETURN.
 0025            TS     EXECTEM1
 0026  2         TC     Q
 0027  2EXECBANK CADR   FINDVAC2
 0028   FOUNDVAC TS     BANKREG         COMES HERE TO RETURN FROM FINDVAC,
 0029            INDEX  WTEXIT          NOVAC, OR JOBWAKE.
 0030            TC     1
P0031  2         CALLS TO FINDVAC BEGIN HERE, SNATCHING AN AVAILABLE VAC AREA.
 0032  2         SETLOC 10000           EXEC/WAITLIST BANK.
 0033  2SLAPB    TC     SLAP1
 0034  2KEYRUPTC TC     KEYRUPT1        STANDARD LOC. DONT MOVE
 0035  2MODROUTB TC     MODROUT         STANDARD LOC. DONT MOVE
 0036  2SVCT3    TC     SVCT3X          STANDARD LOC.
 0037  2FINDVAC2 CCS    VAC1USE         C(VACIUSE) =  TC VACIUSE  IF VACI IS
 0038            TC     FV1             AVAILABLE, OR +0 IF IT IS IN USE.
 0039            CCS    VAC2USE
 0040            TC     FV1             THE FIRST CCS WITH +0 JUMPS TO THE
 0041            CCS    VAC3USE           CORRESPONDING TC ORDER.
 0042            TC     FV1
 0043            CCS    VAC4USE
 0044            TC     FV1
 0045            CCS    VAC5USE
 0046  2         TC     FV1
 0047            TC     ABORT           NO VAC AREAS AVAILABLE.
 0048  2         OCT    01201
 0049   FV1      AD     TWO             TO FORM ADDRESS OF ASSIGNED VAC AREA.
 0050            TS     EXECTEM3
 0051            AD     NEWPRIO         )  STORE ADDRESS OF VACI IN LOW-ORDER
 0052  2         TS     NEWPRIO         )    9 BITS OF NEWPRIO.
 0053            CAF    ZERO            )
 0054            INDEX  EXECTEM3        )  STORE +0 IN VACIUSE, INDICATING USE.
 0055  2         TS     0  -1           )
 0056   NOVAC2   CAF    LASTADR         RELATIVE ADDRESS OF LAST REGISTER SET.
 0057            TS     LOCCTR
 0058            CCS    A
 0059  2         TC     +5              PNZ AND -0 ONLY.
 0060   12BITSOK CS     EXECTEM2        COMES HERE IF JOB ADDRESS LESS THAN 6K.
 0061  2         TC     LOCSET
 0062            TC     ABORT           NO REGISTER SETS AVAILABLE.
 0063  2         OCT    01202
 0064    +5      INDEX  LOCCTR          THIS LOOP FINDS THE FIRST AVAILABLE
 0065            CCS    PRIORITY          STORAGE AREA FOR CORE REGISTERS FOR
 0066            TC     NOVAC3          THE NEW JOB.
 0067   LASTADR  DEC    56              EIGHT SETS OF EIGHT REGISTERS.
 0068            TC     NOVAC3          NNZ MEANS JOB ASLEEP HERE.
P0069  2          NOW THAT REGISTER SETS HAVE BEEN FOUND FOR THE NEW JOB, INITIA
 0070  9LIZE THEM AND SET NEWJOB IF CALLED FOR.
 0071   CORSW    INDEX  LOCCTR          (COMES HERE WITH C(A) = 0). TURN OFF OVF
 0072  2         TS     OVFIND
 0073            AD     NEWPRIO         SET UP PRIORITY FOR NEW JOB.
 0074   JOBWAKE4 INDEX  LOCCTR          JOB WAKING ENTERS HERE TO FINISH UP.
 0075            TS     PRIORITY        STORE NEW PRIORITY
 0076            CAF    BANKMASK
 0077            MASK   EXECTEM2
 0078            AD     EXECTEM3        PUSHLOC
 0079            INDEX  LOCCTR
 0080  2         TS     PUSHLOC
 0081            CAF    EXEC70K         CREATE PROPER 12 BIT ADDRESS.
 0082            MASK   EXECTEM2        SEE IF HIGH THREE BITS ZERO.
 0083            CCS    A
 0084            TC     +2              NEEDS SPECIAL TREATMENT IF C(A) NOT ZERO
 0085  2         TC     12BITSOK
 0086            XCH    EXECTEM2
 0087            MASK   LOW10
 0088            AD     6K
 0089            COM
 0090   LOCSET   INDEX  LOCCTR
 0091  2         TS     LOC
 0092            INDEX  NEWJOB
 0093            CS     PRIORITY        TEST WHETHER NEW JOB HAS HIGHER
 0094            AD     NEWPRIO         PRIORITY THAN PREVIOUS HIGHEST
 0095            CCS    A
 0096            CS     LOCCTR          NEW JOB HAS HIGHER PRIORITY.
 0097  2         TC     NEWHIGH         SET NEWJOB, LEAVING LOCCTR UNCHANGED.
 0098            TC     +1              -0 IF PRIORITIES = AND BOTH ARE NOVACS.
 0099   NOWAKE2  XCH    EXECTEM1
 0100  2ENDFIND  TC     FOUNDVAC
 0101   NEWHIGH  COM                    SET NEWJOB AND RETURN TO CALLER.
 0102            TS     NEWJOB
 0103  2         TC     ENDFIND -1
 0104   NOVAC3   CS     EIGHT           COMES HERE TO EXAMINE NEXT REGISTER SET.
 0105            AD     LOCCTR
 0106            TC     NOVAC2 +1
P0107  2         THE  JOBWAKE  ROUTINE REACTIVES A SLEEPING JOB, SETTING IT TO B
 0108  9EGIN AT THE GIVEN WAKE ADDRESS.
 0109   JOBWAKE2 CAF    LASTADR         BEGIN SEARCH FOR REGISTER SET CONTAINING
 0110            TS     LOCCTR          SLEEPING JOB. WAKE ADDRESS IS IN  LOC IN
 0111            CCS    A               CADR FORM, AS PLACED THERE BY  JOBSLEEP.
 0112            INDEX  LOCCTR          PNZ AND -0 ONLY. SEE IF THIS JOB ASLEEP.
 0113            CCS    PRIORITY        THIS CCS CANT GO TO  TC NOWAKE  .
 0114  2         TC     JOBWAKE3        PNZ - ACTIVE JOB PRESENT. +0 IMPOSSIBLE.
 0115  2         TC     NOWAKE          ALARM - SLEEPING JOB NOT FOUND.
 0116            TC     +2              INACTIVE JOB FOUND.
 0117  2         TC     JOBWAKE3        -0 - NOT IN USE.
 0118    +2      CS     EXECTEM2        SEE IF THIS IS THE DESIRED SLEEPING JOB.
 0119            INDEX  LOCCTR
 0120            AD     LOC
 0121            CCS    A
 0122            TC     JOBWAKE3        SEARCH NEXT SET IF NOT AT END.
 0123            TC     CCSHOLE
 0124  2         TC     JOBWAKE3
 0125            CAF    LOW10           SET UP EXECTEM3 AND PRIORITY SO WE CAN
 0126            INDEX  LOCCTR          FINISH AT STANDARD  CORSW  .
 0127            MASK   PUSHLOC         PROTECT PD SETTING.
 0128  2         TS     EXECTEM3
 0129            INDEX  LOCCTR          RE-COMPLEMENT PRIORITY AND FINISH UP.
 0130            CS     PRIORITY
 0131            TS     NEWPRIO
 0132  2         TC     JOBWAKE4
 0133   JOBWAKE3 CS     EIGHT           ADVANCE TO NEXT REGISTER SET.
 0134            AD     LOCCTR
 0135  2         TC     JOBWAKE2 +1
 0136   NOWAKE   TS     LOCCTR          SET LOCCTR = +0 TO SHOW NO JOB WAS
 0137            TC     NOWAKE2          AWAKENED.
P0138   A NEW JOB, OF HIGHER PRIORITY THAN THE PRESENT ONE, CAUSES THE RELA-
R0139   TIVE ADDRESS (9, 18, ..., 63) OF THE NEW JOB CORE REGISTERS TO BE
R0140   PLACED IN REGISTER  NEWJOB , WHERE IT IS TESTED BY THE INTERPRETER.
R0141   THE RESULTING BRANCH TO CHANJOB, BELOW, CAUSES A TRADE BETWEEN THE
R0142  2CORE REGISTERS OF THE PRESENT AND NEW JOBS.
 0143  2         SETLOC FOUNDVAC +3
 0144   CHANG1   INHINT                 BASIC JOBS COME HERE WHEN C(NEWJOB)
 0145            CAF    EXECBANK        NON-ZERO. START BY CALLING IN EXECUTIVE
 0146            XCH    BANKREG         BANK AND SAVING RETURN BANK CODE.
 0147            COM
 0148            TS     BANKSET
 0149            XCH    PUSHLOC         BLANK OUT THE HIGH-ORDER 4 BITS IN
 0150            MASK   LOW10           PUSHLOC SO THE BANK BITS CAN BE PACKED
 0151            TS     PUSHLOC         WITH IT
 0152            CS     Q               FOR RETURN, SHOWING THIS WAS A BASIC JOB
 0153  2         TC     CHANJOB         OFF TO BANK 0
 0154   CHANG2   CCS    NEWEQIND        INTERPRETIVE INTERRUPTS START HERE,
 0155  2         TC     Q               PROVIDED THE LOAD INDICATOR ISNT ON
 0156            INHINT
 0157            CAF    EXECBANK        CALL IN EXECUTIVE BANK.
 0158            TS     BANKREG
 0159            XCH    LOC
 0160  8         TC     CHANJOB         WITH C(A) PNZ, SHOWING WE WERE IN INTERP
 0161  9RETER
 0162            SETLOC NOWAKE +2
 0163   CHANJOB  INDEX  NEWJOB          TO BEGIN SWAP OF CORE REGISTERS
 0164            XCH    LOC
 0165  2         TS     LOC             SAVE PROPER 12 BIT ADDRESS
 0166            XCH    PRIORITY
 0167            INDEX  NEWJOB
 0168            XCH    PRIORITY
 0169            TS     PRIORITY
 0170            MASK   LOW9            TO GET FIXLOC
 0171            TS     FIXLOC
 0172            AD     BIT6            SET UP VACLOC ( = FIXLOC + 32D )
 0173  2         TS     VACLOC
 0174            CS     BANKSET         SAVE BANK
 0175            AD     PUSHLOC         AND PUSHLOC IN SAME WORD
 0176            INDEX  NEWJOB
 0177            XCH    PUSHLOC
 0178            TS     PUSHLOC
 0179            MASK   LOW10
 0180            XCH    PUSHLOC
 0181            COM
 0182            AD     PUSHLOC         WE NOW HAVE COMPLEMNT OF BANK BITS
 0183  2         TS     BANKSET
 0184            CS     ADRLOC          SAVE MODE AND COMPLEMENT OF ADRLOC IN
 0185            DOUBLE                 SAME WORD.  ADRLOC MUST BE SHIFTED 2
 0186            DOUBLE                 PLACES TO MAKE ROOM FOR MODE
 0187            AD     MODE            -0, -1, OR -2
 0188            INDEX  NEWJOB
 0189            XCH    ADRLOC
 0190            TS     SR
 0191            MASK   THREE           SAVE LOW 2 BITS
 0192            AD     NEG3            THIS RESULTS IN EITHER -0, -1, OR -2
 0193            TS     MODE
 0194            CS     SR
 0195            CS     SR
 0196  8         TS     ADRLOC
 0197            CCS    OVFIND          SAVE C(ORDER) POSITIVE IF C(OVFIND) = 0
 0198            TC     +2              AND NEGATIVE OTHERWISE
 0199            TC     +3
 0200            CS     ORDER
 0201            TC     +2
 0202            XCH    ORDER
 0203            INDEX  NEWJOB
 0204            XCH    OVFIND
 0205            TS     ORDER
 0206            CCS    A               DETERMINE NEW SETTING OF OVFIND
 0207            CAF    ZERO            TO ZERO
 0208            TC     OVFSET
 0209            CS     ORDER           ORDER WAS NEGATIVE, MAKE IT POSITIVE
 0210            TS     ORDER
 0211            CAF    ONE             TO SET OVFIND
 0212  2OVFSET   TS     OVFIND
 0213            XCH    MPAC            TRADE C(MPAC TO MPAC+2)
 0214            INDEX  NEWJOB
 0215            XCH    MPAC
 0216            TS     MPAC
 0217            XCH    MPAC +1
 0218            INDEX  NEWJOB
 0219            XCH    MPAC +1
 0220            TS     MPAC +1
 0221            XCH    MPAC +2
 0222            INDEX  NEWJOB
 0223            XCH    MPAC +2
 0224  2         TS     MPAC +2
 0225            CAF    ZERO
 0226            TS     NEWEQIND        MAKE SURE LOAD INDICATOR OFF.
 0227   SETNJ    TS     NEWJOB
 0228            RELINT                 ENABLE INTERRUPT
 0229            CCS    LOC             C(LOC) PNZ FOR INTERPRETIVE JOBS,
 0230            CAF    ZERO
 0231            TC     DANZIG +2       RETURN TO INTERPRETER
 0232            AD     ONE             GET ABS(LOC) AND RETURN TO BASIC
 0233            TS     ADDRWD
 0234            CS     BANKSET         GET DESIRED BANKBITS
 0235  2ENDCHANG TC     BASICALL
 0236  2         SETLOC CHANG2 +7D      TAKE UP WHERE WE LEFT OFF IN FIXED-FIXED
 0237   BASICALL TS     BANKREG
 0238  8         TC     ADDRWD
 0239   ENDOFJOB CAF    EXECBANK        NORMAL ENDJOB ENTRY.
 0240            TS     BANKREG
 0241  2         TC     ENDJOB1
 0242   JOBSLEEP TS     LOC             ENTRY HERE TO DE-ACTIVE THIS JOB.
 0243            CAF    EXECBANK        LOC IS SET TO THE AWAKENING ADDRESS
 0244            TS     BANKREG         SO THE SUBSEQUENT JOBWAKE CAN FIND
 0245  2         TC     JOBSLP1         THE PROPER REGISTER SET.
 0246  2         SETLOC ENDCHANG +1
 0247   ENDJOB1  INHINT                 INTERPRETIVE JOBS FINISH WITH RTB
 0248            CS     ZERO            TO ENDJOB1
 0249            TS     BUF +1          ENDJOB USES BUF, BUF +1, AND BUF +2.
 0250            XCH    PRIORITY
 0251            MASK   LOW9            RESTORE AVAILABILITY OF VACI BY SETTING
 0252            CCS    A               C(VACIUSE) NON-ZERO
 0253            INDEX  A
 0254  2         TS     0
 0255  2         TC     EJSCAN          ENDJOB NEED NOT EXAMINE FIRST REG. SET.
 0256   JOBSLP1  INHINT                 FINISH JOB SLEEP AND START ENDJOB-TYPE
 0257            CS     PRIORITY        SCAN. COMPLEMENTED PRIORITY REGISTER
 0258            TS     PRIORITY        SHOWS JOB IS ASLEEP.
 0259            CS     ZERO            INITIALIZE SEARCH FOR HIGHEST PRIORITY.
 0260            TS     BUF +1
P0261  2         SCAN FOR THE ACTIVE JOB OF HIGHEST PRIORITY.
 0262   EJSCAN   CCS    PRIORITY +8D    EACH PRIORITY REGISTER (PRIORITY +8N)
 0263            TC     EJ1             IS SCANNED. ITS CONTENTS ARE EITHER
 0264            TC     CCSHOLE
 0265  2         TC     +1                 2. NNZ - AN INACTIVE PRIORITY NUMBER.
 0266            CCS    PRIORITY +16D   OR 3. -0 - NOT IN USE.
 0267            TC     EJ1             IF PNZ, CONTROL IS TRANSFERRED TO EJ1
 0268            TC     CCSHOLE
 0269  2         TC     +1              PARED WITH THE PREVIOUS HIGHEST
 0270            CCS    PRIORITY +24D   PRIORITY FOUND. THE CONTENTS OF Q
 0271            TC     EJ1             SERVE TO LOCATE THE CCS WHICH WAS
 0272            TC     CCSHOLE
 0273  2         TC     +1              NEWJOB IS SET TO THE RELATIVE ADDRESS
 0274            CCS    PRIORITY +32D   OF THE REGISTER SET WITH THE HIGHTEST
 0275            TC     EJ1             ACTIVE PRIORITY AT THE END OF THE SCAN.
 0276            TC     CCSHOLE
 0277  2         TC     +1
 0278            CCS    PRIORITY +40D
 0279            TC     EJ1
 0280   EXEC70K  OCT    70000
 0281  2         TC     +1
 0282            CCS    PRIORITY +48D
 0283            TC     EJ1
 0284   -CCSPR  -CCS    PRIORITY
 0285  2         TC     +1
 0286            CCS    PRIORITY +56D
 0287            TC     EJ1
 0288            TC     CCSHOLE
 0289  8         TC     +1
 0290            CCS    BUF             IF BUF = 0, THE SCAN WAS PART OF
 0291            TC     +2              A PRIORITY CHANGE IN WHICH THE NEW
 0292  2         TC     SETNJ           PRIORITY IS HIGHEST. GO SET NEWJOB = 0.
 0293            INDEX  A               PICK UP CCS INSTRUCTION TO GET NEWJOB
 0294            CAF    0 -1            SELECT CCS INSTRUCTION.
 0295            AD     -CCSPR
 0296            TS     NEWJOB          RELATIVE ADDRESS ONLY.
 0297            XCH    LOC             (NO MEANING FOR ENDOFJOB).
 0298  4         TC     CHANJOB
 0299   EJ1      TS     BUF +2          STORE NEW PRIORITY
 0300            AD     BUF +1          - OLD PRIORITY
 0301            CCS    A
 0302            XCH    Q               IF NEW PRIORITY IS LARGER
 0303            TC     EJ2
 0304            NOOP                   IF OLD PRIORITY IS LARGER
 0305            INDEX  Q                 OR EQUAL
 0306  2         TC     2
 0307   EJ2      TS     BUF             SAVE C(Q) TO LOCATE HIGHEST PRIORITY
 0308            CS     BUF +2            JOB AT END OF SCAN.
 0309            TS     BUF +1
 0310            INDEX  BUF
 0311            TC     2
P0312            THE FOLLOWING ROUTINE IS AVAILABLE TO CHANGE THE PRIORITY OF A
 0313  9JOB WHILE IT IS RUNNING UNDER EXECUTIVE
R0314  2CONTROL (IE, IN CORE SET 0). CALLING SEQUENCE IS AS FOLLOWS (NO INHINT N
 0315  9ECESSARY):
A0316            CAF    NEWPRIO         PRIORITY IN BITS 10-14 - ZERO ELSEWHERE.
A0317  2L        TC     PRIOCHNG
R0318   RETURN IS TO L+1 IMMEDIATELY UNLESS A JOB OF STILL HIGHER PRIORITY IS PR
 0319  9ESENT, IN WHICH CASE IT GOES TO CHANJOB
R0320  4BEFORE RETURNING.
 0321  2         SETLOC JOBSLEEP +4
 0322   PRIOCHNG INHINT                 PREPARE Q, BANK, AND PUSHLOC (ALA
 0323            TS     NEWPRIO         CHANG1) IN CASE WE HAVE TO CHANGE JOBS.
 0324            CS     Q
 0325            TS     LOC
 0326            CAF    EXECBANK
 0327            XCH    BANKREG
 0328  2         TC     PRIOCH2         OFF TO EXECUTIVE BANK.
 0329  2         SETLOC EJ2 +5
 0330   PRIOCH2  COM
 0331            TS     BANKSET
 0332            XCH    PUSHLOC
 0333            MASK   LOW10
 0334  2         TS     PUSHLOC
 0335            CAF    LOW9            MAKE UP NEW PRIORITY WORD, LEAVING
 0336            MASK   PRIORITY        POSSIBLE VAC ADDRESS INTACT.
 0337            AD     NEWPRIO
 0338            TS     PRIORITY
 0339            COM                    INITIALIZE BUF +1 TO - THIS PRIORITY FOR
 0340  2         TS     BUF +1          SEARCH FOR HIGHEST PRIORITY.
 0341            CAF    ZERO            SET BUF TO ZERO AS A FLAG FOR END OF
 0342            TS     BUF             SCAN.
 0343            TC     EJSCAN          SCAN FOR HIGHEST PRIORITY.
P0345  2LIST OF PROGRAM PRIORITIES
 0346  2         SETLOC PRIOCHNG +7
 0347   PRIO1    EQUALS BIT10
 0348   PRIO2    EQUALS BIT11
 0349   PRIO3    OCT    03000
 0350   PRIO4    EQUALS BIT12
 0351   PRIO5    OCT    05000
 0352   OCT05000 EQUALS PRIO5
 0353   PRIO6    EQUALS 6K
 0354   PRIO7    OCT    07000
 0355   PRIO10   EQUALS BIT13
 0356   PRIO11   OCT    11000
 0357   PRIO12   OCT    12000
 0358   PRIO13   OCT    13000
 0359   PRIO14   OCT    14000
 0360   PRIO15   OCT    15000
 0361   PRIO16   OCT    16000
 0362   PRIO17   OCT    17000
 0363   PRIO20   EQUALS BIT14
 0364   PRIO21   OCT    21000
 0365   PRIO22   OCT    22000
 0366   PRIO23   OCT    23000
 0367   PRIO24   OCT    24000
 0368   PRIO25   OCT    25000
 0369   PRIO26   OCT    26000
 0370   PRIO27   OCT    27000
 0371   PRIO30   OCT    30000
 0372   PRIO31   OCT    31000
 0373   PRIO32   OCT    32000
 0374   PRIO33   OCT    33000
 0375   PRIO34   OCT    34000
 0376   PRIO35   OCT    35000
 0377   PRIO36   OCT    36000
 0378   PRIO37   OCT    37000
L      2WAITLIST
R0001  2CHECK-OUT STATUS - UNIT VERIFICATION COMPLETE MAY, 1965
 0002  9EXCEPT LONGCALL SECTION.
R0003  2DO NOT CHANGE THIS SECTION WITHOUT PRB APPROVAL.
R0004  2GROUNDRULE....DELTA T SHOULD NOT EXCEED 12000 (= 2 MINUTES)
 0005            BANK   1
 0006   WAITLIST TS     DELT            STORE DELTA T = TD - T (TD = DESIRED
 0007            XCH    Q                 TIME FOR FUTURE ACTION).
 0008            TC     EXECCOM         PICK UP TASK ADDRESS AND SAVE BANKREG.
 0009  2         TC     WTLST3
 0010            BANK   4
 0011   WTLST3   CS     TIME3
 0012            AD     +1              CCS  A  = + 1/4
 0013            CCS    A               TEST  1/4 - C(TIME3).  IF POSITIVE,
A0014   IT MEANS THAT TIME3 OVERFLOW HAS OCCURRED PRIOR TO CS  TIME3 AND THAT
A0015   C(TIME3) = T - T1, INSTEAD OF 1.0 - (T1 - T).  THE FOLLOWING FOUR
A0016   ORDERS SET C(A) = TD - T1 + 1 IN EITHER CASE.  C(CSQ) = CS  Q = 40001
A0017  2AND  C(TSQ) = TS  Q = 50001   NOTATION...   1 - 00001,  1.0 = 37777+1
 0018            AD     CSQ             OVERFLOW HAS OCCURRED.  SET C(A) =
 0019  2         CS     A               T - T1 + 3/4 - 1
R0020  2NORMAL CASE (C(A) MINUS) YIELDS SAME C(A)  -(-(1.0-(T1-T))+1/4)-1
 0021            AD     TSQ             TS  Q  = - 3/4 + 2
 0022  8         AD     DELT            RESULT = TD - T1 + 1
 0023  9            10 W
 0024  2         CCS    A               TEST TD - T1 + 1
 0025            AD     LST1            IF TD - T1 POS, GO TO WTLST5 WITH
 0026  2         TC     WTLST5          C(A) = (TD - T1) + C(LST1) = TD-T2+1
 0027            TC     +1
 0028  2         CS     DELT
R0029   NOTE THAT THIS PROGRAM SECTION IS NEVER ENTERED WHEN T-T1 G/E -1,
R0030   SINCE TD-T1+1 = (TD-T) + (T-T1+1), AND DELTA T = TD-T G/E +1 .  (G/E
R0031   SYMBOL MEANS GREATER THAN OR EQUAL TO).  THUS THERE NEED BE NO CON-
R0032  2CERN OVER A PREVIOUS OR IMMINENT OVERFLOW OF TIME3 HERE.
 0033            AD     POS1/2          WHEN TD IS NEXT, FORM QUANTITY
 0034            AD     POS1/2            1.0 - DELTA T = 1.0 - (TD - T)
 0035            XCH    TIME3
 0036            AD     MSIGN
 0037            AD     DELT
 0038            TS     DELT
 0039            CAF    ZERO
 0040            XCH    DELT
 0041   WTLST4   XCH    LST1
 0042            XCH    LST1 +1
 0043            XCH    LST1 +2
 0044            XCH    LST1 +3
 0045            XCH    LST1 +4
 00453           XCH    LST1 +5
 00456           XCH    LST1 +6
 0046            XCH    EXECTEM2        TASK ADDRESS.
 0047            INDEX  NVAL
 0048            TC     +1
 0049            XCH    LST2
 0050            XCH    LST2 +1
 0051            XCH    LST2 +2
 0052            XCH    LST2 +3
 0053            XCH    LST2 +4
 0054            XCH    LST2 +5         AT END, CHECK THAT C(LST2+5) IS STD
 00543           XCH    LST2 +6
 00546           XCH    LST2 +7
 0055            AD     ENDTASK           END ITEM, AS CHECK FOR EXCEEDING
A0056                                     THE LENGTH OF THE LIST.
 0057            CCS    A
 0058            TC     ABORT           WAITLIST OVERFLOW.
 0059            OCT    01203
 0060  2         TC     -2
 0061            XCH    EXECTEM1        RETURN TO CALLER.
 0062  8         TC     LVWTLIST        SAME ROUTINE AS FINDVAC, ETC., EXIT.
 0063   WTLST5   CCS    A               TEST  TD - T2 + 1
 0064            AD     LST1 +1
 0065            TC     +4
 0066            AD     ONE
 0067            TC     WTLST2
 0068  2         OCT    1
 0069   +4       CCS    A               TEST  TD - T3 + 1
 0070            AD     LST1 +2
 0071            TC     +4
 0072            AD     ONE
 0073            TC     WTLST2
 0074  2         OCT    2
 0075   +4       CCS    A               TEST  TD - T4 + 1
 0076            AD     LST1 +3
 0077            TC     +4
 0078            AD     ONE
 0079            TC     WTLST2
 0080  2         OCT    3
 0081   +4       CCS    A               TEST  TD - T5 + 1
 0082            AD     LST1 +4
 0083            TC     +4
 0084            AD     ONE
 0085            TC     WTLST2
 0086  2         OCT    4
 0087   +4       CCS    A               TEST  TD - T6 + 1
 008705          AD     LST1 +5
 00871           TC     +4
 008715          AD     ONE
 00872           TC     WTLST2
 0087258         OCT    5
 00873   +4      CCS    A
 008735          AD     LST1 +6
 00874           TC     +4
 008745          AD     ONE
 00875           TC     WTLST2
 0087552         OCT    6
 00876   +4      CCS    A
 0088            TC     WTALARM
 0089            NOOP
 0090            AD     ONE
 0091            TC     WTLST2
 0092  2         OCT    7
 0093   WTALARM  TC     ABORT
 0094  2         OCT    01204
 0095  2LVWTLIST EQUALS FOUNDVAC
 0096   SVCT3X   CCS    FLAGWRD2        IF DURING FREE-FALL AND AFTER
 0097            TC     TASKOVER        PLATFORM HAS BEEN ALIGNED, COMPENSATE
 0098            TC     TASKOVER        FOR GYRO BIAS DRIFT.
 0099  2         TC     +1
 0100            CAF    PRIO35
 0101            TC     NOVAC
 0102            CADR   BIASONLY
 0103   LTSKOV   TC     TASKOVER        USED BY LONGCALL.
R0104  2C(TIME3) = 1.0 - (T1 - T)
R0105   C(LST1  ) = - (T2 - T1) + 1
R0106   C(LST1+1) = - (T3 - T2) + 1
R0107   C(LST1+2) = - (T4 - T3) + 1
R0108   C(LST1+3) = - (T5 - T4) + 1
R0109  2C(LST1+4) = - (T6 - T5) + 1
R0110   C(LST2  ) = TC  TASK1
R0111   C(LST2+1) = TC  TASK2
R0112   C(LST2+2) = TC  TASK3
R0113   C(LST2+3) = TC  TASK4
R0114   C(LST2+4) = TC  TASK5
R0115  8C(LST2+5) = TC  TASK6
 0116  9            11 W
R0117   THE ENTRY TO WTLST2 JUST PRECEDING OCT  N  IS FOR T  LE TD LE T   -1.
R0118  2                                                   N           N+1
R0119   (LE MEANS LESS THAN OR EQUAL TO).  AT ENTRY, C(A) = -(TD - T   + 1)
R0120  2                                                            N+1
R0121   THE LST1 ENTRY -(T   - T +1) IS TO BE REPLACED BY -(TD - T + 1), AND
R0122  2                  N+1   N                                 N
R0123   THE ENTRY -(T   - TD + 1) IS TO BE INSERTED IMMEDIATELY FOLLOWING.
R0124  2             N+1
 0125   WTLST2   XCH    Q               NEW C(Q) = -(TD - T   + 1)
 0126            INDEX  A                                  N+1
 0127            CAF    0
 0128  2         TS     NVAL            VALUE OF N INTO NVAL
 0129            CAF    ONE
 0130            AD     Q
 0131            INDEX  NVAL            C(A) = -(TD - T ) + 1.
 0132  2         AD     LST1 -1                        N
 0133            INDEX  NVAL
 0134  2         TS     LST1 -1
 0135            CS     Q               -C(Q) = -(T    - TD) + 1
 0136            INDEX  NVAL                       N+1
 0137            TC     WTLST4
P0138   THIS ROUTINE HANDLES TASKS MORE THAN 120 SECS IN THE FUTURE. IT REQUIRES
 0139  9 CALL TIME IN LONGTIME, +1 SCALED SAME
R0140   AS TIME2, 1 AND THE TASK ADDRESS IN CALLCADR. ENTER WITH
R0141                                                              TC IBNKCALL
R0142                                                            CADR LONGCALL
R0143  4THE ROUTINE ONLY HANDLES ONE CALL AT A TIME
 0144   LONGCALL XCH    Q
 0145  2         TS     LONGEXIT
 0146            XCH    LONGTIME +1
 0147            DOUBLE
 0148            TS     LONGTIME +1
 0149            CAF    ZERO
 0150            AD     LONGTIME
 0151            AD     LONGTIME
 0152            TS     LONGTIME
 0153            TC     +2
 0154  2         TC                     ERROR TRAP.   DT TOO BIG
 0155            CAF    ONE
 0156            AD     LONGTIME +1
 0157            AD     POSMAX
 0158            TS     LONGTIME +1
 0159  2         CAF    ZERO
 0160            AD     LONGTIME
 0161            AD     POSMAX
 0162            TS     LONGTIME
 0163  2         TC     CCSHOLE
 0164            CAF    BIT14
 0165            EXTEND
 0166            MP     LONGTIME +1
 0167  2         TS     LONGTIME +1
 0168   LONGCYCL CCS    LONGTIME
 0169  2         TC     LOOPAGIN
 0170            CCS    LONGTIME +1     TEST FOR LOWER ORDER ZERO
 0171            TC     +2
 0172  2         TC     GETCADR
 0173            XCH    LONGTIME +1
 0174            TC     WAITLIST
 0175  2         CADR   GETCADR
 0176            TC     LONGC1
 0177   LOOPAGIN TS     LONGTIME
 0178            CAF    BIT14
 0179            TC     WAITLIST
 0180  2         CADR   LONGCYCL
 0181   LONGC1   CAF    LTSKOV
 0182            XCH    LONGEXIT
 0183  2         XAQ
 0184   GETCADR  XCH    CALLCADR
 0185            TC     BANKJUMP
P0187  2         ENTERS HERE ON T3 RUPT TO DISPATCH WAITLISTED TASK.
 0188  2         SETLOC WAITLIST +4     BACK TO FF.
 0189   T3RUPT   XCH    BANKREG          TIME 3 OVERFLOW INTERRUPT PROGRAM
 0190            TS     BANKRUPT
 0191            XCH    OVCTR           1.  PICK UP CONTENTS OF THE OVERFLOW
 0192  2         TS     OVRUPT             AND SAVE IN OVRUPT FOR ENTIRE T3RUPT.
 0193   T3RUPT2  CS     ZERO            SET RUPTAGN TO -0 INITIALLY, AND SET
 0194            TS     RUPTAGN         T3 TO -0 WHILE WE MAKE UP ITS NEW
 0195            XCH    TIME3           CONTENTS SO WE CAN DETECT AN INCREMENT
 0196  2         TS     Q               OCCURING IN THE PROCESS.
 0197            CAF    NEG1/2
 01973           XCH    LST1 +6
 01976           XCH    LST1 +5
 0198            XCH    LST1 +4         3.  MOVE UP LST1 CONTENTS, ENTERING
 0199            XCH    LST1 +3             A VALUE OF 1/2 +1 AT THE BOTTOM
 0200            XCH    LST1 +2             FOR T6-T5, CORRESPONDING TO THE
 0201            XCH    LST1 +1             INTERVAL 81.93 SEC FOR ENDTASK.
 0202            XCH    LST1
 0203            AD     POSMAX          4. SET T3 = 1.0 - T2 -T USING LIST 1.
 0204            AD     Q               SAMPLED T3.
 0205            TS     A               SEE IF NEW T3 HAS OVERFLOW. IF SO, NEXT
 0206            TC     +4              TASK IS DUE THIS T3 RUPT AND SET RUPTAGN
 0207            XCH    RUPTAGN         ACCORDINGLY.
 0208            CAF    ONE
 0209  2         XCH    RUPTAGN
 0210    +4      XCH    TIME3
 0211            CCS    A               T3 IS ALMOST ALWAYS -0 UNLESS AN
 0212            CAF    ONE             INCREMENT OCCURRED IN WHICH CASE WE MUST
 0213            AD     TIME3           ADD IT TO THE NEW T3.
 0214  8         TC     XTRAINC
 0215   T3DSP    CS     ENDTASK
 02153           XCH    LST2 +7
 02156           XCH    LST2 +6
 0216            XCH    LST2 +5             ENTERING THE ENDTASK AT BOTTOM.
 0217            XCH    LST2 +4
 0218            XCH    LST2 +3
 0219            XCH    LST2 +2
 0220            XCH    LST2 +1
 0221  2         XCH    LST2            9.  PICK UP TOP TASK ON LIST
 0222            TS     BANKREG         SWITCH BANKS IF NECESSARY
 0223            TS     ITEMP1
 0224            MASK   70K
 0225            CCS    A
 0226            TC     +2              IF +
 0227            TC     ITEMP1
 0228            XCH    ITEMP1
 0229            MASK   LOW10
 0230            INDEX  A
 0231  4         TC     6000
R0232  2RETURN, AFTER EXECUTION OF TIME3 OVERFLOW TASK.
 0233   TASKOVER CCS    RUPTAGN         IF +1 RETURN TO T3RUPT, IF -0 RESUME.
 0234  2         TC     T3RUPT2         DISPATCH NEXT TASK IF IT WAS DUE.
 0235   ENDTASK -CADR   SVCT3
 0236  2BANKMASK OCT    76000
 0237   OVRESUME XCH    OVRUPT          OVCTR RESTORE AND BANKREG RESTORE.
 0238  2         TS     OVCTR
 0239   RESUME   XCH    BANKRUPT        STANDARD BANK-SWITCH RESUME.
 0240  2         TS     BANKREG
 0241   NBRESUME XCH    QRUPT           NO-BANK-SWITCH RESUME.
 0242            TS     Q
 0243            XCH    ARUPT
 0244  2         RESUME
R0245  2         FINISH UP RARE EVENT OF EXTRA INCREMENT TO T3.
 0246   XTRAINC  TS     TIME3
 0247            TC     T3DSP           USUAL CASE.
 0248            TS     RUPTAGN         EVEN MORE RARE - THE NEXT TASK IS DUE
 0249            TC     T3DSP           THIS T3RUPT.
L      2RESTART CONTROL
 0001            BANK   1
R0002  2OF THE PHASE TABLE IN ALMOST CONTSTANT AGREEMENT. CALLING SEQUENCES ARE
 0003  9AS FOLLOWS:
A0004            TC     PHASCHNG        CHANGE GROUP G TO PHASE PPP (127 MAX).
A0005  2         OCT    PPP0G           (CALL UNDER EXECUTIVE ONLY)
A0006            CAF    --              CHANGE GROUP G TO THE PHASE ARRIVING IN
A0007            TC     NEWPHASE        A (MAY BE CALLED ANYTIME).
A0008  2         OCT    0000G
R0009            IN EACH CASE THE OLD PHASE IS RETURNED TO THE CALLER IN A. IF T
 0010  9HE OLD PHASE WAS +0, CONTROL IS
R0011  2GIVEN TO A ROUTINE SPECIFIED IN A CADR TABLE. THIS ROUTINE MAY EXIT OR R
 0012  9ETURN TO CALLER VIA SWRETURN.
 0013   PHASCHNG XCH    Q
 0014            INHINT
 0015            TS     RUPTREG4
 0016            INDEX  A
 0017            CAF    0
 0018            TS     PHASDATA
 0019            MASK   LOW5            (MAY WANT MORE GROUPS SOME DAY)
 0020            XCH    PHASDATA
 0021            EXTEND
 0022            MP     -BIT9           NOTE LP NOT SAVED.
 0023  2         TC     PHASCH2
 0024  2-BIT9    OCT    -400
 0025   NEWPHASE INHINT
 0026            XCH    Q
 0027            TS     RUPTREG4
 0028            INDEX  A
 0029            CAF    0
 0030  2         TS     PHASDATA
 0031            CS     Q
 0032   PHASCH2  INDEX  PHASDATA
 0033            TS     -PHASE1 - 1     PHASE1 IS FOR PROG NUM 1.
 0034            COM
 0035            INDEX  PHASDATA
 0036  2         XCH    PHASE1 - 1      INTO PHASE1 FOR PROG 1.
 0037            CCS    A
 0038  2         TC     +3
 0039  2         TC     UPT             ON +0.
 0040            CS     TWO             -1 IS INACTIVE STATE
 0041  2 +3      AD     ONE
 0042   PHASEXIT XCH    RUPTREG4
 0043            AD     ONE
 0044            TS     Q               WE MUST RELINT BEFORE RETURN.
 0045            XCH    RUPTREG4        OLD PHASE BITS.
 0046            RELINT
 0047  2         TC     Q
 0048   UPT      INDEX  PHASDATA
 0049            CAF    UPTCADR -1
 0050  2         TC     SWCALL
 0051            CAF    ZERO            IF RETURN
 0052            TC     PHASEXIT
P0053  2         MAJOR MODE LIGHT MAINTENANCE ROUTINES.
R0054            ROUTINE TO CHECK EQUALITY BETWEEN THE MAJOR MODE DISPLAY AND TH
 0055  9E ARGUMENT AT CALLER +1. RETURNS TO
R0056  2CALLER +2 IF NOT AND CALLER +3 IF SO.
 0057   CHECKMM  CAF    ONE
 0058            AD     Q
 0059            XCH    Q
 0060            INDEX  A
 0061            CS     0
 0062            AD     MODREG
 0063            CCS    A
 0064            TC     Q
 0065   FINEMASK OCT    17
 0066            TC     Q
 0067            INDEX  Q
 0068  2         TC     Q
R0069  2         TO UPDATE THE MAJOR MODE LIGHTS:
 0070   NEWMODE  INDEX  Q
 0071            CAF    0
 0072            TS     MODREG
 0073            CAF    GRABUSY +1      CADR OF BANK CONTAINING DSPMM.
 0074            XCH    BANKREG
 0075            TS     MPAC +1         MPACS NOT USED BY DSPMM.
 0076            XCH    Q
 0077            TS     MPAC
 0078  2         TC     DSPMM
 0079            XCH    MPAC +1
 0080            TS     BANKREG
 0081            INDEX  MPAC
 0082            TC     1
P0084   PROGRAM PRGSTALL IS AN EXECUTIVE INTERLOCK ROUTINE. REQUESTING PROGS DO
R0085            TC     BANKCALL
R0086            CADR   PRGSTALL
R0087  4RETURN IS TO L+2 AFTER TWO PROGS HAVE CALLED.
 0088            BANK   4
 0089   PRGSTALL INHINT
 0090            CS     STATE
 0091            MASK   PRGBIT
 0092            TS     Q
 0093            CS     PRGBIT
 0094            MASK   STATE
 0095            AD     Q
 0096            TS     STATE
 0097            CCS    Q
 0098            TC     PRGSLEEP
 0099            CAF    LPRGRET
 0100            TC     JOBWAKE
 0101            RELINT
 0102  2         TC     SWRETURN
 0103   PRGSLEEP TC     MAKECADR
 0104            XCH    ADDRWD
 0105            TS     MPAC +2
 0106            CAF    LPRGRET
 0107  2         TC     JOBSLEEP
 0108   PRGRET   XCH    MPAC +2
 0109  2         TC     BANKJUMP
 0110   LPRGRET  CADR   PRGRET
 0111  2PRGBIT   EQUALS BIT1
 0112   UPTCADR  CADR
P0113            PINBALL COMES TO MODROUT ON RECEIVING THE NEW MODE REQUESTED BY
 0114  9 VERB 37. THE DESIRED MODE IN IS A
R0115  2ON ARRIVAL.
 0116   MODROUT  INHINT
 0117            AD     NEG3            FOR FLIGHT 501, ONLY MODES 01 AND 03 MAY
 0118            CCS    A               BE INITIATED BY VERB 37.
 0119            TC     V37BAD
 0120            TC     CCSHOLE
 0121  2         TC     1CHECK          SEE IF 01 CALLED FOR.
 0122            TC     CHECKMM         MODE 03 REQUESTED - DEMANDS MODE 02
 0123            OCT    02              PRESENTLY.
 0124  2         TC     V37BAD
 0125            CAF    PRIO14          START OPTICAL CHECK.
 0126            TC     FINDVAC
 0127            CADR   CHKOPT
 0128  2         TC     ENDOFJOB
 0129   1CHECK   AD     MINUS1          SEE IF 01 REQUESTED.
 0130            CCS    A
 0131            TC     V37BAD
 0132            TC     CCSHOLE
 0133  2         TC     V37BAD
 0134            CCS    MODREG          DEMAND IDLE MODE.
 0135  2         TC     V37BAD
 0136            CAF    PRIO20
 0137            TC     FINDVAC
 0138            CADR   TOP1
 0139  2         TC     ENDOFJOB
 0140   V37BAD   TC     FALTON          ILLEGAL REQUEST.
 0141            TC     ENDOFJOB
L      2501 RESTART TABLES AND ROUTINES
R0001    RESTART  TABLES
R0002  2 ----------------
R0003       THESE CONTROL RESTART OPERATION.
R0004  4
R0005  2  ...IMPORTANT...   DO NOT MOVE THIS SECTION FROM BEGINNING OF BANK. DJL
 0006            SETLOC 26000           START OF BANK 13.
 0007   WTDTTAB  DEC    0               WAITLIST DT FOR  RESTART 1.0
 0008   WCADRTAB CADR   0               WAITLIST CADR.
 0009   PRIOTAB  OCT    0               PRIORITY VALUE.
 0010  2CADRTAB  CADR   0               CADR OF CURRENT JOB
R0011  2 ANY JOB 1 RESTARTS SHOULD GO HEFE.
 0012   2.1SPOT  2DEC   0.0             2.1 RESTART
 0015            2DEC   0.0
 0016   2.2SPOT  OCT    0               RESTART 2.2 VALUES.
 0017            OCT    0
 0018            OCT    12000           PRIO12
 0019  2         CADR   SOAKINIT
 0020   2.3SPOT  OCT    0               2.3 RESTART
 0021            OCT    0
 0022            OCT    12000
 0023            CADR   ATTIJOB1 - 1
 0024   2.4SPOT  OCT    0               RESTART 2.4
 0025            OCT    0
 0026            OCT    12000
 0027  2         CADR   ATTIJOB
 00271  2.5SPOT  2DEC   0               2.5 RESTART.
 002715          2DEC   0
R0028    ANY MORE GROUP 2 RESTART VALUES SHOULD GO HERE.
R0029
 0030   3.1SPOT  OCT    77777           3.1 RESTART.
 0031            OCT    77777
 0032            CADR   TROLL +1        CONTAINS DT
 0033  2         CADR   MON1TASK
 0034   3.2SPOT  OCT    77777           3.2 RESTART
 0035            OCT    77777
 0036            CADR   TTUMON
 0037  2         CADR   TUMBTSK1
 0038            OCT    0               3.3 RESTART
 0039            OCT    0
 0040            OCT    77777
 0041  2         CADR   REDO3.3
 0042            DEC    700             3.4 RESTART.
 0043            CADR   GIMPOWOF
 0044            OCT    0
 0045  2         OCT    0
 0046            DEC    1050            3.5 RESTART
 0047            CADR   DVMODOFF
 0048            OCT    0
 0049  2         OCT    0
 0050            DEC    1075            3.6 RESTART.
 0051            CADR   ATTCONON
 0052            OCT    0
 0053  2         OCT    0
 0054            DEC    75              3.7RESTART
 0055            CADR   CGTASK
 0056            OCT    0
 0057  2         OCT    0
 0058            DEC    200             3.8 RESTART.
 0059            CADR   GMPOFF3
 0060            OCT    0
 0061  2         OCT    0
 0062            OCT    0               3.9 REATART.
 0063            OCT    0
 0064            OCT    77777
 0065  2         CADR   SETMOD23
 0066            OCT    0               3.10 RESTART.
 0067            OCT    0
 0068            OCT    27000
 0069  2         CADR   SHUTJOB
 0070            DEC    500             3.11 RESTART.
 0071            CADR   CDUXTASK        5SECS FROM TBASE3
 0072            OCT    0
 0073  2         OCT    0
 0074   3.12SPOT DEC    1000            3.12 RESTART.
 0075            CADR   CM/SMTSK        10SECS FROM TBASE3
 0076            OCT    20000
 0077  2         CADR   CDUXJOB
 0078            DEC    1000            3.13 RESTART.
 0079            CADR   CM/SMTSK
 0080            OCT    20000
 0081  2         CADR   REDO3.13
 0082            DEC    1000            3.14 RESTART.
 0083            CADR   CM/SMTSK
 0084            OCT    0
 0085  2         OCT    0
 0086   3.15SPOT DEC    1500            3.15 RESTART
 0087            CADR   ENTATASK        15SECS FROM TBASE3
 0088            OCT    0
 0089  2         OCT    0
 0090   3.16SPOT OCT    0               3.16 RESTART.
 0091            OCT    0
 0092            OCT    15000           PRIO TO REDO HUNTEST.
 0093  2         CADR   PREHUNT
 0094   3.17SPOT 2DEC   0               3.17 RESTART.  ...PRELAUNCH...
 0095            OCT    20000
 0096  2         CADR   REPL11
 0097            2DEC   0               3.18 RESTART.  ...PRELAUNCH...
 0098            OCT    20000
 0099  2         CADR   REPL12
 0100            2DEC   0.0             3.19 RESTART ...PRELAUNCH...
 0101            OCT    20000
 0102  2         CADR   REDO3.21
 0103            2DEC   0               3.20 RESTART.  ...PRELAUNCH...
 0104            OCT    77777
 0105  2         CADR   REDO3.20
 0106            DEC    50              3.21 RESTART. ...PRELAUNCH...
 0107            CADR   REPRELAL
 0108            OCT    21000
 0109  2         CADR   REDO3.21
 01095           DEC    50              3.22 RESTART. ...PRELAUNCH
 0110            CADR   REPRELAL
 0111            2DEC   0.0
 01111  3.23SPOT DEC    200             3.23 RESTART
 01112           CADR   GMPOFF2
 01113           2DEC   0.0
 01114  3.24SPOT DEC    350             3.24 RESTART
 01115           CADR   DVMODOF2
 01116           2DEC   0.0
 01117           DEC    550             3.25 RESTART
 01118           CADR   DVMODOF2
 01119           2DEC   0.0
R0112    ANY MORE GROUP 3 RESTART VALUES SHOULD GO HERE.
 01121           2DEC   0.0             3.26 RESTART
 01122           OCT    05000
 01123 2         CADR   MONITJOB
 01124           2DEC   0.0             3.27 RESTART
 01125           OCT    77777
 01126 2         CADR   TUMBTSK1
R0113  2         ANY MORE GROUP 3 RESTARTS GO IN HERE
 0114   4.1SPOT  OCT    0               4.1 RESTART.
 0115            OCT    0
 0116            OCT    34000           HIGH PRIO.  (WATCH THIS.)
 0117  2         CADR   REDO4.1
 0118   4.2SPOT  OCT    77777           4.2 RESTART.
 0119            OCT    77777
 0120            CADR   LONGTIME + 1
 0121  2         CADR   ENGINOFF
 0122   4.3SPOT  DEC    1050            4.3 RESTART.
 0123            CADR   COASTPHS
 0124            OCT    77777
 0125  2         CADR   REDO4.3
 0126   4.4SPOT  2DEC   -30000          4.4 RESTART
 0127            2DEC   0
 0128            DEC    14616           4.5 RESTART  (DT = 146.16 SEC
 0129            CADR   FDAOFTSK           (310 - 163.84 SEC.)
 0130            2DEC   0
 0131            OCT    77777           4.6 RESTART
 0132            CADR   TCOAST          TCOAST = TIME FORM CUTOFF TO UPTASK.
 0133            2DEC   0
 0134            OCT    0               4.7 RESTART
 0135            OCT    0
 0136            OCT    77777
 0137  2         CADR   UPTASK
 0138            DEC    11500           4.8 RESTART
 0139            CADR   PREAVGON
 0140            OCT    06000
 0141  2         CADR   UPJOB
 0142            DEC    11500           4.9 RESTART
 0143            CADR   PREAVGON
 0144            OCT    06000
 01445 2         CADR   REDO4.9
 0145            DEC    600             4.10 RESTART
 0146            CADR   GIMPOWON
 0147            OCT    77777
 0148  2         CADR   REDO4.10
 0149            DEC    200             4.11 RESTART.
 0150            CADR   TARGTASK
 0151            2DEC   0
 0152            DEC    170             4.12 RESTART.
 0153            CADR   ABRTWAIT         IN 1.7 SEC.
 0154            OCT    25000
 0155  2         CADR   SETS4SEP
 0156            DEC    9950            4.13 RESTART
 0157            CADR   ATTCNOFF        IN 95.5 SEC.
 0158            OCT    77777
 01585 2         CADR   REDO4.13
 0159   4.14SPOT DEC    600             4.14 RESTART.
 0160            CADR   GIMPOWON
 0161            OCT    77777
 0162  2         CADR   REDO4.14
 0163            DEC    250             4.15 RESTART.
 0164            CADR   ATTCNOFF        IN 2.5 SEC
 0165            OCT    25000
 0166  2         CADR   ABORTRPT - 3     WATCH THIS LOC.
 0167            DEC    550             4.16 RESTART
 0168            CADR   ATTCNOFF
 0169            OCT    25000
 0170  2         CADR   REDO4.16
 0171            DEC    10800           4.17 RESTART
 0172            CADR   GIMPOWON
 0173            2DEC   0
 0174            2DEC   0               4.18 RESTART.
 0175            OCT    77777
 0176  2         CADR   ATTCNOFF
 0177            DEC    25              4.19 RESTART.
 0178            CADR   DVMODEON
 0179            2DEC   0
 0180            DEC    50              4.20 RESTART.
 0181            CADR   ENGINEON
 0182            2DEC   0
 0183   4.21SPOT DEC    1000            4.21 RESTART
 0184            CADR   PLUSXOFF
 0185            OCT    25000
 0186  2         CADR   REDO4.21
 0187            2DEC   0               4.22 RESTART.
 0188            OCT    77777
 0189  2         CADR   REDO4.22
 0190            DEC    350             4.23 RESTART
 0191            CADR   ENGINOFF
 0192            OCT    77777
 0193  2         CADR   STEEROFF
 0194            2DEC   0               4.24 RESTART.
 0195            OCT    77777
 0196  2         CADR   GIMPOWON
 0197            DEC    1150            4.25 RESTART
 0198            CADR   ATTCNOFF
 0199            2DEC   0
 0200   4.26SPOT 2DEC   0               4.26 RESTSRT.
 0201            OCT    12000           LOWERED.
 0202  2         CADR   UPTHETA1
 0203   4.27SPOT DEC    12000           4.27 RESTART
 0204            CADR   AVGON           120 SEC FROM UPTASK.
 0205            2DEC   0
 02051  4.28SPOT 2DEC   0               4.28 RESTART SAVES ENGIN OFF SEQUENCE
 02052           OCT    77777           WHILE TBASE4 UPDATED
 02053 2         CADR   SPS1TEST
 020532 4.29SPOT DEC    11500           4.29 RESTART
 020534          CADR   PREAVGON
 020536          OCT    06000
 0205382         CADR   REDO4.29
 02054  4.30SPOT DEC    9000            4.30 RESTART
 020542          CADR   PLUSX2
 020544          2DEC   0.0
 020546 4.31SPOT 2DEC   0.0             4.31 RESTART
 020548          OCT    77777
 02055 2         CADR   REDO4.31
 020552 4.32SPOT 2DEC   0.0             4.32 RESTART
 020553          OCT    77777
 0205542         CADR   REDO4.32
 020555 4.33SPOT 2DEC   0.0             4.33 RESTART
 020556          OCT    77777
 0205572         CADR   ENGINOFF
R0206    ANY MORE GROUP 4 RESTART VALUES SHOULD GO HERE.
R0207
 0208   5.1SPOT  DEC    200             5.1 RESTART
 0209            CADR   REREADAC
 0210            2DEC   0
 0211    5.2SPOT 2DEC   0
 0212            OCT    77777
 0213  2         CADR   REDO5.2
 0214            DEC    200             5.3 RESTART
 0215            CADR   REREADAC
 0216            OCT    17000
 0217  2         CADR   REDO5.3
 0218            DEC    200             5.4 RESTART
 0219            CADR   REREADAC
 0220            OCT    17000
 0221  2         CADR   REFAZE6
 0222            DEC    200             5.5 RESTART.
 0223            CADR   REREADAC
 0224            OCT    17000
 0225  2         CADR   REDO5.5
 0226            DEC    200             5.6 RESTART
 0227            CADR   REREADAC
 0228            OCT    35000
 0229  2         CADR   MODE26
 0230   5.7SPOT  2DEC   0               5.7 RESTART
 0231            OCT    77777
 0232  2         CADR   REDO5.7
 0233            DEC    200             5.8 RESTART
 0234            CADR   SOAKTSK1
 0235            OCT    14000
 0236  2         CADR   SOAKJOB
 0237            DEC    200             5.9 RESTART.
 0238            CADR   SOAKTSK1
 0239            OCT    13000
 0240  2         CADR   REFAZE6
 0241            2DEC   0               5.10 RESTART.
 0242            OCT    12000
 0243  2         CADR   REDO5.10
 0244            DEC    200             5.11 RESTART
 0245            CADR   SOAKTSK1
 0246            2DEC   0
 0247   5.12SPOT DEC    200             5.12 RESTART.
 0248            CADR   REPIPUP
 0249            2DEC   0
 0250            2DEC   0               5.13 RESTART.
 0251            OCT    77777
 0252  2         CADR   REDO5.13
 0253            DEC     200
 0254            CADR   REPIPUP
 0255            OCT    17000
 0256  2         CADR   ENTRYTOP + 3
 0257            DEC    200             5.15 RESTART.
 0258            CADR   REPIPUP
 0259            OCT    17000
 0260  2         CADR   REFAZE4
 0261            DEC    200             5.16
 0262            CADR   REPIPUP
 0263            OCT    16000
 0264  2         CADR   REFAZE6
 0265            DEC    200             5.17 RESTART.
 0266            CADR   REPIPUP
 0267            OCT    17000
 0268  2         CADR   REFAZE8
 0269   5.18SPOT DEC    200             5.18 RESTART
 0270            CADR   REPIPUP
 0271            OCT    17000
 0272  2         CADR   REFAZE10
 0273   5.19SPOT DEC    200             5.19 RESTART.  (PIPUP IN 2 SEC.)
 0274            CADR   REPIPUP
 0275            OCT    17000
 0276  2         CADR   NUMODE63        SETS MODE 63 AND FINISHES ENTRY INITIAL.
 02761  5.20SPOT 2DEC   0.0             5.20 RESTART FOR VERB 76
 02762           OCT    34000
 02763 2         CADR   REDO5.20
 02764  5.21SPOT DEC    0.              5.21 RESTART IS SPARE
 027645          CADR
 02765           OCT    0
 02766 2         CADR
 02767  5.22SPOT DEC    0.0             5.22 RESTART IS SPARE
 027675          CADR
 02768           OCT    0
 02769 2         CADR
 027691 5.23SPOT DEC    200             5.23 RESTART
 027692          CADR   REREADAC
 027693          OCT    17000
 0276942         CADR   REDO5.23
 0277            DEC    200             REDO POINT AFTER AVG STATE VECTOR UPDATE
 02771           CADR   REREADAC
 02772           OCT    17000
 02773 2         CADR   REDO5.24
 02774           DEC    200
 02775           CADR   REREADAC
 02776           OCT    17000
 02777 2         CADR   REFAZE6
R02778 2         ANY MORE GROUP 5 RESTARTS GO HERE.
R0278
 0279  46.1SPOT  DEC    0               6.1 RESTART  (UNDEFINED)
R0280
R0281    ANY MORE GROUP 6 RESTART VALUES SHOULD GO HERE.
R0282  4
 0283   SIZETAB  DEC    0               0 INCREMENT FOR GROUP 1.
 0284            TC     2.1SPOT -26004  INCREMENT TO INDEX GROUP 2 TABLE
 0285            TC     3.1SPOT -26004  INCREMENT TO INDEX GROUP 3
 0286            TC     4.1SPOT -26004  INCREMENT TO INDEX GROUP 4 TABLE.
 0287            TC     5.1SPOT -26004  INCREMENT TO INDEX GROUP 5 TABLE.
 0288            TC     6.1SPOT -26004  INCREMENT TO INDEX GROUP 6 TABLE.
P0289  4   GENERALIZED RESTART ROUTINE.
R0290    FOR EACH FAZEBIT VALUE , THE ASUMPTION IS MADE THAT THERE MAY EXIST
R0291     ONE WAITLIST OR LONGCALL TASK TO BE RECALLED.  AND ONE CURRENT TASK OR
R0292     JOB TO BE RESTARTED.  (SPECIAL RESTARTS ARE POSSIBLE FOR SITUATIONS
R0293     WHICH DONOT FIT THE GENERAL FORM.)  FOR THE GENERAL CASE,  FOUR TABLES
R0294     ARE USED.
R0295        (RATHER,  ONE TABLE WITH 4 ENTRIES PER FAZEBIT VALUE.)
R0296                   1.  WTDTTAB.  WAITLIST DT TABLE.
R0297                   2.  WCADRTAB  WAITLIST CADR TABLE.
R0298                   3.  PRIOTAB  CURRENT JOB PRIORITY. (NEG NUMB IF TASK.)
R0299                   4.  CADRTAB  CURRENT JOB (OR TASK) RESTART LOCATION.
R0300     IN ADDITION, THERE EXISTS A SIZE TABLE THAT LISTS THE NUMBER OF
R0301     LOCATIONS USED BY EACH PROFRAM FOR RESTARTS.
R0302  4         ...MORE TO COME LATER...                  (DJL)
 0303   RESTARTS XCH    MPAC            FAZE BITS FOR THIS PROG IN MPAC.
 0304            DOUBLE
 0305            DOUBLE                 MULTILY BY 4.  (4 ITEMS PER ENTRY.)
 0306            INDEX  LOC             LOC CONTAINS THE PROGRAM NUMBER-1. (0-5)
 0307            AD     SIZETAB
 0308            TS     POINTER
 0309            CAF    TCURRENT
 0310            TS     GOLOC + 1       EXIT LOCATION.
 0311            CAF    TCWAIT          SET A WAITLIST CALL IN ERASABLE.
 0312  2         TS     GOLOC - 1
 0313            INDEX  POINTER
 0314            CAF    WTDTTAB
 0315            CCS    A
 0316            TC     WTCALL          +N = WAITLIST CALL
 0317            TC     CURNTJOB        +0 = NO CALL
 0318            TC     LONGCLER        -N = LONGCALL
 0319            INDEX  POINTER         -0 = INDIRECT (PROBABLY)
 0320            CAF    WCADRTAB
 0321            CCS    A
 0322            TC     INDIRECT
 0323   TCURRENT TC     CURNTJOB        NO ZERO CALLS
 0324            TC     LONGCLER - 1    NEG OF TIME FOR SHORT LONG.
 0325  2         TC     SINDIR
 0326            CS     ONE
 0327   LONGCLER AD     ONE             RESTORE LONGTIME
 0328            TS     RECALL
 0329            INDEX  POINTER
 0330            CS     WCADRTAB        STORED NEGATIVELY.
 0331            TS     RECALL + 1
 0332            TC     IBNKCALL
 0333            CADR   NULONGDT
 0334            TC     IBNKCALL
 0335            CADR   LONGCALL
 0336  4         TC     CURNTJOB
R0337  4
R0338    INDIRECT SECTION TAKES THE DP TIME FRON THE ERASABLE LOCATIONS BY THE
R0339  2    NUMBER IN THE WCADRTAB.    (WTDTTAB = -0.)
 0340   INDIRECT TS     ECADTEM         CADR-1 IS STORED.  (DUE TO CCS.)
 0341            INDEX  A
 0342            CS     1               (1 NOT 0 BECAUSE CADR OFF BY 1.)
 0343            COM                    (NOT NEEDED IF NEG TIME STROED.USAGE..)
 0344            TS     RECALL          AND STORE MAJOR PART.
 0345            INDEX  ECADTEM
 0346            CS     2               AGAIN ONE MORE THAN USUAL.
 0347            COM
 0348  4         TC     LONGCLER + 4    STORE MINOR PART THERE
R0349  2ASSIGNMENTS ETC.
 0350   GOLOC    EQUALS OVFIND          USES ONE LOCATION ON EACH SIDE OF IT.
 0351   TEMDT    EQUALS MPAC + 2
 0352   RECALL   EQUALS MPAC + 1        MUNTZ NOW USINF LOC IN RESTART CONTROL.
 0353   ECADTEM  EQUALS RECALL + 1      LOOKS OK.
 0354   POINTER  EQUALS MPAC
R0355  2  MPAC + 1 SAVED BECAUSE OF USE IN RESTART CONTROL.  (CCS MPAC + 1)
R0356  2   THIS ROUTINE LEAVES THE WITLIST CALL AS GIVEN BY WCADRTAB.
 0357   WTCALL   AD     ONE             DT-1 IN A ON ENTRY.  (FROM CCS.)
 03572           COM                    STORE NEGATIVE OF DT IN TEMDT.
 0358            TS     TEMDT
 0359            INDEX  POINTER
 0360            CAF    WCADRTAB        PICK UP CADR FOR THIS CALL.
 0361  2         TS     GOLOC           GOLOC+1 AND -1 ALREADY SET-UP.
 0362   WTCALL2  INDEX  LOC             FIRST GET TBASE - TIME1
 03625           CS     TBASE2 -1       TBASE STORED NEGATIVELY
 0363            EXTEND
 03635           SU     TIME1           TBASE - TIME1
 0364            CCS    A               THIS SHOULD BE NEGATIVE IF ALL OK.
 03645           COM                    GET POSMAX - A.
 0365            AD     OCT37776        1 BIT SHY OF POSMAX.
 03655           AD     ONE             RESTORE BIT LOST BY CCS.
 0366            AD     TEMDT           TIME1 - TBASE - DT  NOW IN  A.
 0367            CCS    A               TEST IT.  SHOULD BE NEGATIVE.
 0368            CAF    ZERO            EXCEEDED TIME.  BAD,BAD...
 0369            TC     +2              (+0 JUST POSSIBLE.)
 0370            TC     +1              YES, EVERYTHING OK.
 0371            AD     ONE             NOW IS THE TIME.
 0372  4         TC     GOLOC - 1
 03725 4OCT37776 OCT    37776           POSMAX - 1
 0373   SINDIR   CAF    TCSWRET
 0374            TS     GOLOC + 1
 0375            INDEX  POINTER
 0376            CAF    CADRTAB         PICK UP CADR TO GO TO.
 0377  2         TS     GOLOC
 0378            INDEX  POINTER
 0379            INDEX  PRIOTAB         IT POINTS AT THE ERASABLE LOCATION OF DT
 0380            CS     0               NEG OF DT IN A.
 03805           TS     TEMDT
 0381            TC     WTCALL2         JOIN THERE TO RECOMPUTE TIME REMAINING.
P0382  2 GETS CURRENT JOB (OR TASK) RERUNNING.
 0383   CURNTJOB INDEX  POINTER
 0384            CAF    CADRTAB
 0385            TS     GOLOC           PUT ADDRESS THERE (CADR)
 0386            CAF    TCSWRET
 0387            TS     GOLOC + 1       WHERE TO WHEN DONE.
 0388            INDEX  POINTER
 0389            CAF    PRIOTAB         PRIORITY TABLE.
 0390            CCS    A               TEST IT.
 0391            TC     ITSAPRIO        +N = PRIORITY.
 0392   TCSWRET  TC     SWRETURN        +0 = NO JOB OR TASK.
 0393            TC     SHINDIRT        -N = SHORT INDIRECT FORM.
 0394            AD     ONE             -0 = IMMEDIATE WAITLIST CALL.
 0395  2         TC     GOLOC -1        -0 WILL CRASH OUT HERE...
 0396   ITSAPRIO AD     ONE             RESTORE CORRECT PRIORITY VALUE.
 0397            TS     GOLOC - 1       SAVE THERE TEMPORARILY.
 0398            CAF    TCFINDVC        N3 RPOVISION FOR NOVAC.
 0399            XCH    GOLOC - 1       PICKING UP PRIORITY AGAIN.
 0400  4         TC     GOLOC - 1       AND GET THE JOB STARTED. (EXIT VIA SWRET
R0401  2  SHORT INDIRECT SECTION IS NOT USED AS YET.
 0402   SHINDIRT INDEX  A
 0403            CS     1               CCS DECREASED ADDRESS BY 1 OF DT LOC.
 04035           TS     TEMDT
 0404  4         TC     WTCALL2         -DT IN A WHEN REJOINING WTCALL.
R0405  2 TBASE REGISTERS CONTAIN NEGATIVE OF TIME AT START OF SEQUENCE.
R0406  2 ROUTINE TO GENERATE  NEW DELTA T (LONGTIME) FOR LONGCALL.
 0407   NULONGDT TC     READTIME + 1    GET TIME.  (ALREADY INHIBITTED.)
 0408            CAF    ZERO
 0409            AD     TCUTOFF + 1      (POSITIVE NUMBER)
 0410            AD     RUPTSTOR + 1    (NEGATIVE NUMBER)
 0411            AD     RECALL + 1
 0412            TS     LONGTIME + 1    (COULD OVERFLOW)
 0413            CAF    ZERO
 0414            AD     TCUTOFF
 0415            AD     RUPTSTOR
 0416            AD     RECALL
 0417            XCH    LONGTIME        NO OVERFLOW.
 0418            CCS    LONGTIME        TEST FOR POSITIVE DT.
 0419            TC     ISWRETRN        (DONT HAVE TO USE ICALLS IF SAME BANK.)
 0420            TC     +2
 0421            TC     BADLONG
 0422            CCS    LONGTIME + 1
 0423            TC     ISWRETRN
 0424            TC     +1
 0425   BADLONG  CAF    ZERO
 0426            TS     LONGTIME
 0427            CAF    ONE             LEAVE A CALL FOR 1 DT.
 0428            TS     LONGTIME + 1
 0429            TC     ISWRETRN        ...AND EXIT.
R0430      THIS COULD BE MODIFIED EASILY TO CHANGE BAD DT POLICY.
L      2FRESH START AND RESTART
 0001            BANK   4
R0002  2         FRESH START - A KEYBOARD REQUEST TO INITIALIZE THE SYSTEM.
 0003   SLAP1    INHINT                 COMES HERE FROM THE PINBALL VERB FAN.
 0004            CAF    ZERO             (ZERO FAILREG IN FRESH START ONLY).
 0005            TS     FAILREG
 0006            TS     MODREG
 00065 2         TS     REDOCNTR        ZERO ONLY DURING FRESH START.
 0007            CAF    BIT4            DISABLE IMU FAIL FOR 5 SECS.
 0008   SLAP2    TS     OLDERR           CURTAINS ENTERS HERE FROM THATSALL.
A0009                                   DSPLOCK (BIT4 OF STATE), UPLOCK (BIT2 OF
A0010                                   STATE), EXTVBACT (BIT3 OF STATE) ARE
A0011                                   ZEROED BELOW (FRESH START ONLY).
 0012            CAF    ZERO
 0013  2         TS     ERCOUNT
 0014  2         TC     STARTSUB        SUBROUTINE DOES MOST OF THE WORK.
 0015   NOGO     CAF    MAXPROG         MAKE ALL RESTART GROUPS INACTIVE.
 0016            TS     BUF
 0017            CS     ONE
 0018            INDEX  BUF
 0019            TS     PHASE1
 0020            COM
 0021            INDEX  BUF
 0022  2         TS     -PHASE1
 0023            CCS    BUF
 0024  2         TC     NOGO +1
 00248           TS     OUT1            RESET OUT1 HERE INSTEAD OF IN STARTSUB.
 0025  2         TS     SMODE           DISABLE SELF-CHECK.
 0026            CAF    BIT15           TELL T4RUPT TO TURN OFF ALL C RELAYS.
 0027   DSP12D   TS     DSPTAB +12D
 0028  2DSP13D   TS     DSPTAB +13D
 0029            CAF    OCT40010
 0030  2DSP11D   TS     DSPTAB +11D     LEAVE IMU IN FINE ALIGN
 0031  2         TS     WASKSET         DISABLE KSAMP DURING INITIAL TRANSIENT.
 0032            CAF    BIT5            FOR 160 MS.
 0033            TC     WAITLIST
 0034  2         CADR   KENABLE
 0035            XCH    IN3
 0036            XCH    IN3
 0037            MASK   OPTMODES
 0038  2         TS     WASOPSET
 0039            CAF    SWINIT          INITIALIZE SWITCH BIT AREA ON FRESH
 0040            TS     STATE           START ONLY.
 0041            CAF    SWINIT +1
 0042            TS     STATE +1
 0043            CAF    SWINIT +2
 0044  2         TS     STATE +2
 0045            CS     OLDERR          SEE IF CURTAINS CALLED FRESH START.
 0046            MASK   BIT5
 0047            CCS    A
 0048  2         TC     STARTSW
 0049            TC     ALARM
 0050  2         OCT    00301
 0051   STARTSW  TC     ENDFRESH
 0052   ESTART   CAF    PRIO25          FIRE UP INITIALIZATION JOB.
 0053            TC     FINDVAC
 0054  2         CADR   BEGIN501
 0055  2         TC     ENDFRESH
 0056   KENABLE  CAF    OCT50           COMMANDED FINE ALIGN.
 0057            TS     WASKSET
 0058            CAF    BIT10           REMOVE IMU FAIL INHIBIT IN 5 SECS.
 0059            TC     WAITLIST
 0060  2         CADR   IFAILOK
 0061  2         TC     TASKOVER
 0062   THATSALL TS     SFAIL           CURTAINS - FLUSH MISSION PROGRAM.
 0063            INHINT
 0064            CAF    BITS4&5         DO FRESH START AND PROGRAM ALARM.
 0065  2         TC     SLAP2
 0066   MAXPROG  EQUALS FIVE
 0067  2BITS4&5  OCT    30
 00671  BITS5&7  OCT    120
P0068            WHENEVER A GO SEQUENCE (GOJAM) IS FIRED,  GOPROG  IS CALLED TO
 0069  9RESTART ANY COMPUTER ACTIVITY THAT
R0070   MAY HAVE BEEN GOING ON AT THE TIME. (A NUMBER OF ALARMS SUCH AS PARITY F
 0071  9AILURE OR POWER FAILURE CAUSE GOJAM).
R0072   THE FUNCTION OF GOPROG IS TO INITIALIZE THE COMPUTER SUB-SYSTEM (I. E.,
 0073  9NO C RELAYS ARE CHANGED, ETC.) AND
R0074  2RESTART ALL MAJOR ROUTINES WHOSE PHASE BITS INDICATE ACTIVITY.
 00741  GOPROG   CCS    ERESTORE        RESTORE TWO ERASABLE REGISTERS IF
 00742           TC     +2              RESTART OCCURS WHILE SELF-CHECK HAS
 00743           TC     GOPROG2         REMOVED CONTENTS OF THESE REGISTERS.
 00744           CS     1776
 00745           CS     A
 00746           NDX    1777
 00747           TS     0001            RESTORE C(X)
 00748           CS     1775
 00749           CS     A
 007491          NDX    1777
 007492          TS     0000            RESTORE C(X-1)
 0075   GOPROG2  CAF    DVMONMSK        SHOULD BE SYS FLAG FOR ENGINE ON.
 00751           MASK   FLAGWRD1
 00752           CCS    A               SEE IF ENGINE WAS ON.
 00753           CAF    BIT13           YES..PUT IT BACK ON.
 00754 2         TS     OUT1            NO...ZERO IT.
 00759           CAF    TWO             SET RESTART FAIL INDICATION, WHICH WILL
 0076            TS     OLDERR          BE REMOVED AFTER SUCCESSFUL VERIFICATION
 0077  2         TC     STARTSUB        OF PHASE TABLE AGREEMENT.
 0078            XCH    IN0             IF BOTH ERROR RESET AND MARK ARE
 0079            MASK   HUNGMASK        DEPRESSED, FALL INTO FRESH START TO
 0080            AD     HUNGCODE        HOPEFULLY PREVENT OR STOP RECURRING GOS.
 0081            CCS    A
 0082            TC     PHASECHK -1     RESTART
 0083   HUNGCODE OCT    37755           COMPLEMENT OF IN0 HUNG SETTING.
 0084            TC     PHASECHK -1     RESTART
 0085  2         TC     NOGO
 0086            CAF    MAXPROG         PHASE BITS ARE KEPT IN TWO COPIES,
 0087   PHASECHK TS     MPAC            ONE DIRECT AND ONE COMPLEMENTED. THIS
 0088            INDEX  A               SECTION MAKES SURE ALL ENTRIES IN EACH
 0089            CS     PHASETAB        SATISFIES THIS RULE AS AN INDICATION OF
 0090            TS     BUF             THE GOODNESS OF ERASABLE MEMORY. IF THE
 0091            COM                    TEST FAILS, DO A FRESH START WITH THE
 0092            INDEX  MPAC            MODE LIGHTS SET TO 00 TO TELL THE STORY.
 0093            MASK   PHASEBAR
 0094            TC     ZEROTEST        P.(-P) AND (-P).(--P) SHOULD BOTH BE
 0095            INDEX  MPAC            +0 FOR A LOGICAL MATCH.
 0096            CS     PHASEBAR
 0097            MASK   BUF
 0098  2         TC     ZEROTEST
 0099            CCS    MPAC
 0100  2         TC     PHASECHK
 01005           TS     DISPCNTR        ENABLE VG DISPLAY GRAB
 0101            TS     OLDERR          NO RESTART FAIL.
 01011           CAF    ONE             INCREMENT REDOCNTR.
 01012           AD     REDOCNTR
 01013 2         TS     REDOCNTR
 01016           CS     BIT15
 01017           MASK   DSPTAB + 13D    PICK UP ALL BUT BIT 15.
 01018           AD     BIT15           SET BIT 15 TO FORCE RESETTING RELAYS.
 01019 2         TS     DSPTAB + 13D    MIGHT TAKE A WHILE TO GET OUT.
 0102   CHECKIN3 XCH    IN3             PUT PRESENT MODES INTO WAS  REGISTERS.
 0103            XCH    IN3
 0104            TS     WASKSET
 0105            MASK   LOW7
 0106            XCH    WASKSET
 0107            MASK   OPTMODES
 01075 2         TS     WASOPSET
 0108            CAF    BITS5&7         IMU ATTITUDE CONTROL OR ENTRY MODE.
 01081           MASK   WASKSET
 01082           CCS    A               IS IT IN ONE OF THESE MODES.
 01083           CS     ZERO            YES.. PUT +0 INTO CDUIND.
 01084           COM                    NO... PUT -0 INTO CDUIND.
 01085 2         TS     CDUIND
 0109            CCS    IN0
 0110            TC     GOJUMP
 0111            TC     GOJUMP
 0112            TC     +1
 0113            CS     BIT12
 0114            MASK   WASOPSET
 0115  8         TS     WASOPSET
 0116   GOJUMP   CAF    MAXPROG         SCAN PHASE TABLE FOR ACTIVITY.
 0117  2         TS     LOC
 0118            RELINT                 OPEN THE INTERRUPT GATE SO THAT EACH
 0119  2         INHINT                 GO DISPATCH HAS 10 MS.
 0120            AD     ONE             GROUP NUMBER IN PROG.
 0121            TS     PROG
 0122            INDEX  A               SEE IF GROUP ACTIVE.
 0123            CCS    PHASE1 -1
 0124            TC     PROGON          VALID IF PHASE LESS THAN 127.
 0125            TC     GOTERM          DO REQUESTED PHASE TERMINATE.
 0126            CCS    A               INACTIVE IF PHASE = -1.
 0127            TC     RSTFAIL2        BAD DATA IF -0.
 0128   GORETURN CCS    LOC
 0129  2         TC     GOJUMP +1
 0130            CAF    PRIO37          FIRE UP JOB TO DISPLAY FAILREG
 0131            TC     NOVAC
 0132  2         CADR   DOALARM
 0133   ENDFRESH RELINT
 0134            TC     BANKCALL        DISPLAY MAJOR MODES.
 0135  2         CADR   DSPMM
 0136            TC     POSTJUMP
 0137  2         CADR   DUMMYJOB        THIS REVERTS TO THE IDLING JOB.
 0138   ZEROTEST CCS    A
 0139            TC     NOGO            RESTART FROM GO IMPOSSIBLE.
 0140            TC     Q               OK SO FAR
 0141            TC     NOGO
 0142            TC     NOGO
P01421 2  INTERNAL RESTART BY PROGRAM CONTROL TO FLUSH OUT WAITLIST AND EXEC.
 01422  ENEMA    INHINT                 A STRANGE INSTRUCTION TO BEAR THIS NAME.
 01423 2         TC     STARTSUB
 01427           CS     ZERO            ALL 7 IN SFAIL DENOTES PROGRAMMED REDO.
 01428 2         TS     SFAIL
 01429           TC     CHECKIN3
P0143  2         DISPATCH OR TERMINATE RESTART GROUPS.
 0144   PROGON   AD     ONE             PHASE BITS TO MPAC.
 0145            TS     MPAC
 0146            CS     LOW7            CHECK SIZE.
 0147            MASK   MPAC
 0148            CCS    A
 0149  2         TC     RSTFAIL2        RESTART FAIL - OUT OF RANGE.
 0150            INDEX  LOC             JUMP TO GOCADR LOC.
 0151            CAF    GOCADR
 0152  2         TC     SWCALL
 0153  2         TC     GORETURN        ON RETURN FROM SWCALL.
 0154   GOTERM   CS     ONE             IF A RESTART GROUP HAD BEEN REQUESTED TO
 0155            INDEX  LOC             TERMINATE, DO THE TERMINATE NOW.
 0156            TS     PHASE1
 0157            COM
 0158            INDEX  LOC
 0159            TS     -PHASE1
 0160  2         TC     GORETURN
 0161   RSTFAIL2 CAF    TWO             BAD DATA IN RESTART TABLES - FAIL.
 0162            TS     OLDERR
 0163            TC     NOGO
P0164            INITIALIZATION SUBROUTINE, CONTAINING INITIALIZATION COMMON TO
 0165  9BOTH FRESH START (KEYBOARD REQUEST) AND
R0166  2RESTART (IN RESPONSE TO A GO SEQUENCE).
 0167   STARTSUB XCH    Q
 0168  2         TS     BUF             EXEC TEMPS ARE AVAILABLE TO US.
 0169            CAF    POSMAX          T3 AND T4 OVERFLOW AS SOON AS POSSIBLE.
 0170            TS     TIME3             (POSMAX IS PSEUDO INTERRUPT SIGNAL IN
 0171  2         TS     TIME4             CASE RUPT SIGNALLED BEFORE TS TIME3).
 0172            CAF    NEG1/2          INITIALIZE WAITLIST DELTA-TS.
 01723           TS     LST1 +6
 01726           TS     LST1 +5
 0173            TS     LST1  +4
 0174            TS     LST1  +3
 0175            TS     LST1  +2
 0176            TS     LST1  +1
 0177  2         TS     LST1
 0178            CS     ENDTASK         SET ALL TASKS TO DUMMY TASK.
 01783           TS     LST2 +7
 01786           TS     LST2 +6
 0179            TS     LST2  +5
 0180            TS     LST2  +4
 0181            TS     LST2  +3
 0182            TS     LST2  +2
 0183            TS     LST2  +1
 0184  2         TS     LST2
 0185            CS     ZERO            MAKE ALL EXECUTIVE REGISTER SETS
 0186            TS     PRIORITY +8D    AVAILABLE (EXCEPT THIS ONE).
 0187            TS     PRIORITY +16D
 0188            TS     PRIORITY +24D
 0189            TS     PRIORITY +32D
 0190            TS     PRIORITY +40D
 0191            TS     PRIORITY +48D
 0192  2         TS     PRIORITY +56D
 0193            TS     DSRUPTSW        -0 GIVES US 40 MS TO GET READY FOR T4.
 0194            TS     CDUIND          MAKE IMU AND OPTICS AVAILABLE.
 0195  8         TS     OPTIND
 0196            CAF    VAC1ADRC        MAKE ALL VAC AREAS AVAILABLE.
 0197            TS     VAC1USE
 0198            AD     LTHVACA
 0199            TS     VAC2USE
 0200            AD     LTHVACA
 0201            TS     VAC3USE
 0202            AD     LTHVACA
 0203            TS     VAC4USE
 0204            AD     LTHVACA
 0205  2         TS     VAC5USE
 0206            CAF    BIT10           THIS REGISTER SET BECOMES DUMMY JOB.
 0207  2         TS     PRIORITY
 0210            CAF    TEN             TURN OFF ALL DISPLAY SYSTEM RELAYS.
 0211   DSPOFF   TS     MPAC
 0212            CS     BIT12
 0213            INDEX  MPAC
 0214            TS     DSPTAB
 0215            CCS    MPAC
 0216  2         TC     DSPOFF
 02165           TS     ERESTORE
 0217            TS     UPLINK          THESE MIGHT PICK UP AN INCREMENT DURING
 0218            TS     56              A GO.
 0219            TS     DSPCNT          SKIPS TO HERE WHEN FINISHED WITH C(A)=0.
 0220            TS     NEWJOB
 0222            TS     CADRSTOR
 0223            TS     REQRET
 0224            TS     CLPASS
 0225            TS     MONSAVE         KILL MONITOR
 0226            TS     MONSAVE1
 0227            TS     GRABLOCK
 0228            TS     VERBREG
 0229            TS     NOUNREG
 0230            TS     DSPLIST
 0231            TS     DSPLIST +1
 0232  8         TS     DSPLIST +2
 0233            TS     LGYRO           MAKE GYRO ROUTINES AVAILABLE.
 0234            TS     GCOMP           ZERO COMPENSATING GYRO TORQUES.
 0235            TS     GCOMP +1
 0236            TS     GCOMP +2
 0237            TS     GCOMP +3
 0238            TS     GCOMP +4
 0239            TS     GCOMP +5
 0240            TS     DESKSET         NO COMPUTER COMMAND.
 0241            TS     DESOPSET        (SAME AS IMU).
 0242            TS     IMUCADR         INITIALIZE MODE-SWITCHING.
 0243            TS     OPTCADR
 0244            TS     TMMARKER
 0245  2         TS     MARKSTAT        MAKE MARK SYSTEM AVAILABLE.
 02465           CS     TIME1           SAVE TIME OF LAST RESTART. (MINUS VALUE)
 02466 2         TS     REDOTIME + 1
 0247            CAF    SIX             (MAY NOT GET ANY ENDPULSES BEFORE T4).
 0248  2         TS     TELCOUNT
 0249            CAF    LPHASE1
 0250  2         TS     DNTMGOTO
 0251            CAF    LDNLST1
 0252  2         TS     DNLSTADR
 0253            CAF    NOUTCON
 0254  2         TS     NOUT
 0255            CS     BIT3/4          ZERO ONLY DSPLOCK (BIT4 OF STATE) AND
 0256            MASK   STATE           EXTVBACT (BIT3 OF STATE) FOR RESTART.
 0257            TS     STATE           UPLOCK (BIT2 OF STATE) IS ZEROED ONLY
A0258                                   IN FRESH START.
 0259            CS     VD1
 0260            TS     DSPCOUNT
 0261  8         TC     BUF             DONE.
 0262   HUNGMASK OCT    40037           KEYCODE AND MARK BUTTON ONLY
 0263  2OPTMODES OCT    35000
 0264   OCT50    OCT    50              FINE ALIGN + TRANSFER SWITCH.
 0265   OCT40010 OCT    40010           IMU FINE ALIGN C-RELAY SETTING.
 0266   LPHASE1  ADRES  DNPHASE1
 0267   BIT3/4   OCT    14
 0268  4NOUTCON  DEC    11
 0269   GOCADR   CADR   ENDOFJOB        FOR 501 ONLY
 0270            CADR   RESTARTS        GROUP 2 RESTARTS.
 0271            CADR   RESTARTS        GROUP 3 RESTARTS.
 0272            CADR   RESTARTS        GROUP 4 RESTARTS.
 0273            CADR   RESTARTS        GROUP 5 RESTARTS.
 0274  2         CADR   RESTARTS        GROUP 6 RESTARTS.
 0275   VAC1ADRC ADRES  VAC1USE
 0276  2LTHVACA  DEC    44
 0277   SWINIT   OCT    01340
 0278            OCT    00000           STATE +1
 0279            OCT    00000           STATE +2
L 001  2DOWN-TELEMETRY PROGRAM
R0001   TELEMETRY PROCESSOR
R0002  2--------- ---------
R0003            THE FOLLOWING TELEMETRY PROGRAM IS DESIGNED TO TRANSMIT TELEMET
 0004  9RY DATA VIA OUT4 WHEN AN ENDPULSE
R0005   FROM THE NORTH AMERICAN TELEMETRY PROGRAMMER TRIGGERS INTERRUPT 6, WHICH
 0006  9 INITIATES THIS ROUTINE. IT OPERATES
R0007   IN CONJUNCTION WITH (BUT ASYNCHRONOUSLY FROM) THE T4RUPT PROGRAM, WHICH
 0008  9IS INITATED EVERY 60 MS. VIA INTERRUPT
R0009  23.
 0010            BANK   1
 0011   DOWNRUPT CCS    TELCOUNT        PNZ IS NORMAL SETTING - +0 INDICATES
 0012            TC     DOWNTMOK        TM FAILURE SINCE ENDPULSES ARE OCCURING
 0013  2         TC     TMFAIL          TOO FREQUENTLY. THE COUNTER IS SET TO +7
 0014            CS     BIT10           BLOCK TM ENDPULSES UNTIL  ERROR RESET
 0015            MASK   OUT1            COMMAND IS GIVEN.
 0016            AD     BIT10
 0017  2         TS     OUT1
 0018  2         TC     NBRESUME        BY DSRUPT EVERY 120 MS.
 0019   DOWNTMOK TS     TELCOUNT        NORMAL MODE - STORE DECREMENTED COUNT.
 0020  2         TC     DNTMGOTO        JUMP TO APPROPRIATE DOWNLINK PHASE.
R0021            IN PHASE 7, SEND REQUIRED NUMBER OF DUMMY MARKS, ENTERING PHASE
 0022  9 1 WHEN FINISHED. ANY REAL MARKERS
R0023  2OCCURING HERE WILL NOT BE SENT UNTIL PHASE 3.
 0024   DNPHASE7 CCS    MARKERCT        REDUCE TO ZERO.
 0025  2         TC     DUMMARK
R0026  2         PHASE 1 SENDS LIST ID AND SETS UP PHASE 2.
 0027   DNPHASE1 CAF    LPHASE2
 0028            TS     DNTMGOTO
 0029            CAF    LTHCOMA         NUMBER OF WORDS IN COMMON LIST A.
 0030            TS     TMINDEX
 0031            CS     DNLSTADR        CHANGES IN DNLSTADR NOT HONORED UNTIL
 0032            COM                    THIS PHASE.
 0033            TS     LDATALST
 0034            MASK   LOW11
 0035            AD     60K             AT FOD'S REQUEST.
 0036            TC     W.O.=1
P0037  2         PHASE 2 SENDS COMMON LIST A: DSPTAB, T2, T1, I/O, CDUS, ETC. NO
 0038  9 MARKERS ARE INTERSPERSED WITH THE DATA.
 0039   DNPHASE2 CCS    TMINDEX         SEE IF MORE DATA TO BE SENT.
 0040  2         TC     PHASE2A
 0041            CAF    LPHASE3         IF NOT, BEGIN PHASE 3.
 0042            TS     DNTMGOTO
 0043            CAF    NOMRKRS         NUMBER OF MARKERS/SECOND.
 0044            TS     MARKERCT
 0045            CAF    LTHLSTA         NUMBER WORDS IN PARTICULAR LISTS A.
 0046  2         TS     TMINDEX
R0047  2         PHASE 3 - SEND DOWN PARTICULAR LIST A WITH REAL MARKERS INTER-L
 0048  9EAVED.
 0049   DNPHASE3 CCS    TMMARKER        SEE IF ANY MARKERS TO BE SENT.
 0050  2         TC     DOMARKER
 0051            CCS    TMINDEX         SEND DOWN PART. LIST A ENTRY IF ANY.
 0052  2         TC     PHASE36A        (COMMON TO PHASES 3 AND 6.)
 0053            CAF    LPHASE4         END OF PHASE 3, START PHASE 4.
 0054  2         TS     DNTMGOTO
R0055  2         PHASE 4: SEND DUMMY MARKERS UNTIL MARKERCT = 0.
 0056   DNPHASE4 CCS    MARKERCT        (NONE MAY BE REQUIRED)
 0057  2         TC     DUMMARK
 0058            CAF    LPHASE5         END OF PHASE 4 - BEGIN PHASE 5.
 0059            TS     DNTMGOTO
 0060  2         CAF    LTHCOMB         NUMBER OF WORDS IN COMMON LIST B - 1.
R0061  2         PHASE 5: SEND COMMON LIST B WITH NO MARKERS INTER-LEAVED.
 0062   PHASE5A  TS     TMINDEX         (ENTERS HERE FIRST TIME ONLY).
 0063            INDEX  A
 0064            INDEX  COMLSTB
 0065            CS     0
 0066  2         TC     DATADWNF
 0067   DNPHASE5 CCS    TMINDEX         NORMAL PHASE 5 ENTRY.
 0068            TC     PHASE5A
P0069            AT END OF PHASE 5, BEGIN PHASE 6. THE ADDRESS OF PARTICULAR LIS
 0070  9T B IMMEDIATELY PRECEEDS
R0071  2PARTICULAR LIST A.
 0072            CAF    LPHASE6
 0073            TS     DNTMGOTO
 0074            CAF    LTHLSTB         NUMBER OF WORDS IN PARTICULAR LISTS B.
 0075            TS     TMINDEX
 0076            CAF    NOMRKRS
 0077  2         TS     MARKERCT
 0078            CAF    LISTBANK        GET ADDRESS OF PART. LIST B.
 0079            XCH    BANKREG
 0080            XCH    LDATALST
 0081            AD     MINUS1
 0082            INDEX  A
 0083            CS     0               SO WE CAN RUN IN ERASABLE.
 0084            COM
 0085            XCH    LDATALST
 0086  2         TS     BANKREG
R0087  2         PHASE 6: PARTICULAR LIST B AND REAL MARKERS.
 0088   DNPHASE6 CCS    TMMARKER
 0089  2         TC     DOMARKER
 0090            CCS    TMINDEX
 0091  2         TC     PHASE36A
 0092            CAF    LPHASE7         SWITCH TO PHASE 7 TO SUPPLY REQUIRED
 0093            TS     DNTMGOTO        NUMBER OF DUMMY MARKS.
 0094            TC     DNPHASE7
P0095            OUT OF SEQUENCE ROUTINES.
 0096   PHASE2A  TS     TMINDEX         SELECT DATA WORD FOR COMMON LIST A IN
 0097            INDEX  A               IN FIXED-FIXED.
 0098            INDEX  COMLSTA
 0099            CS     0
 0100   DATADWNF COM                    PHASE 5 (COMMON LIST B) EXITS HERE.
 0101            TS     OUT4
 0102            CS     BIT9
 0103            MASK   OUT1
 0104            TS     OUT1
 0105  2         TC     NBRESUME        NO BANK SWITCH REQUIRED.
 0106   PHASE36A TS     TMINDEX         PHASES 3 AND 6 (PARTICULAR DATA LISTS)
 0107            CAF    LISTBANK        EXIT HERE
 0108            XCH    BANKREG
 0109  2         TS     BANKRUPT        PARTICULAR LISTS IN SWITCHED BANK.
 0110            CCS    LDATALST        (SAVES 2 MCT).
 0111            AD     TMINDEX
 0112            INDEX  A
 0113            INDEX  1               (1 COMPENSATES FOR ABOVE CCS.)
 0114            CS     0
 0115            COM
 0116            TS     OUT4
 0117            CS     BIT9
 0118            MASK   OUT1
 0119            TS     OUT1
 0120  2         TC     RESUME
 0121   DOMARKER CCS    MARKERCT        COME HERE TO SHIP DOWN REAL MARKER.
 01211           TC     +2              PROTECT AGAINST TOO MANY TMMARKERS
 01212           TC     Q                 BEING SENT DOWN WITHIN ONE SECOND
 0122   DUMMARK  TS     MARKERCT        REDUCE MARKERCT (NEVER IS ZERO ABOVE).
 0123            CAF    ZERO
 0124            XCH    TMMARKER
 0125            AD     DN74K           AT FOD'S REQUEST.
 0126   W.O.=1   TS     OUT4            PHASE 1 EXITS HERE.
 0127            CS     BIT9
 0128            MASK   OUT1
 0129            AD     BIT9
 0130            TS     OUT1
 0131            TC     NBRESUME
P0132  2CONSTANTS.
 0133   LPHASE2  ADRES  DNPHASE2        ADDRESSES FOR DNTMGOTO.
 0134   LPHASE3  ADRES  DNPHASE3
 0135   LPHASE4  ADRES  DNPHASE4
 0136   LPHASE5  ADRES  DNPHASE5
 0137   LPHASE6  ADRES  DNPHASE6
 0138  2LPHASE7  ADRES  DNPHASE7
 0139   LTHCOMA  DEC    26              LENGTH OF COMMON LIST A.
 0140   LTHCOMB  DEC    13              LENGTH OF COMMON LIST B - 1.
 0141   LTHLSTA  DEC    21              PARTICULAR LIST A.
 0142   LTHLSTB  DEC    32              PARTICULAR LIST B.
 0143   DN74K    OCT    74000
 0144  2NOMRKRS  EQUALS THREE
 0145   LDNLST1  ADRES  501LSTA1
 0146   LDNLST2  ADRES  501LSTA2
 0147   LISTBANK CADR   501LSTA1
R0148  2         SUBROUTINE COMMON TO UPLINK AND DOWNLINK TO TURN ON THE TM FAIL
 0149  9 LIGHT.
 0150   TMFAIL   CS     BIT4
 0151            MASK   OUT1
 0152            AD     BIT4
 0153            TS     OUT1
 0154            TC     Q
P0155  2         COMMON LISTS A AND B.
 0156   COMLSTA  ADRES  CDUZ            27
 0157            ADRES  CDUY            26
 0158            ADRES  CDUX            25
 0159            ADRES  FLAGWRD2        24
 0160            ADRES  FLAGWRD1        23
 0161            ADRES  STATE           22
 0162            ADRES  OUT1            21
 0163            ADRES  IN3             20
 0164            ADRES  IN2             19
 0165            ADRES  IN0             18
 0166            ADRES  TIME1           17
 0167  2         ADRES  TIME2           16
 0168   COMLSTB  ADRES  DSPTAB +13D     15/65
 0169            ADRES  DSPTAB +12D     14/64
 0170            ADRES  DSPTAB +11D     13/63
 0171            ADRES  DSPTAB +10D     12/62
 0172            ADRES  DSPTAB +9D      11/61
 0173            ADRES  DSPTAB +8D      10/60
 0174            ADRES  DSPTAB +7       9/59
 0175            ADRES  DSPTAB +6       8/58
 0176            ADRES  DSPTAB +5       7/57
 0177            ADRES  DSPTAB +4       6/56
 0178            ADRES  DSPTAB +3       5/55
 0179            ADRES  DSPTAB +2       4/54
 0180            ADRES  DSPTAB +1       3/53
 0181            ADRES  DSPTAB          2/52
P0183            PARTICULAR DATA LISTS FOR FLIGHT 501. LIST 1 PROVIDES DATA FOR
 0184  9THE ENTIRE FLIGHT EXCEPT DURING
R0185  2STATE VECTOR UPDATES, FOR WHICH LIST 2 IS USED.
 0186  2         SETLOC 20000
 0187            ADRES  501LSTB2
 0188   501LSTA2 ADRES  COMPNUMB
 0189            ADRES  UPOLDMD
 0190            ADRES  DNSPARE
 0191            ADRES  DNSPARE
 0192            ADRES  DNSPARE
 0193   501LSTB2 ADRES  STBUFF +13D
 0194            ADRES  STBUFF +12D
 0195            ADRES  STBUFF +11D
 0196            ADRES  STBUFF +10D
 0197            ADRES  STBUFF +9D
 0198            ADRES  STBUFF +8D
 0199            ADRES  STBUFF +7
 0200            ADRES  STBUFF +6
 0201            ADRES  STBUFF +5
 0202            ADRES  STBUFF +4
 0203            ADRES  STBUFF +3
 0204            ADRES  STBUFF +2
 0205            ADRES  STBUFF +1
 0206            ADRES  STBUFF
 0207            ADRES  STCNTR
 0208            ADRES  DNSPARE
 0209   501LSTB1 ADRES  TAVEGON +1      COMMON TO LISTS 1 AND 2
 0210            ADRES  TAVEGON
 0211            ADRES  VAVEGON +5
 0212            ADRES  VAVEGON +4
 0213            ADRES  VAVEGON +3
 0214            ADRES  VAVEGON +2
 0215            ADRES  VAVEGON +1
 0216            ADRES  VAVEGON
 0217            ADRES  RAVEGON +5
 0218            ADRES  RAVEGON +4
 0219            ADRES  RAVEGON +3
 0220            ADRES  RAVEGON +2
 0221            ADRES  RAVEGON +1
 0222            ADRES  RAVEGON
 0223            ADRES  TCUTOFF +1      EVENT TIME
 0224            ADRES  TCUTOFF
 0225            ADRES  TIME1GR
 0226  2         ADRES  TIME2GR
 0227            ADRES  PIPTIME +1
 0228            ADRES  PIPTIME
 0229            ADRES  VN +5
 0230            ADRES  VN +4
 0231            ADRES  VN +3
 0232            ADRES  VN +2
 0233            ADRES  VN +1
 0234            ADRES  VN
 0235            ADRES  RN +5
 0236            ADRES  RN +4
 0237            ADRES  RN +3
 0238            ADRES  RN +2
 0239            ADRES  RN +1
 0240  2         ADRES  RN
 0241            ADRES  501LSTB1
 0242   501LSTA1 ADRES  TFF +1
 0243            ADRES  TFF
 0244            ADRES  VRECT +5
 0245            ADRES  VRECT +4
 0246            ADRES  VRECT +3
 0247            ADRES  VRECT +2
 0248            ADRES  VRECT +1
 0249            ADRES  VRECT
 0250            ADRES  RRECT +5
 0251            ADRES  RRECT +4
 0252            ADRES  RRECT +3
 0253            ADRES  RRECT +2
 0254            ADRES  RRECT +1
 0255            ADRES  RRECT
 0256            ADRES  THETAD +2
 0257            ADRES  THETAD +1
 0258            ADRES  THETAD
 0259            ADRES  DELVX +4
 0260            ADRES  DELVX +2
 0261            ADRES  DELVX
 0262  2         ADRES  REDOCNTR
 0263   DNSPARE  OCT    52525           AT FOD'S REQUEST.
L 001  2T4RUPT OUTPUT CONTROL PROGRAMS
 0001            BANK   1
 0002   T4RUPT   CAF    ZERO            ALONSO THINKS THIS SHOULD BE TURNED OFF
 0003            TS     OUT0            EVERY 60 MS AS A MATTER OF COURSE.
 0004            CCS    DSRUPTSW        SEE IF THIS IS A SPECIAL RUPT TO
 0005            TC     REGRUPT +1      ZERO OUT0 20MS AFTER IT WAS DRIVEN BY
 0006  2         TC     REGRUPT         DSPOUT. IF SO, DSRUPTSW IS NNZ.
 0007            AD     ONE             RESTORE DSRUPTSW TO ITS POSITIVE VALUE.
 0008  2         TS     DSRUPTSW
 0009            CAF    40MSRUPT        SET TIME4 TO INTERRUPT 40 MS FROM NOW.
 0010            TS     TIME4           RE-ESTABLISHING THE REGULAR 60 MS
 0011  2         TC     NBRESUME        PATTERN. THEN DO NO-BANK-SWITCH RESUME.
 0012   REGRUPT  CAF    SEVEN           REGULAR 60 MS RUPT - COUNT DOWN ON
 0013  2 +1      TS     DSRUPTSW        DSRUPTSW.
 0014            CAF    LT4RUPTA        CALL IN APPROPRIATE BANK.
 0015            XCH    BANKREG         SAVE BANKREG FOR RESUME.
 0016            TS     BANKRUPT
 0017  2         TC     T4RUPTA
 0018  2LT4RUPTA CADR   T4RUPTA
 0019  240MSRUPT OCT    37774           INTERRUPT IN 40 MS.
R0020   RELTAB IS A PACKED TABLE. RELAYWORD CODE IN UPPER 4 BITS, RELAY CODE
R0021  2IN LOWER 5 BITS.
 0022   RELTAB   OCT    04025
 0023            OCT    10003
 0024            OCT    14031
 0025            OCT    20033
 0026            OCT    24017
 0027            OCT    30036
 0028            OCT    34034
 0029            OCT    40023
 0030            OCT    44035
 0031            OCT    50037
 0032            OCT    54000
 0033   RELTAB11 OCT    60000
 0034            OCT    64000
 0035   70K      OCT    70000           ALSO USEFUL AS A BANK-SWITCHING MASK.
P0036  2         ROUTINE TO ZERO (OR PSEUDO-ZERO) THE OPTICS COUNTERS.
 0037   ZEROOCTR CAF    ZERO
 0038            TS     OPTX
R0039   RIGHT HERE WE USED TO TEST BIT 13 OF WASOPSET. NOW ASSUME
R0040   UNCONDITIONALLY THAT SXT POWER IS ON (BIT 13 = 1).
 0042            CS     20DEGS          SET OPTY APPROX -20 DEGS (SXT ON)
 0043            TS     OPTY
 0044  2         TC     Q
 0045   20DEGS   DEC    7199
P0047  2         SWITCHED-BANK PORTION OF T4RUPT.
 0048            BANK   10
 0049   T4RUPTA  XCH    OVCTR           SAVE OVCTR.
 0050  2         TS     OVRUPT
 0051            CAF    60MSRUPT        T4 NORMALLY INTERRUPTS EVERY 60 MS.
 0052  2         TS     TIME4
 00521           XCH    IN0             RESET IN0 TO PRESENT VALUE OF DESCRETES.
 00522           CAF    DSKYMASK        RESET DOUBLE-ENTRY INTERLOCK IF KEYCODE
 00523           MASK   IN0             HAS DISAPPEARED.
 00524           CCS    A
 00525           TC     DSKYON
 00526           TC     +2              RESET.
 00527 2         TC     DSKYON
 00528           CS     BIT5
 00529           MASK   STATE
 0053  2         TS     STATE
 00531  DSKYON   CCS    CDUIND          DO AN IMU-CDU IF DESIRED.
 0054            TC     DOIMUCDU +1     WITH NEW CDUIND IN A.
 0055  2         TC     DOIMUCDU        SET COUNT TO 2.
 0056            TC     DSRUPTBR        NO CDU. NNZ MEANS CDUS ARE RESERVED.
 0057  4         TC     DSRUPTBR        -0 MEANS THEY ARE AVAILABLE.
 00571  DSKYMASK OCT    40037           INCLUDES KEYCODE AND MARK BIT.
P0058  2         T4RUPT IMU CDU DRIVE - SERVICED EVERY 60 MS.
 0059   DOIMUCDU CAF    TWO             SET CDUIND BACK TO 2.
 0060  2 +1      TS     CDUIND
 0061            XCH    LP              SAVE LP FOR IMU CDU DRIVE ONLY.
 0062  2         TS     LPRUPT
 0063            INDEX  CDUIND          0 FOR X, 1 FOR Y, AND 2 FOR Z.
 0064            CS     THETAD          PICK UP DESIRED ANGLE.
 0065  2         TS     ITEMP2
 0066            INDEX  CDUIND
 0067            CS     CDUX            READ AND SAVE CDU COUNTER.
 0068  2         TC     2SCOMDIF        DIFFERENCE WITH -0 UNEQUAL TO +0.
 0069            EXTEND                 RETURNS WITH DIFFERENCE IN A.
 0070            MP     KG
 0071            TS     ITEMP1          COMMAND TO TEMP STORAGE
 0072            CCS    A               CHECK SIGNUM OF COMMAND
 0073            TC     POSCOM2
 0074            TC     CDURSM
 0075            TC     NEGCOM2
 0076  8         TC     CDURSM
 0077   NEGCOM2  TS     ITEMP1          SAVE CCS OF COMMAND.
 0078            CS     CDUIND          USE NEGATIVE TO SELECT OUT2 PATTERN.
 0079  2         TC     CDUOUT
 0080   POSCOM2  TS     ITEMP1          SAME AS ABOVE EXCEPT 1+CDUIND SELECTS.
 0081            CAF    ONE
 0082  2         AD     CDUIND
 0083   CDUOUT   TS     OVCTR
 0084            CAF    DUMCODE         CODE WHICH INTERRUPTS OUT2 PULSES DURING
 0085            XCH    OUT2             OUT2 MODIFICATION, BUT ALLOWS DETEC-
 0086            MASK   LOW8             TION OF THE VERY RARE EVENT THAT THE
 0087            XCH    OUT2             PULSE THAT RESETS ANOTHER FIELD OF OUT2
 0088            AD     -DUMCODE         WAS REQUESTED DURING THE ORIGINAL
 0089            CCS    A                XCH OUT2.
 0090   DUMCODE  OCT    02040           INCOMPLETE OUT2 SETTINGS (X AND OPTX).
 0091   -DUMCODE OCT    -2040
 0092  2         TC     JACKPOT         THE PROBABILITY OF THIS IS ABOUT ZERO.
 0093            CS     ITEMP1          FORM 1.0 - ABS(COMMAND).
 0094            AD     POSMAX
 0095  2         TS     OUTCR1
 0096            CAF    DUMCODE
 0097            XCH    OUT2            NOW ENABLE OUTCR1 BY SETTING OUT2.
 0098            INDEX  OVCTR
 0099            AD     CDUCODES +2
 0100            XCH    OUT2
 0101            AD     -DUMCODE
 0102  2         CCS    A
 0103   KG       DEC    .18             CDU DRIVING GAIN
 0104            TC     CCSHOLE
 0105  2         TC     JACKPOT
 0106   CDURSM   CAF    ONE             RESTORE LP.
 0107            EXTEND
 0108            MP     LPRUPT
P0109  2         BRANCH ACCORDING TO  DSRUPTSW  AND PERFORM THE APPROPRIATE DSRU
 0110  9PT FUNCTIONS.
 0111   DSRUPTBR INDEX  DSRUPTSW        JUMP ON DSRUPTSW.
 0112            TC     +1
 0113            TC     TMCHECK         =0
 0114            TC     LOSCAN          LOOK FOR LIFT OFF EVERY 480 MS.
 0115            TC     TMCHECK
 0116            TC     NWALM           INITIATE NIGHT WATCHMAN JOB.
 0117            TC     TMCHECK         =4
 0118            TC     OPTTEST         =5    SERVICE OPTICS CDUS.
 0119            TC     TMCHECK         =6
P0120  2         SYSTEM FAILURE INPUT BITS MONITOR - ENTERED EVERY 480 MS BY T4R
 0121  9UPT.
 0122   ERRORMON CCS    OLDERR          IGNORE BITS IF C(OLDERR) = 40000
 0123            TC     ERRMON          ORDINARILY POSITIVE.
 0124            TC     ERRMON
 0125  2         TC     ENDT4ERR
 0126   ERRMON   XCH    IN2             REFRESH LAST-SAMPLED-ERRORS REGISTER.
 0127            XCH    IN2
 0128            MASK   ERRMASK
 0129            TS     ITEMP2
 0130            CAF    ERRMASK
 0131            MASK   OLDERR
 0132            COM
 0133            AD     ITEMP2
 0134            CCS    A
 0135            TC     ERRCHANG        CHANGED.
 0136   ERRMASK  OCT    07000           IMU, CDU, AND PIPA FAIL.
 0137            TC     ERRCHANG
 0138  2         TC     ENDT4ERR        EXIT - NO CHANGE HAS TAKEN PLACE.
 0139   ERRCHANG CS     ERRMASK         UPDATE IMU FAIL BITS IN OLDERR.
 0140            MASK   OLDERR
 0141            AD     ITEMP2
 0142  2         TS     OLDERR
 0143            CAF    LITESOUT
 0144            MASK   DSPTAB +11D
 0145            AD     BIT15           TO INDICATE CHANGE.
 0146  2         TS     DSPTAB +11D
 0147            CAF    TWO             TURN ON LIGHTS ACCORDING TO C(OLDERR).
 0148   ERRSCAN  TS     ITEMP2
 0149            INDEX  A
 0150            CAF    BIT12           SELECT BIT IN OLDERR.
 0151            MASK   OLDERR
 0152            CCS    A
 0153  2         TC     BITON           BIT IS PRESENT.
 0154   ERRSCAN3 CCS    ITEMP2          LOOP THREE TIMES THROUGH.
 0155  2         TC     ERRSCAN
 0156  2         TC     ENDT4ERR        FINISHED.
 0157   LITESOUT OCT    37437
P0158            PROCESS ERROR SIGNALS PRESENT. NOTE THAT C(WASKSET) INDICATES T
 0159  9HE STATE OF THE SYSTEM SINCE NO RELAYS
R0160  2HAVE BEEN SWITCHED IN THE LAST 120 MS, AND KSAMP WAS EXECUTED 60 MS AGO.
 0161   BITON    INDEX  ITEMP2          2, 1, OR 0.
 0162            TC     +1
 0163            TC     IMUFAIL
 0164            TC     PIPAFAIL
 0165  2         TC     CDUFAIL
 0166   IMUFAIL  CCS    WASKSET         FAILURE NOT LEGITMATE IF IN COARSE ALIGN
 0167            TC     IMUFAIL2        PURSUE THIS ONE.
 0168            TC     NOFAIL          NO MODE-DEPENDENT FAILURE MONITORING
 0169            TC     NOFAIL          IF MODING FAILURE OR PROCEDURAL FAILURE.
 0170  2         TC     NOFAIL
 0171   IMUFAIL3 CAF    BIT8            TURN ON IMU FAIL LIGHT.
 0172   FAILITON AD     DSPTAB +11D     (WHICH HAD BEEN ZEROED IN ALL LIGHT
 0173            TS     DSPTAB +11D     POSITIONS).
 0174  2         TC     ERRSCAN3        PROCESS NEXT INPUT BIT.
 0175   IMUFAIL2 AD     ONE             SEE IF COASE ALIGN ACHIEVED.
 0176            MASK   BIT2
 0177            CCS    A
 0178            TC     NOFAIL
 0179            CAF    BIT4            SEE IF WITHIN 5 SECONDS OF COARSE ALIGN.
 0180            MASK   OLDERR
 0181            CCS    A
 0182            TC     NOFAIL          IF SO.
 0183  2         TC     IMUFAIL3        FAILED.
 0184   CDUFAIL  CCS    WASKSET
 0185            TC     CDUFAIL2        FAILURE ONLY IF IN FINE ALIGN.
 0186            TC     NOFAIL          (SEE NOTE FOR IMUFAIL).
 0187            TC     NOFAIL
 0188  2         TC     NOFAIL
 0189   CDUFAIL3 CAF    BIT6            CDU FAIL LIGHT ON.
 0190  2         TC     FAILITON
 0191   CDUFAIL2 CS     BIT6            TURN ON FAIL LIGHT ONLY IF IN FINE ALIGN
 0192            MASK   WASKSET
 0193            AD     -BIT4
 0194            CCS    A
 0195            TC     NOFAIL
 0196   -BIT4    OCT    -10
 0197            TC     NOFAIL
 0198  2         TC     CDUFAIL3        TURN ON THE LIGHT.
 0199   PIPAFAIL CAF    BIT7            TURN ON FAIL LIGHT UNCONDITIONALLY.
 0200  2         TC     FAILITON
 0201   NOFAIL   INDEX  ITEMP2          COMES HERE IF PRESENT MODE INHIBITS FAIL
 0202            CS     BIT12           BITS. THIS MAINTAINS PRESENT ACTUAL
 0203            MASK   OLDERR          ERRORS IN OLDERR FOR THE NIGHT WATCH-
 0204            TS     OLDERR          MANS BENEFIT, IN PARTICULAR.
 0205            TC     ERRSCAN3
P0206  2         NIGHT-WATCHMAN ALARM, SERVICED EVERY 480 MS BY T4RUPT.
 0207   NWALM    CAF    PRIO36
 0208            TC     NOVAC
 0209  2         CADR   NWJOB
 02091           CS     BIT10           RESET BLOCK-ENDPULSE EVERY HALF SECOND.
 02092           MASK   OUT1
 02093 2         TS     OUT1
 0210  4         TC     S4BSCAN
R0211  2         NIGHT-WATCHMAN JOB - DIDDLES TMALM FOR 24 MICRO-SEC AFTER VERIF
 0212  9YING THAT NEWJOB IS BEING TESTED.
 0213   NWJOB    CAF    NWMASK          DONT ISSUE SIGNAL IF IMU, PIPA, OR
 0214            INHINT
 0215            MASK   OLDERR          RESTART FAIL IS ON.
 0216            CCS    A
 0217            TC     NONNWJOB
 0218   DONW     CS     BIT4
 0219            MASK   OUT1
 0220            TS     Q
 0221            CS     OUT1
 0222            MASK   BIT4
 0223            AD     Q
 0224            XCH    OUT1
 0225            TS     OUT1
 0226            CS     BIT3            RESET INHIBIT INDICATOR.
 0227            MASK   OLDERR
 0228            TS     OLDERR
 0229  2         TC     ENDOFJOB
 0230   NONNWJOB AD     BANKMASK        SEE IF PIPA FAIL ONLY PROBLEM.
 0231            CCS    A
 0232            TC     NOINH
 0233            TC     NOINH
 0234  2         TC     NOINH
 0235            CS     SEVEN           CHECK FOR MODES 22 - 27.
 0236            MASK   MODREG
 0237            AD     -MODE20
 0238            CCS    A
 0239            TC     NOINH
 0240   -MODE20  OCT    -20
 0241  2         TC     NOINH
 0242            CS     MODE21          NO MODE 20.
 0243            AD     MODREG
 0244            CCS    A
 0245            TC     DONW
 0246   MODE21   OCT    21
 0247  2         TC     DONW
 0248   NOINH    CS     BIT3            SEE IF WE HAVE HAD TWO CONSECUTIVE
 0249            MASK   OLDERR          CONSECUTIVE INHIBITS.
 0250            AD     BIT3
 0251            XCH    OLDERR
 0252            MASK   BIT3
 0253            CCS    A
 0254            TC     +2
 0255            TC     ENDOFJOB
 0256            RELINT
 0257            TC     CHECKMM         SET MM 77 IF REQUIRED.
 0258            OCT    77
 0259            TC     +2
 0260            TC     ENDOFJOB
 0261            TC     NEWMODE
 0262            OCT    77              G AND N FLUSHED.
 0263            TC     ENDOFJOB
P0264  2         SCAN FOR LIFT-OFF EVERY 480 MS.
 0265   LOSCAN   CS     IN2
 0266            CS     IN2
 0267            MASK   BIT5
 0268            CCS    A
 0269            TC     S4BSCAN
 0270            CAF    BIT2            SEE IF SIGNAL ALREADY RECEIVED.
 0271            MASK   FLAGWRD1
 0272            CCS    A
 0273  2         TC     S4BSCAN
 0274            CAF    PRIO24
 0275            TC     FINDVAC
 0276  2         CADR   LIFTOFF
R0277  2         S4B SEPARATE SCANNER - ENTERED EVERY 120 MS.
 0278   S4BSCAN  XCH    IN2
 0279            XCH    IN2
 0280            MASK   BIT8
 0281            CCS    A
 0282            TC     +2              IF BIT ON.
 0283  2         TC     CDRVE           NORMAL CASE.
 0284            CAF    BIT8            SEE IF FIRST TIME BIT ON.
 0285            MASK   STATE +1
 0286            CCS    A
 0287  2         TC     CDRVE           NO ACTION UNLESS FIRST TIME ON.
 0288            CAF    PRIO25
 0289            TC     FINDVAC
 0290            CADR   S4BSMSEP
 0291  2         TC     CDRVE
 0292   NOOPTCDU EQUALS S4BSCAN
 0293   ENDT4ERR EQUALS S4BSCAN
P0294  2         OPTICS CDU DRIVING PROGRAM, SERVICED EVERY 480 MS BY DSRUPT.
 0295   OPTTEST  CCS    OPTIND          PNZ FOR ACTIVE, NEGATIVE FOR INACTIVE.
 0296            TC     +5              DRIVE CDU.
 0297            TC     +3              DRIVE CDU.
 0298            TC     NOOPTCDU        NNZ MEANS RESERVED.
 0299  2         TC     NOOPTCDU        -0 MEANS AVAILABLE.
 0300    +3      CAF    ONE             GOES 1(-1)0.
 0301  2 +5      TS     OPTIND
 0302            TS     RUPTREG1        SET UP OUT2SUB TO START OUT-COUNTER.
 0303            CAF    ONE             (TO ADDRESS OUTCR2).
 0304  2         TS     RUPTREG2
 0305            CCS    OPTIND          DRIVE OPTICS Y DIFFERENT THAN OTHERS.
 0306  2         TC     BLIVOT3         OVF UNCORRECTION WONT WORK FOR OPTY.
 0307   REGDIFF  INDEX  OPTIND
 0308            CS     DESOPTX         DESIRED ANGLES.
 0309  2         TS     ITEMP2
 0310            INDEX  OPTIND
 0311            CS     OPTX            READ COUNTER.
 0312  2         TC     2SCOMDIF        TAKES DIFFERENCE WITH -0 UNEQUAL TO +0.
 0313  2OPTOUT   TC     OUT2SUB
 0314  2         TC     S4BSCAN
 0315   BLIVOT3  CS     OPTY            IF THE DIFFERENCE OVERFLOWS, THE ERROR
 0316            AD     DESOPTX +1       ERROR SIGNAL IS GREATER THAN 16383, SO
 0317            TS     Q                JUST THROW IN POSMAX WITH THE RIGHT
 0318  2         TC     REGDIFF          SIGN AND CALL IT A DAY. OTHERWISE FOLL-
 0319            INDEX  A                THE USUAL PROCEDURES.
 0320            CS     LIMITS
 0321            TC     OPTOUT
P0322  2         CDRVE  CHANGES A BANK OF C RELAYS IF ANY CHANGE IS INDICATED IN
 0323  9 THE C-RELAY PORTION OF DSPTAB.
 0324   CDRVE    CCS    DSPTAB +13D     SPACECRAFT RELAYS HAVE HIGHEST PRIORITY.
 0325            TC     CDRVE1
 0326  2         TC     CDRVE1
 0327            CAF    LOW11
 0328            MASK   DSPTAB +13D
 0329            TS     DSPTAB +13D
 0330            AD     RELTAB11 +2
 0331  2         TC     DSPLAYC
 0332   CDRVE1   CCS    DSPTAB +11D     IMU AND CAUTION LIGHTS.
 0333            TC     CDRVE2
 0334  2         TC     CDRVE2
 0335            CAF    LOW11
 0336            MASK   DSPTAB +11D
 0337            TS     DSPTAB +11D
 0338            AD     RELTAB11
 0339  2         TC     DSPLAYC
 0340   CDRVE2   CCS    DSPTAB +12D     OPTICS.
 0341            TC     DSPOUT
 0342  2         TC     DSPOUT
 0343            CAF    LOW11
 0344            MASK   DSPTAB +12D
 0345            TS     DSPTAB +12D
 0346            AD     RELTAB11 +1
 0347  2         TC     DSPLAYC
 0348   DSPOUT   CCS    NOUT            ENTERED IN INTERRUPTED STATE AT END OF
 0349            TC     +2                                      DSRUPT
 0350            TC     LVDSRUPT
 0351            TS     NOUT
 0352            CS     ZERO
 0353            TS     DSRUPTEM        SET TO -0 FOR 1ST PASS THRU DSPTAB
 0354            XCH    DSPCNT
 0355            AD     NEG0            TO PREVENT +0
 0356            TS     DSPCNT
 0357   DSPSCAN  INDEX  DSPCNT
 0358            CCS    DSPTAB
 0359            CCS    DSPCNT          IF DSPTAB ENTRY +, SKIP
 0360            TC     DSPSCAN -2      IF DSPCNT +, AGAIN
 0361            TC     DSPLAY          IF DSPTAB ENTRY -, DISPLAY
 0362   TABLNTH  OCT    12              DEC 10   LENGTH OF DSPTAB
 0363            CCS    DSRUPTEM        IF DSRUPTEM=+0,2ND PASS THRU DSPTAB
 0364            TC     CCSHOLE         (DSPCNT=0). +0 INTO NOUT, RESUME.
 0365            TS     NOUT
 0366            TC     LVDSRUPT
 0367            TS     DSRUPTEM        IF DSRUPTEM=-0,1ST PASS THRU DSPTAB
 0368            CAF    TABLNTH         (DSPCNT=0). +0 INTO DSRUPTEM. PASS AGAIN
 0369  2         TC     DSPSCAN -1
 0370   DSPLAY   AD     ONE
 0371            INDEX  DSPCNT
 0372            TS     DSPTAB          REPLACE POSITIVELY
 0373            MASK   LOW11           REMOVE BITS 12 TO 15
 0374            TS     DSRUPTEM
 0375            CAF    HI5
 0376            INDEX  DSPCNT
 0377            MASK   RELTAB          PICK UP BITS 12 TO 15 OF RELTAB ENTRY
 0378            AD     DSRUPTEM
 0379   DSPLAYC  TS     OUT0
 0380            CAF    20MSRUPT        SET T4 TO INTERRUPT IN 20 MS SO OUT0 MAY
 0381            TS     TIME4           BE TURNED OFF AS SOON AS POSSIBLE. WHEN
 0382            CS     DSRUPTSW        THIS RUPT OCCURS, T4 IS RESET TO FIRE
 0383  2         TS     DSRUPTSW        IN 40MS, RE-ESTABLISHING THE REGULAR 60.
 0384  2         TC     LVDSRUPT
 0385   LVDSRUPT EQUALS OVRESUME
P0386            OUT2SUB IS USED BY THE GYRO DRIVE AND THE OPTICS CDU DRIVE TO S
 0387  9ET THE PROPER SECTION OF OUT2 AND THE
R0388  2PROPER OUT-COUNTER TO DELIVER THE COMMAND ARRIVING IN A.
 0389   OUT2SUB  TS     ITEMP1          SIGNED COMMAND.
 0390            XCH    Q
 0391            TS     ITEMP2
 0392            CCS    ITEMP1
 0393            TC     POSCOM
 0394            TC     ITEMP2          RETURN TO CALLER ON EITHER ZERO.
 0395            TC     NEGCOM
 0396  2         TC     ITEMP2
 0397   NEGCOM   TS     ITEMP1          CCS OF COMMAND LEFT IN ITEMP1
 0398            CS     RUPTREG1        0 AND 1 FOR OPTICS - 2, 3, AND 4 FOR GYR
 0399  2         TC     SETOUT2
 0400   POSCOM   TS     ITEMP1          CCS OF COMMAND.
 0401            CAF    ONE
 0402  8         AD     RUPTREG1
 0403   SETOUT2  TS     RUPTREG4
 0404            CAF    DUMCODE         FOR A DESCRIPTION OF THIS OUT2 PROCEDURE
 0405            XCH    OUT2            SEE THE IMUCDU DRIVE PROGRAM EARLIER IN
 0406            INDEX  RUPTREG2        T4RUPT.
 0407            MASK   OUT2MASK
 0408            XCH    OUT2
 0409            AD     -DUMCODE
 0410            CCS    A
 0411            TC     CCSHOLE
 0412            TC     CCSHOLE
 0413  2         TC     JACKPOT
 0414            CS     ITEMP1          ABS(COMMAND) - 1.
 0415            AD     POSMAX          FORMS 1.0 - ABS(COMMAND).
 0416            INDEX  RUPTREG2
 0417  2         TS     OUTCR1
 0418            CAF    DUMCODE         ENABLE THE APPROPRIATE OUTCR BY SETTING
 0419            XCH    OUT2            THE PROPER CODE IN OUT2
 0420            INDEX  RUPTREG4
 0421            AD     OPTCODES +1
 0422            XCH    OUT2
 0423            AD     -DUMCODE
 0424            CCS    A
 0425            TC     CCSHOLE
 0426            TC     CCSHOLE
 0427  2         TC     JACKPOT
 0428  2         TC     ITEMP2
 0429  2NOGYROC  EQUALS
 0430   ENDGYROC EQUALS
P0431  2ALTERNATE 120 MS LEG OF T4RUPT.
 0432   TMCHECK  CAF    SEVEN           ALLOW UP TO SEVEN TM WORDS UNTIL NEXT
 0433            XCH    TELCOUNT        DSRUPT0 EXECUTION. CHECK LAST TM PERIOD
 0434            AD     NEG7            TO SEE IF AT LEAST ONE WORD WENT OUT.
 0435  2         CCS    A               THIS SATISFIES BOTH HIGH- AND LOW-POWER.
 0436   NEG7     DEC    -7
 0437            TC     CCSHOLE
 0438            TC     +2              OK - PROCEED.
 0439  2         TC     TMFAIL          TURN ON TM FAIL LIGHT BEFORE KSAMP.
 0440   MODESAMP XCH    IN3             SAMPLE MODE BITS AND TUCK THEM AWAY
 0441            XCH    IN3             FOR KSAMP AND OPTSAMP.
 0442            TS     KSAMPTEM
 0443            MASK   LOW7
 0444            XCH    KSAMPTEM
 0445            MASK   OPTBITS
 0446            TS     OSAMPTEM
 0447            XCH    IN0             THIS CLEARS THE KEY CODE WITHIN 120MS
A0448  2                                 OF THE TIME THE KEY WAS RELEASED.
 0449            TS     OVCTR           SEE IF INHIBIT UP-SYNC BIT IS ON.
 0450            MASK   BIT7
 0451            CCS    A
 0452  2         TC     TMFAIL          IF SO, TURN ON TELEMETRY FAIL LIGHT.
 0453            CCS    OVCTR           SEE IF MARK BUTTON DOWN.
 0454            TC     OPTSAMP
 0455            TC     OPTSAMP
 0456            TC      +1
 0457            CAF    NOMKACPT        DONT INCLUDE MARK ACCEPT INFORMATION.
 0458            MASK   OSAMPTEM
 0459            TS     OSAMPTEM
P0460  2         OPTICS MODE SAMPLING.
 0461   OPTSAMP  CCS    DESOPSET        IS COMPUTER COMMANDING
 0462            TC     OPTCOMM         YES
 0463  2         TC     NOOPCOM         NO
 0464            CAF    BIT12           MAKE SURE WE ARE STILL ZEROING
 0465            MASK   OSAMPTEM        (THIS PORTION ENTERED FOR 30 SEC. DURING
 0466            AD     WASOPSET           MANUAL OPTICS ZERO).
 0467            MASK   BIT12           SEE IF CDU-ZERO BIT HAS CHANGED.
 0468            CCS    A               ALARM IF SO.
 0469            TC     +2
 0470  2         TC     LVOPTSMP
 0471            TC     ALARM           IF NOT, ALARM ON
 0472            OCT    00101           OPTICS ALARM NO. 1.
 0473  2         TC     LVOPTSMP
 0474   OPTCOMM  CAF    BIT14           SEE IF COMPUTER-ON SWITCH JUST CHANGED.
 0475            MASK   WASOPSET        FORM WAS BIT14 - IS BIT14.
 0476            TS     Q
 0477            CAF    BIT14
 0478            MASK   OSAMPTEM        PRESENT INPUT BITS.
 0479            COM
 0480            AD     Q
 0481            CCS    A
 0482            TC     COMP.OFF        SWITCH JUST TURNED OFF.
 0483   OFFMASK  OCT    34760           USED FOR SETTING IMU C-RELAYS.
 0484  2         TC     COMP.ON         SWITCH JUST TURNED ON.
 0485   OPTCOMM2 CS     DESOPSET        SEE IF DESIRED MODE ACHIEVED.
 0486            AD     OSAMPTEM
 0487            CCS    A
 0488            TC     OPTCTEST        COMMAND NOT EQUAL TO ACTUAL
 0489   OPTBITS  OCT    35000
 0490            TC     OPTCOMM3        NO MATCH - SEE IF COMP ON ONLY MISMATCH.
 0491  2         TC     LVOPTSMP        DONE IF MODES AGREE.
 0492   OPTCTEST CCS    DSPTAB +12D     IS CHANGE COMING.
 0493            TC     OPTCFAIL        NO - C-RELAY FAILURE OR UNWANTED MANUAL
 0494  2         TC     OPTCFAIL        INTERVENTION.
 0495            CAF    ZERO            LEAVE WAITING FLAG IN WASOPSET.
 0496  2         TC     LVOPTSMP +1
 0497   OPTCOMM3 AD     -BIT14+1        NO ERROR IF COMPUTER-ON ONLY ONE DIFF.
 0498            CCS    A
 0499            TC     OPTCTEST
 0500   NOMKACPT OCT    31000
 0501            TC     OPTCTEST
 0502            CAF    BIT14           IN THIS CASE, SET COMP.ON BIT TO 1 IN
 0503            AD     OSAMPTEM        WASOPSET TO PREVENT +0 FOR CORRECT MODES
 0504  2         TC     LVOPTSMP +1
 0505   COMP.OFF CCS    OPTIND          TAKE AGC OUT OF CDU LOOP IF APPROPRIATE.
 0506            TC     +2
 0507            TC     +1              POSITIVE MEANS COMPUTER WAS IN LOOP.
 0508            CAF    ONE             LEAVE CDUS RESERVED (RARE).
 0509            COM                    -0 REVERTS TO -0.
 0510  2         TS     OPTIND
 0511  2         TC     OPTCOMM2        DO MODE CHECK.
 0512   COMP.ON  CCS    OPTIND          PUT AGC BACK INTO CDU LOOP IF DESIRED.
 0513            TC     ONALARM         (THIS SHOULD NEVER HAPPEN).
 0514            TC     ONALARM
 0515  2         TC     ONOK            CDUS HAD BEEN RESERVED.
 0516   ONALARM  TC     OFAILTST        SEE IF FAIL FLAG ALREADY SET.
 0517            TC     ALARM           ALARM AND SET FAILURE FLAG.
 0518            OCT    00104
 0519  2         TC     OFAILSET
 0520   OPTCFAIL TC     OFAILTST        SEE IF ALARM ALREADY SOUNDED.
 0521            TC     ALARM           ALARM AND SET FAIL FLAG IF NOT.
 0522  2         OCT    00102
 0523   OFAILSET CS     ZERO
 0524  2         TC     LVOPTSMP +1     SET FAIL FLAG AND EXIT.
 0525   OFAILTST CCS    WASOPSET        RETURNS TO CALLER IF NO FAILURE ALARM
 0526            TC     Q               GIVEN. EXITS WITHOUT CHANGING WASOPSET
 0527            TC     Q               IF SO.
 0528            TC     NOOPRSET
 0529  2         TC     NOOPRSET
 0533   ONOK     TS     OPTIND          SET OPTIND TO +0 TO ACTIVE CDU DRIVE.
 0534  2         TC     OPTCOMM2        DO MODE AGREEMENT CHECK.
 0543   NOOPCOM  CS     WASOPSET        ENTERS HERE IF COMPUTER NOT COMMANDING.
 0544            AD     OSAMPTEM        SEE IF ANY CHANGES SINCE LAST LOOK.
 0545            CCS    A
 0546            TC     NOOPCOM1        CHANGED.
 0547   60MSRUPT OCT    37772           UNUSED CCS BRANCH.
 0548            TC     NOOPCOM1        CHANGED.
 0549  2         TC     LVOPTSMP        NO CHANGE - NORMAL EXIT IN MANUAL.
 0550   NOOPCOM1 CS     WASOPSET        SEE IF MANUAL CDU-ZERO JUST REQUESTED.
 0551            MASK   BIT12
 0552            MASK   OSAMPTEM
 0553            CCS    A
 0554            TC     MANOPTZ         CALL MANUAL OPTICS ZERO SUBROUTINE.
A0555  2                                (THIS RECONCILES OPTICS-ZERO C-RELAY).
R0556   WE USED TO TEST HERE TO SEE IF THE SXT-ON SWITCH HAS CHANGED.
R0557   SINCE IN BLOCK 50 - 100 IT IS ALWAYS ON, WE DON:T NOW.
 0562   RECONTRK CAF    BIT10           RECONCILE TRKR-ON C-RELAY.
 0563            MASK   OSAMPTEM
 0564            CCS    A
 0565            CAF    BIT2            TURN ON TRKR-ON C-RELAY.
 0566            AD     BIT15
 0567            XCH    DSPTAB +12D
 0568            MASK   OCT37775        CHANGE BITS 2 AND 15.
 0569            AD     DSPTAB +12D
 0570  2         TS     DSPTAB +12D
 0571            XCH    OSAMPTEM        SET WASOPSET AND CALL SETZLIT TO
 0572            TS     WASOPSET        SET ZERO-ENCODER LIGHT.
 0573            TC     SETZLIT
 0574  2         TC     NOOPRSET
 0575   LVOPTSMP XCH    OSAMPTEM
 0576  2         TS     WASOPSET
 0577   NOOPRSET EQUALS                 DONT RESET WASOPSET.
P0578   KSAMP           ENTERED EVERY 120 MS DURING T4RUPT. SAMPLES STATUS OF
R0579   -----           IMU MODE SWITCHES.
R0580                   SETS C(WASKSET)=C(DESKSET) FOR SUCCESSFUL COMP. COMM.
R0581                                  =+0 FOR WAITING(START-UP,CONTACT BOUNCE)
R0582                                  =-X FOR ASTRONAUT COMM. IGNORE
R0583  4                               =-0 FOR SYSTEM FAILURE
 0584   KSAMP    CCS    WASKSET         TEST FOR IGNORE
 0585            TC     +3
 0586            TC     +2
 0587  2         TC     ENDKSAMP
 0588            CCS    DESKSET         C(DESKSET)=DESIRED K RELAY SETTING
 0589            TC     KSAMP1                    =+0 FOR COMPUTER NOT COMM.
 0590  2         TC     KSAMP4                    -DESIRED K SETTING FOR MAN 0.
 0591            CAF    BIT1            ENTERS HERE TO BE SURE MANUAL CDU ZERO
 0592            MASK   KSAMPTEM        LASTS AT LEAST 30 SEC.
 0593            AD     WASKSET         ALARM IF CDU-ZERO SWITCH CHANGED STATE.
 0594            MASK   BIT1
 0595            CCS    A
 0596            TC     +2
 0597  2         TC     LVKSAMP
 0598            TC     ALARM
 0599            OCT    00201           CDU NOT ZEROED PROPERLY.
 0600  2         TC     LVKSAMP
 0601   KSAMP4   XCH    KSAMPTEM        NO COMPUTER COMMAND.
 0602            XCH    WASKSET         CURRENT STATUS TO WASKSET
 0603            TS     KSAMPTEM        (FOR EVENTUAL USE BY MANUAL ZERO TEST).
 0604            CS     A
 0605            AD     WASKSET
 0606            CCS    A
 0607            TC     KSAMP2B         SEE IF TRNSW JUST ON AND IS ONLY CHANGE.
 0608   20MSRUPT OCT    37776           UNUSED CCS BRANCH - USED TO CAUSE 0 OUT0
 0609            TC     KSAMP2
 0610  2         TC     ENDKSAMP        EXIT ON NO CHANGE IN MODE.
 0611   KSAMP2   CAF    BIT6            CHANGE IN MODE
 0612            MASK   WASKSET
 0613            CCS    A               IS TRNSW ON MANUAL
 0614  2         TC     TRNSWON         SEE IF START-UP OR PILOTS BUTTON ON.
 0615            CS     WASKSET         TEST FOR START UP SEQUENCE
 0616            MASK   FINE+CRS        START-UP=FINE AND COARSE IN MANUAL.
 0617            CCS    A
 0618  2         TC     MANZTEST
 0619   SETCOARS CAF    OFFMASK
 0620            MASK   DSPTAB +11D
 0621            AD     OCT40002
 0622  2         TC     SETC +3
 0623   MANZTEST CS     KSAMPTEM        SEE IF MANUAL ZERO SWITCH JUST ON.
 0624            MASK   BIT1
 0625            MASK   WASKSET
 0626            CCS    A
 0627  2         TC     MANCDU          MANUAL IMU CDU ZERO JUST REQUESTED.
 0628            CS     KSAMPTEM        IF PREVIOUS MODE WAS COARSE ALIGN,
 0629            MASK   BIT2            DISABLE IMU FAIL FOR THE NEXT 5 SECS.
 0630            CCS    A
 0631  2         TC     PRERECON
 0632            CS     BIT4
 0633            MASK   OLDERR
 0634            AD     BIT4
 0635  2         TS     OLDERR
 0636            CAF    BIT10
 0637            TC     WAITLIST
 0638  2         CADR   IFAILOK
 0639   PRERECON CAF    OFFMASK         MANUAL MODE CHANGE
 0640            MASK   DSPTAB +11D     SO THE C-RELAYS MUST BE UPDATED.
 0641            AD     BIT15           ALL ARE TURNED OFF AND THE RIGHT ONES
 0642  2         TS     DSPTAB +11D     ARE TURNED ON BY SCANNING IN3.
 0643            CS     WASKSET         UPDATE C-RELAYS SO THEY AGREE WITH THE
 0644            TS     OVCTR           CURRENT MODE. THE SCAN IS FROM LEFT TO
 0645  2         CAF    SIX             RIGHT SO THE PILOTS BUTTON WORKS OK.
 0646   RECONCIL TS     KSAMPTEM
 0647            XCH    OVCTR           NEXT BIT INTO POSITION.
 0648   -BIT14+1 DOUBLE
 0649            TS     OVCTR
 0650            MASK   BIT8
 0651            CCS    A
 0652  2         TC     RECONLUP        LOOP TO EXAMINE NEXT BIT.
 0653   SETC     INDEX  KSAMPTEM
 0654            CAF    MODECHNG        NEW IMU C-RELAY SETTINGS.
 0655            AD     DSPTAB +11D
 0656    +3      TS     DSPTAB +11D
 0657            TC     SETZLIT         UPDATE THE ZERO ENCODER LAMP.
 0658  2         TC     ENDKSAMP
 0659   KSAMP2B  AD     LOW5BAR         NO ERROR IF TRNSW JUST ON IS ONLY CHANGE
 0660            CCS    A
 0661            TC     KSAMP2
 0662   LOW5BAR  OCT    -37
 0663            TC     KSAMP2
 0664  2         TC     ENDKSAMP        ORIGINAL DIFFERENCE WAS JUST BIT 6.
 0665   TRNSWON  CAF    OCT14           THE PILOTS BUTTON HAS CHANGED IF THERE
 0666            MASK   WASKSET         HAS BEEN A CHANGE IN THE FINE ALIGN OR
 0667            AD     KSAMPTEM        LOCK CDU BITS WITH THE SYSTEM IN ATTI-
 0668            MASK   OCT14           TUDE CONTROL AS WELL.
 0669            CCS    A
 0670            TC     +2
 0671  2         TC     STARTCHK        NO - SEE IF SYSTEM CYCLING UP.
 0672            CAF    BIT5            OK SO FAR ON PILOTS BUTTON. SEE IF
 0673            MASK   WASKSET         SYSTEM WAS AND IS IN ATTITUDE CONTROL.
 0674            MASK   KSAMPTEM
 0675            CCS    A
 0676  2         TC     ENDKSAMP        YES - LEAVE THE C-RELAYS IN ATTITUDE C.
 0677   STARTCHK CS     KSAMPTEM        SEE IF COARSE-ALIGN JUST ON. IF SO,
 0678            MASK   BIT2            IF SO, THE SYSTEM IS CYCLING UP SO SET
 0679            MASK   WASKSET         THE C-RELAYS FOR COARSE ALIGN.
 0680            CCS    A
 0681  2         TC     SETCOARS        USUAL RECONCILING WOULDNT WORK HERE.
 0682   MODALARM TC     ALARM           UN-CALLED-FOR MODE CHANGE WITH COMPUTER
 0683            OCT    00204           DOING MODE SWITCHING.
 0684  2         TC     ENDKSAMP
 0685   RECONLUP CCS    KSAMPTEM
 0686  2         TC     RECONCIL
 0687            TC     ALARM           NO IMU MODE INDICATION BITS GIVEN.
 0688            OCT    00203
 0689  4         TC     ENDKSAMP
 0690   KSAMP1   CS     DESKSET         IS PRESENT MODE = COMMANDED
 0691            AD     KSAMPTEM
 0692            CCS    A
 0693            TC     KSAMP1A
 0694   OCT37775 OCT    37775           UNUSED CCS BRANCH - USED TO SET TRKR-ON.
 0695  2         TC     KSAMP1A
 0696            CCS    OLDERR          TURN OFF THE PILOTS BUTTON BIT IF ON.
 0697  2         TC     PIBUTOFF
 0698   LVKSAMP  XCH    KSAMPTEM        YES
 0699            TS     WASKSET
 0700  2         TC     ENDKSAMP
 0701   KSAMP1A  CAF    BIT1            IS COMPUTER TRYING TO ZERO CDU AND
 0702            MASK   DESKSET         GETTING COARSE ALIGN.
 0703            DOUBLE
 0704            MASK   KSAMPTEM
 0705            CCS    A
 0706  2         TC     IMUSTART        YES.
 0707            CAF    OCT60           SEE IF PILOTS BUTTON IS ON.
 0708            MASK   DESKSET         CHECK THAT TRNSW ON AND ATTITUDE CONTROL
 0709            MASK   KSAMPTEM        ARE DESIRED AND ACTUAL AND THAT EITHER
 0710            COM                    FINE ALIGN (FOLLOW) OR LOCK CDU (HOLD)
 0711            MASK   OCT60           ARE PRESENT IN ADDITION. IF SO, SET BIT
 0712            CCS    A               1 OF OLDERR TO INDICATE THIS CONDITION.
 0713            TC     KSAMP2A         MISSION PROGRAMS WILL DETECT THIS CON-
 0714            CAF    OCT14           DITION WHEN THEY TEST OLDERR AS THEY DO
 0715            MASK   KSAMPTEM        PERIODICALLY.
 0716            CCS    A
 0717            TC     +2
 0718  2         TC     KSAMP2A
 0719            CS     ONE
 0720            MASK   OLDERR
 0721            AD     ONE
 0722            TS     OLDERR
 0723  2         TC     LVKSAMP
 0724   KSAMP2A  CCS    WASKSET         CHECK ON PREVIOUS ACTIVITIES
 0725            TC     KSAMP3A          NORMAL OPERATION
 0726            TC     KSAMP3A         WAITING
 0727   OCT60    OCT    60
 0728  2         TC     ENDKSAMP        SYSTEM FAILURE
 0729   KSAMP3A  CCS    DSPTAB +11D     SEE IF BANK IS TO BE CHANGED.
 0730            TC     SYSFAIL         NO - SYSTEM FAILURE.
 0731  2         TC     SYSFAIL
 0732   IMUSTART CAF    WAITFLAG        SET WAITING FLAG AND EXIT.
 0733  2         TC     LVKSAMP +1
 0734   SYSFAIL  CS     ZERO            IMU SYSTEM FAILURE.
 0735            TS     WASKSET
 0736            TC     ALARM           CALL ALARM SUBROUTINE FOR DISPLAY.
 0737            OCT    00202
 0738  2         TC     ENDKSAMP
 0739   PIBUTOFF CS     ONE
 0740            MASK   OLDERR          BIT 1 OF OLDERR IS 1 IF THE PILOTS
 0741            TS     OLDERR          BUTTON IS ON WHILE THE COMPUTERS
 0742  2         TC     LVKSAMP         COMMANDING.
 0743   OCT14    OCT    14
 0744   FINE+CRS OCT    12
 0745  2WAITFLAG EQUALS ZERO
 0746   ENDKSAMP EQUALS LVDSRUPT
P0747  2         MANUAL CDU-ZERO PROGRAMS FOR IMU AND OPTICS CDUS.
 0748   MANCDU   CS     TWO             INITIATE MANUAL CDU ZERO MONITOR.
 0749            TS     DESKSET         (C-RELAYS WILL BE SET BY RECONCIL).
 0750            CAF    35SCNDS
 0751            TC     WAITLIST
 0752  2         CADR   MANIZD
 0753            CAF    OFFMASK         USUAL RECONCILING WOULDNT WORK HERE
 0754            MASK   DSPTAB +11D     SINCE THE SCAN IS FROM LEFT TO RIGHT.
 0755            AD     MODECHNG
 0756  2         TC     SETC +3
R0757  2         WAITLIST TASK TO COMPLETE MANUAL ZERO. TURNS OFF LIGHT TO INDIC
 0758  9CATE COMPLETION.
 0759   MANIZD   TC     ZEROICTR        ZERO COUNTERS.
 0760            CCS    DESKSET         SET DESKSET TO +0 TO RESUME MANUAL
 0761            TC     +4              MODE MONITORING UNLESS THE SYSTEM WAS
 0762            TC     +3              PLACED UNDER COMPUTER CONTROL BY ANOTHER
 0763            CAF    ZERO            PROGRAM DURING THE 35 SEC. WAIT.
 0764            TS     DESKSET
 0765            TC     SETZLIT         TURN OFF LIGHT IF APPROPRIATE.
 0766            TC     TASKOVER
P0767  2         MANUAL OPTICS ZEROING PROCEDURES.
 0768   MANOPTZ  CAF    60SCNDS         MANUAL OPTICS ZEROING ROUTINE.
 0769            TC     WAITLIST        CALL WAITLIST FOR 30 SEC. WAIT
 0770            CADR   MANOZD
 0771            CS     TWO             SET ZEROING FLAG IN DESOPSET.
 0772            TS     DESOPSET
 0773            CS     CSQ             RECONCILE ZERO OPTICS C RELAY
 0774            MASK   DSPTAB +12D
 0775            AD     CSQ
 0776            TS     DSPTAB +12D
 0777  4         TC     RECONTRK
R0778  2         WAITLIST TASK TO COMPLETE MANUAL OPTICS ZERO.
 0779   MANOZD   CAF    ZERO
 0780            TS     DESOPSET        LEAVE MANUAL ZERO MONITOR
 0781            TC     ZEROOCTR +1     SET OPTICS COUNTERS.
 0782            TC     SETZLIT         TURN OFF LIGHT (POSSIBLY) AS SIGNAL.
 0783            TC     TASKOVER
P0784  2         PROCEDURE TO TURN OFF AN OUTCR WHOSE RESET PULSE WAS INITIATED
 0785  9DURING THE FIRST OF TWO  XCH OUT2  IN-
R0786  2STRUCTIONS USED IN UPDATING THE CONTENTS OF OUT2. THE OCCURENCE OF THIS
 0787  9IS EXTREMELY RARE.
 0788   JACKPOT  MASK   BIT6            SEE WHICH FIELD TURNED OFF UNEXPECTEDLY.
 0789            CCS    A
 0790            CAF    OCT00767        IMU - MAKE UP MASK  OCT 00377  .
 0791            AD     OCT77407        OPTICS - MAKE UP MASK  OCT 77407  .
 0792            MASK   OUT2            THE PROBLEM WILL NOT RECUR HERE SINCE
 0793            TS     OUT2            THIS IS WITHIN 26 MCT OF THE LAST PULSE.
 0794  2         TC     Q
 0795   OCT00767 OCT    00767
 0796   OCT77407 OCT    77407
P0797            THE FOLLOWING PROGRAM TAKES A 2S COMPLEMENT DIFFERENCE BETWEEN
 0798  9THE ACTUAL CDU COUNTER AND THE DESIRED
R0799   SETTING. THE AGC AD INSTRUCTION BY ITSELF CANNOT BE USED SINCE +0 = -0 T
 0800  9HERE. TO COMPENSATE, IF THE SIGNS OF
R0801   THE OPERANDS ARE DIFFERENT AND THE ROTATION NECESSARY TO NULL OUT THE ER
 0802  9ROR PASSES THROUGH ZERO (NO OVERFLOW
R0803   OCCURS IN DIFFERENCING THE DESIRED AND ACTUAL), A ONE WITH THE SIGN OF T
 0804  9HE DESIRED ANGLE IS ADDEDTO THE DIFFER-
R0805  2ENCE.
 0806   2SCOMDIF TS     ITEMP1          NEGATIVE OF CDU COUNTER ARRIVES IN A.
 0807            XCH    Q
 0808            TS     ITEMP3
 0809            CS     ITEMP2          C(ITEMP2) = -THE APPROPRIATE DES. ANGLE.
 0810            AD     ITEMP1
 0811            TS     OVCTR
 0812  2         TC     2SCOM2          IF NO OVERFLOW, SEE IF +-1 MUST BE ADDED
 0813   UNCOROVF INDEX  A               IF OVERFLOW, SIMPLY DO OVERFLOW UNCOR-
 0814            CAF    LIMITS          RECTION AND EXIT.
 0815            AD     OVCTR
 0816  2         TC     ITEMP3
 0817   2SCOM2   CCS    ITEMP1          NO OVERFLOW - SEE IF SIGNS OF INPUTS ARE
 0818            TC     EXAM2           DIFFERENT.
 0819            TC     EXAM2
 0820            TC     +1
 0821            CCS    ITEMP2
 0822            TC     INCEX-          ADD -1 AND EXIT HERE.
 0823            TC     INCEX-
 0824  2         TC     +1
 0825   DIFEX    XCH    OVCTR           ORIGINAL DIFFERENCE IS OK IF SIGNS SAME.
 0826  2         TC     ITEMP3
 0827   EXAM2    CCS    ITEMP2
 0828            TC     DIFEX           SIGNS SAME HERE.
 0829            TC     DIFEX
 0830  2         TC     +1              ADD +1 TO DIFFERENCE HERE.
 0831            CAF    ONE
 0832            TC     +2
 0833   INCEX-   CS     ONE
 0834            AD     OVCTR
 0835            TS     OVCTR
 0836            TC     ITEMP3          NORMAL TRAIN OF EVENTS.
 0837            TC     UNCOROVF        THIS ONLY HAPPENS AT 180 DEGREES.
P0838  2         OUTCTR SETTINGS FOR OUT2, AND C-RELAY SETTING CONSTANTS FOR IMU
 0839  9 MODES.
 0840   CDUCODES OCT    50400            -Z CDU
 0841            OCT    51000            -Y CDU
 0842            OCT    52000            -X CDU
 0843            OCT    32000            +X CDU
 0844            OCT    31000            +Y CDU
 0845  2         OCT    30400            +Z CDU
 0846   MODECHNG OCT    40011           (THIS CONSTANT IS NEVER USED BY RECONCIL
 0847            OCT    00002            BUT ONLY BY THE MANUAL ZEROING PROG.)
 0848            OCT    00004
 0849            OCT    00010
 0850            OCT    01000
 0851            OCT    00000           (TRANSFER SWITCH - NOT USED).
 0852  2         OCT    02000
R0853  2         ZERO-ENCODER LIGHT NOT COVERED HERE.
 0854   LOW8     OCT    377
 0855   OUT2MASK EQUALS LOW8
 0856  2OPTMASK  OCT    77407           COMPLEMENT OF OUTCR2 ACTIVITY BITS.
 0857            OCT    44400           -Z GYRO
 0858            OCT    45000           -Y GYRO
 0859  2         OCT    46000           -X GYRO.
 0860   OPTCODES OCT    00220           -Y OPTICS CDU.
 0861            OCT    00240           -X OPTICS CDU.
 0862            OCT    00140           +X OPTICS CDU.
 0863  2         OCT    00120           +Y OPTICS CDU.
 0864            OCT    26000           +X GYRO
 0865            OCT    25000           +Y GYRO
 0866  2         OCT    24400           +Z GYRO.
 0867   35SCNDS  DEC    35. E 2         FOR MANUAL IMUCDU ZEROING.
 0868   60SCNDS  DEC    60. E 2         FOR MANUAL OPTICS ZEROING.
 0869   NWMASK   OCT    06022           IMU, PIPA, RESTART FAIL AND CURTAINS.
 0870   HI5      EQUALS BANKMASK
L      2MODE SWITCHING AND MARK ROUTINES
R0001            THE FOLLOWING SET OF PROGRAMS ARE USED TO SELECTTHE VARIOUS MOD
 0002  9ES OF THE IMU AND OPTICS. THE FOLLOWING
R0003  2MODES ARE POSSIBLE:
R0004            IMUZERO     ZEROS IMU CDUS.
R0005            IMUCOARS    COARSE ALIGNS IMU.
R0006            IMURECOR    RETURNS IMU FROM FINE ALIGN TO COARSE ALIGN
R0007            IMUFINE     PREPARES TO PULSE TORQUE THE GYROS.
R0008   IMUFINNW        SWITCHES TO FINE WITH NO DELAY FOR IRIG CENTERING-DONT
 0009  9ENTER FROM COARSE ALIGN MODE.
R0010            IMUATTC     USE IMU FOR S/C ATTITUDE CONTROL.
R0011            IMUREENT    USE IMU FOR ROLL RE-ENTRY.
R0012  2         IMULOCK     LOCKS IMU CDUS.
R0013            IMUFINIS(**)RELEASES IMU
R0014  4         IMUSTALL(*) IMU MODE IDLING AND ERROR CHECKING.
R0015            OPTZERO     ZERO OPTICS CDUS.
R0016            OPTCOARS    DUMMY OPTICS COARSE-ALIGN MODE.
R0017  2         OPTTRKON    OPTICS TRACKER ON.
R0018            SCTMARK     REQUEST N SCANNING TELESCOPE MARKS.
R0019            SXTMARK     REQUEST N SEXTANT MARKS.
R0020  2         MKRELEAS(**)RELEASE MARK SYSTEM.
R0021            OPTFINIS(**)RELEASE OPTICS.
R0022  4         OPTSTALL(*) OPTICS MODE-IDLING AND ERROR CHECKING.
R0023  2         OPTICS AND IMU MODE ROUTINES MAY BE USED CONCURRENTLY.
R0024            IN ADDITION, A ROUTINE WHICH INCREMENTS ANY DESIRED 2S COMPLEME
 0025  9NT ANGLE BY AN INPUT AMOUNT IS
R0026  4INCLUDED (CDUINC).
R0027  2         CALLING SEQUENCE IS AS FOLLOWS:
R0028   L-1      CAF    NO.MARKS        (FOR SCTMARK AND SXTMARK ONLY).
R0029   L        TC     BANKCALL
R0030  4L+1      CADR   (SUBRO)         ANY OF THE 14 MODE ROUTINES OR CDUINC.
R0031            (*)    THE STALL ROUTINES ARE CALLED TO TERMINATE ANY MODE REQU
 0032  9EST. THE REQUESTING JOB IS STALLED UNTIL
R0033   THE MODE-SWITCHING IS COMPLETE (WITH VAC-AREA PROTECTED) AND RETURN IS T
 0034  9O L+2 IF UNSUCCESSFUL AND L+3 IF THE
R0035  2DESIRED MODE WAS SUCCESSFULLY ACHIEVED.
R0036            (**)   NO STALL ROUTINE NECESSARY IN CONJUNCTION WITH THIS REQU
 0037  9EST.
P0038  2         SPECIAL DP TIME COUNTER READING ROUTINE.
 0039            BANK   1
 0040   READTIME INHINT                 ENTRY IF UNDER EXECUTIVE.
 0041            CS     TIME2           ENTRY IF IN INTERRUPT.
 0042            TS     RUPTSTOR
 0043            CS     TIME1
 0044            TS     RUPTSTOR +1
 0045            CCS    A               IF MINOR PART ZERO, MAJOR PART COULD
 0046            TC     Q
 0047            CCS    A
 0048            TC     Q
 0049            CS     TIME2           UP, SO READ IT AGIN.
 0050            TS     RUPTSTOR
 0051  2         TC     Q
R0052  2         ROUTINE TO READ FINE TIME IN IN2 EVEN IF IT CHANGES AS ITS BEIN
 0053  9G READ. CALL IN INHINT.
 0054   FINETIME XCH    IN2             MAY BE CALLED UNDER EXEC OR RUPT.
 0055            XCH    IN2
 0056            MASK   FINEMASK        NOTE THAT THE OR OF TWO STATES A AND B
 0057            TS     ITEMP1          IS NOT LESS THAN EITHER A OR B.
 0058            XCH    IN2
 0059            MASK   FINEMASK
 0060            TS     ITEMP2
 0061            COM                    SELECT THE MINIMUM OF THE LAST TWO
 0062            AD     ITEMP1          STATES READ.
 0063            CCS    A
 0064            XCH    ITEMP2
 0065            TC     Q
 0066            NOOP
 0067            XCH    ITEMP1
 0068  2         TC     Q
R0069  2         SUBROUTINE TO ZERO IMU CDU COUNTERS.
 0070   ZEROICTR CAF    ZERO            USED BY AUTOMATIC AND MANUAL ZEROING
 0071            TS     CDUX             ROUTINES.
 0072            TS     CDUY
 0073            TS     CDUZ
 0074  4         TC     Q
 0075   LODSAMPT CS     RUPTSTOR        TIME IS SNATCHED IN RUPT FOR NOUN 65
 0076            XCH    SAMPTIME
 0077            CS     RUPTSTOR +1
 0078            XCH    SAMPTIME +1
 0079            TC     Q
P0080  2         SETZLIT SETS THE ZERO ENCODER LAMP ACCORDING TO THE DESIRED-MOD
 0081  9E REGISTERS DESKSET AND DESOPSET.
 0082   SETZLIT  XCH    Q
 0083  2         TS     ITEMP1
 0084            CCS    DESKSET
 0085            TC     +4              COMPUTER COMMANDING-MAY BE ZEROING.
 0086            TC     OPTZTEST        NOT MANUAL ZERO.
 0087   TURNONZ  TC     ZLITON          MANUAL ZEROING MODE.
 0088  2         TC     ITEMP1
 0089     +4     AD     ONE
 0090            MASK   BIT1
 0091            CCS    A
 0092  2         TC     TURNONZ         COMPUTER COMMANDING ZERO-ENCODER
 0093   OPTZTEST CCS    DESOPSET
 0094            TC     +3              MAY BE COMMANDING OPTICS ZERO.
 0095            TC     ZLITOFF         NOT MANUAL ZERO-TURN LIGHT OFF.
 0096  2         TC     TURNONZ         MANUAL OPTICS
 0097    +3      AD     ONE
 0098            MASK   BIT12
 0099            CCS    A
 0100  2         TC     TURNONZ
 0101   ZLITOFF  CS     ZLITBITS        TURN OFF ZERO ENCODER LAMP.
 0102            MASK   DSPTAB +11D
 0103            AD     BIT15
 0104            TS     DSPTAB +11D
 0105  2         TC     ITEMP1
 0106   ZLITON   CS     ZLITBITS        TURN ON ZERO-ENCODER LAMP.
 0107            MASK   DSPTAB +11D
 0108            AD     ZLITBITS
 0109            TS     DSPTAB +11D
 0110  2         TC     Q
 0111   ZLITBITS EQUALS OCT40020        CS CYR IN DMP.
P0113  2         IMU ZEROING ROUTINE.
 0114  2         SETLOC 30000
 0115   IMUZERO  CS     ONE             DISABLE CDU DRIVE
 0116  2         TS     CDUIND           BY SETTING CDUIND NEGATIVE.
 0117            TC     SETKANDC        GO TO SUBROUTINE TO SWITCH C RELAYS
 0118            OCT    00051            = C(DESKSET)=COMP CONT+ZERO+FINE
 0119            OCT    40011            = C SETTING FOR FINE + ZERO
 0120  2         TC     ZLITON          TURN ON ENCODER ZEROING LAMP
 0121            CS     BIT4            DISABLE IMU FAIL FOR 5 SEC IN CASE WE
 0122            MASK   OLDERR          JUST CAME OUT OF COARSE ALIGN.
 0123            AD     BIT4
 0124            TS     OLDERR
 0125            CAF    BIT10
 0126            TC     WAITLIST
 0127  2         CADR   IFAILOK
 0128            CAF    35SECS          SET A WAITLIST CALL FOR 35 SECONDS
 0129            TC     WAITLIST         SO  THOSE SHAFTS WILL HAVE TIME TO GET
 0130            CADR   IMUZEROD        THERE.
 0131   MODEEXIT RELINT                 GENERAL EXIT FROM MODE SWITCH PROGS
 0132  2         TC     SWRETURN         WHICH LEAVES VIA SWCALL EXIT
 0133  2IMUZEROD TC     ZEROICTR        GO AND ZERO X, Y, AND Z COUNTERS
 0134            TC     KCHECK          SEE IF SYSTEM STILL FUNCTIONING OK.
 0135   MOREZERO TC     SETKANDC +1     CALL FOR 10 SECONDS OF FINE ALIGN TO
 0136            OCT    00050            ALLOW CDUS TO GO AT LEAST 90 DEGREES
 0137            OCT    40010            OF THE WAY HOME UNLESS THE PLATFORM IS
 0138            CAF    10SECS           SITTING AT ANY FALSE NULLS.
 0139            TC     WAITLIST
 0140            CADR   ZEROATTC        WE WILL GO INTO ATTITUTE CONTROL NEXT.
 0141  2         TC     TASKOVER
 0142   ZEROATTC TC     KCHECK          USUAL SYSTEM CHECK.
 0143            TC     SETKANDC +1     COMMAND ATTITUDE CONTROL (WITHOUT ATTC
 0144            OCT    00060            LAMP LIT) SO THAT WE CAN DRIVE THE CDUS
 0145            OCT    41000           (LIGHT ON AFTER ALL) AWAY FROM FALSE NUL
 0146            CAF    320MS
 0147            TC     WAITLIST
 0148            CADR   ZERODRVE        WAIT FOR MODE SWITCH BEFORE ENABLING CDU
 0149  8         TC     TASKOVER         DRIVE IN T4RUPT.
 0150   ZERODRVE TC     KCHECK          VERIFY SWITCH TO ATTITUDE CONTROL.
 0151            CAF    QUARTER         WE WILL DRIVE THE CDUS TOWARD 45 DEGREES
 0152            TS     THETAD           FOR 2SECS (ABOUT 10 DEGREES OF MOVEMENT
 0153            TS     THETAD +1        AT MOST). THIS WILL DRIVE ANY CDUS OFF
 0154            TS     THETAD +2        FALSE NULLS WITHOUT MOVING THE PLATFORM
 0155            CAF    ZERO
 0156            TS     CDUIND          CDU LOOPS ARE NOW ENABLED.
 0157            CAF    2SECS
 0158            TC     WAITLIST
 0159            CADR   REZFINE         GO BACK TO FINE ALIGN WHEN DONE.
 0160  2         TC     TASKOVER
 0161   REZFINE  TC     KCHECK          VERIFY MODE SWITCH AS USUAL.
 0162            TC     SETKANDC +1     CALL FOR 20 SECONDS OF FINE ALIGN TO
 0163            OCT    00050            ALLOW ENOUGH TIME FOR THE CDUS TO FIND
 0164            OCT    40010            THE GIMBALS.
 0165            CS     ONE
 0166            TS     CDUIND          CDU LOOPS NOW DISABLED.
 0167            CAF    20SECS
 0168            TC     WAITLIST
 0169            CADR   IMUFINED        CHECK FOR PRESENCE OF IMU OR CDU FAILS.
 0170  4         TC     TASKOVER
 0171   KCHECK   CCS    WASKSET         RETURN TO CALLER IF SYSTEM OK - SET UP
 0172            TC     Q                ERROR RETURN AT ENDIMU OTHERWISE.
 0173            TC     ENDIMU
 0174            TC     Q
 0175  2         TC     ENDIMU
 0176   90SECS   DEC    90.00 E 2
 0177   45SECS   DEC    45.00 E 2       TIME FOR IMUCDU COARSE ALIGN.
 0178   35SECS   DEC    35.00 E 2       TIME FOR IMUCDU ZERO ENCODER.
 0179   20SECS   DEC    20.00  E 2
 0180   10SECS   DEC    10.00  E 2
 0181   2SECS    DEC    2.00  E 2
 0182   320MS    DEC    .32 E2
P0183  2IMU COARSE ALIGN PROGRAM
 0184   IMUCOARS TC     SETKANDC        SET DESIRED C AND K RELAY SETTINGS.
 0185            OCT    00042             COMPUTER CONTROL + COARSE ALIGN.
 0186  2         OCT    40002             C RELAY COARSE ALIGN.
 0187  2         TC     SETZLIT         SERVICE THE ZERO ENCODER LAMP
 0188            CAF    320MS           SET WAITLIST CALL FOR 320 M.S. TO
 0189            TC     WAITLIST         ACCOMMODATE CONTACT BOUNCE + T4RUPT LAG
 0190            CADR   BEGINCOM
 0191  4         TC     MODEEXIT
 0192   RECOARSD CS     CDUX            GOING BACK INTO COARSE ALIGN FROM FINE
 0193            COM                    ALIGN. PUT CDU COUNTER VALUES INTO
 0194            TS     THETAD          DESIRED ANGLE REGISTERS AND ENABLE THE
 0195            CS     CDUY            T4RUPT CDU DRIVE.
 0196            COM
 0197            TS     THETAD +1
 0198            CS     CDUZ
 0199            COM
 0200  2         TS     THETAD +2
 0201   BEGINCOM TC     KCHECK          VERIFY CORRECTNESS OF PRESENT MODE.
 0202   STARTCRS CAF    ZERO            ENABLE CDU LOOP CLOSURE
 0203  2         TS     CDUIND
 0204            CAF    45SECS
 0205            TC     WAITLIST         CDU LOOPS TO SETTLE
 0206            CADR   COARSDON
 0207            TC     TASKOVER
P0208  2IMU FINE ALIGN PROGRAM
 0209   IMURECOR TC     SETKANDC        GO INTO COARSE ALIGN FROM FINE ALIGN.
 0210            OCT    00042           (SEE REMARKS ON RECOARSD FOR FURTHER
 0211            OCT    40002             DETAILS).
 0212            CAF    320MS           USUAL CONTACT CLOSURE AND SAMPLE TIME
 0213            TC     WAITLIST
 0214            CADR   RECOARSD
 0215  2         TC     DISEXIT         DISABLE GYRO ACTIVITY.
 0216   IMUFINE  TC     SETKANDC        SET UP C RELAY PATTERN AND DESIRED K
 0217            OCT    00050            DES K = COMPUTER CONTROL + FINE
 0218  2         OCT    40010                C = FINE ALIGN
 0219            CS     BIT4            COMES THROUGH HERE AFTER EVERY COARSE
 0220            MASK   OLDERR          ALIGN. SET BIT 4 OF OLDERR TO INHIBIT
 0221            AD     BIT4            IMU FAIL FOR ANOTHER 5 SECONDS.
 0222  2         TS     OLDERR
 0223            CAF    BIT10
 0224            TC     WAITLIST
 0225  2         CADR   IFAILOK
 0226            CAF    90SECS          SET WAITLIST CALL FOR 90 SEC. TO ALLOW
 0227            TC     WAITLIST         GYROS TO RE-CENTER BEFORE IRIG PULSE
 0228            CADR   IMUFINED         TORQUING
 0229   DISEXIT  CS     ONE             DISABLE T4 IMU (CDU OR GYRO) ACTIVITY.
 0230            TS     CDUIND
 0231  4         TC     MODEEXIT
 0232  2IMUFINNW TC     TSTIMACT
 02325           TC     SETKANDC
 0233            OCT    00050
 0234            OCT    40010
 0235            CAF    320MS
 0236  8         TC     DISEXIT -2
 0237   IMUFINED TC     FLAG1DWN
 02373 2         OCT    02000
 02376 2         TC     ENDIMU
 0238            CAF    BIT12           NO IMU FAILS, PLEASE.
 0239            MASK   OLDERR
 0240            CCS    A
 0241            TC     FAILEND
 0242  2         TC     GOODEND
 0243   IFAILOK  CS     BIT4            ENABLE IMU FAIL 5 SECONDS AFTER COMING
 0244            MASK   OLDERR          OUT OF COARSE ALIGN.
 0245            TS     OLDERR
 0246            TC     TASKOVER
P0247  2CDU LOCK PROGRAM
 0248   IMULOCK  TC     SETKANDC        SET APPROPRIATE K AND C CONFIGS.
 0249            OCT    00044
 0250  2         OCT    40004
 0251            CAF    320MS
 0252            TC     WAITLIST         PLACE.
 0253            CADR   IMULOCKD
 0254  2         TC     DISEXIT
 0255   IMULOCKD TC     ENDIMU
 0256  2         TC     GOODEND
 0257   COARSDON EQUALS IMULOCKD
P0258  2IMU RE-ENTRY AND ATTITUDE CONTROL PROGRAMS
 0259   IMUREENT TC     TSTIMACT
 02595           TC     SETKANDC
 0260            OCT    00140
 0261            OCT    42000
 0262  4         TC     ENABEXIT
 0263   IMUATTC  TC     TSTIMACT
 02635           TC     SETKANDC
 0264            OCT    00060
 0265  2         OCT    41000
 0266   ENABEXIT CAF    320MS
 0267            TC     WAITLIST
 0268            CADR   ENABLE
 0269  2         TC     DISEXIT         DISABLE POSSIBLE GYRO ACTIVITY.
 0270   ENABLE   TC     FLAG1DWN
 02703 2         OCT    02000
 02706 2         TC     ENDIMU
 0271            CAF    ZERO            ENABLE CDU LOOPS
 0272            TS     CDUIND
 0273            TC     GOODEND
A0274                                   NOTICE THAT NO INSPECTION OF CDU AND IMU
A0275                                   ERROR SIGNALS IS MADE SINCE IN THESE
A0276                                   MODES THE MAIN PROGRAM MUST CHECK THE
A0277  4                                STATUS OF THESE SIGNALS PERIODICALLY.
R0278            IMUFINIS - TO BE CALLED AT THE END OF COMPUTER-CONTROLLED MODE
 0279  9SWITCHING. PLACES MODE SAMPLING INTO
R0280   MANUAL CONTROL, SWITCHES THE SYSTEM TO FINE ALIGN, AND DISABLES THE T4RU
 0281  9PT CDU DRIVE. NO CALL TO IMUSTALL IS
R0282  2REQUIRED HERE.
 0283   IMUFINIS TC     SETKANDC
 0284            OCT    00000           0 MEANS COMPUTER IS NO LONGER IN CONTROL
 0285            OCT    40010           FINE ALIGN C-RELAY CODE.
 0286            TC     DISEXIT
P0287  2         SUBROUTINE USED BY MODE-SWITCHING PROGRAMS TO SET DESIRED K- AN
 0288  9D C-RELAY SETTINGS.
 0289   SETKANDC INHINT                 INHINT AND EXIT WITH INTERRUPT INHIBITED
 0290            INDEX  Q
 0291            CAF    0
 0292  2         TS     DESKSET         DESIRED K-RELAY SETTING AS READ IN IN3.
 0293            CAF    OFFMSK          SET C-RELAYS FOR ZERO ENCODER, COARSE
 0294            MASK   DSPTAB +11D       ALIGN, FINE ALIGN, LOCK CDU, ROLL
 0295            INDEX  Q                 RE-ENTRY, AND ATTITUDE CONTROL LAMP.
 0296            AD     1
 0297  2         TS     DSPTAB +11D
 0298            INDEX  Q
 0299  2         TC     2               RETURN TO CALLER IN INHINT.
 0300   OFFMSK   OCT    34760
P0301            WHEN A MODE-SWITCHING TASK IS DISPATCHED TO INDICATE THE END OF
 0302  9 A MODE-SWITCH, ENDIMU (OR ENDOPT) IS
R0303   CALLED TO WAKE UP ANY JOB IMUSTALL (OPTSTALL) MIGHT HAVE PUT TO SLEEP AN
 0304  9D THEN CHECK WASKSET (WASOPSET) TO SEE
R0305  2THAT THE MODE-SWITCH WAS SUCCESSFUL.
 0306   ENDOPT   CAF    TWO
 0307            AD     POSMAX
 0308  2         TS     OVCTR           SKIP WITH C(A) = 1.
 0309   ENDIMU   CAF    ZERO
 0310  2         TS     RUPTREG2        0 FOR IMU, 1 FOR OPTICS.
 0311            XCH    Q
 0312  2         TS     RUPTREG1
 0313            INDEX  RUPTREG2
 0314            CCS    MODECADR        SEE IF IMUSTALL (OPTSTALL) PUT A JOB
 0315            TC     +2              TO SLEEP.
 0316            TC     ENDMODE         +0 IF NOT.
 0317            CAF    ONE             SET PROPER MODECADR TO 1 TO INDICATE
 0318            INDEX  RUPTREG2        A JOB WAS AWAKENED.
 0319            XCH    MODECADR
 0320  2         TC     JOBWAKE
 0321   ENDMODE  INDEX  RUPTREG2        CHECK PROPER *WAS* REGISTER TO SEE IF
 0322            CCS    WASKSET          SWITCH WAS SUCCESSFUL.
 0323            TC     RUPTREG1        YES - RETURN FOR MORE CHECKING IF OK.
 0324            TC     +2              FAILED - STILL WAITING TO SWITCH.
 0325  2         TC     RUPTREG1        MANUAL INHIBIT.
 0326   FAILEND  INDEX  RUPTREG2        COMES HERE TO SIGNAL ERROR RETURN FROM
 0327            CCS    MODECADR         MODE STALL ROUTINES.
 0328            TC     +2              JOB WAS WAKENED EARLIER - EXIT W/O INCR.
 0329            COM                    NO WAKE-UP - SET MODECADR TO -0 FOR FAIL
 0330   LVENDMOD INDEX  RUPTREG2
 0331            TS     MODECADR
 0332  2         TC     TASKOVER
 0333   GOODEND  INDEX  RUPTREG2        COMES HERE TO SIGNAL A SUCCESSFUL SWITCH
 0334            CCS    MODECADR
 0335            TC     BUMPJOB         JOB WAS AWAKENED - INCREMENT LOC.
 0336            CS     ONE             NO WAKE - SET MODECADR TO -1 TO INDICATE
 0337  2         TC     LVENDMOD         SUCCESS.
 0338   BUMPJOB  INDEX  LOCCTR          ARRIVES WITH C(A) = 0. LOCCTR SET TO
 0339            XCH    LOC              AWAKENED JOB REGISTERS.
 0340            AD     MINUS1          LOC IS NEGATIVE FOR BASIC JOBS.
 0341            INDEX  LOCCTR
 0342            XCH    LOC
 0343            TC     LVENDMOD        SET MODECADR TO +0 AND EXIT.
P0344            WHEN A JOB WHICH REQUESTED A MODE SWITCH MUST IDLE UNTIL THE SW
 0345  9ITCH IS COMPLETE, IT COMES TO IMUSTALL
R0346   (OR OPTSTALL) TO WAIT FOR THE COMPLETION AND TO DO ERROR CHECKING. RETUR
 0347  9N IS TO THE LOCATION IMMEDIATELY FOLLOW-
R0348   ING THE CALLING SEQUENCE IF THE SWITCH WAS UNSUCCESSFUL, AND THE NEXT LO
 0349  9CATION IF IT WAS SUCCESSFUL. ANY
R0350  2IDLING IS DONE BY PUTTING THE JOB TO SLEEP, SO THAT A VAC AREA (IF USED)
 0351  9 WOULD BE PRESERVED.
 0352   OPTSTALL CAF    ONE             0 FOR IMU AND 1 FOR OPTICS AS USUAL.
 0353  2         TC     +2
 0354   IMUSTALL CAF    ZERO
 0355            INHINT                 ONE SUB-SYSTEM AT A TIME ONLY.
 0356            TS     RUPTREG2
 0357            INDEX  A
 0358            CCS    MODECADR        SEE IF MODE SWITCH IS COMPLETE.
 0359            TC     MODABORT        VERY ILL IF SOMEONE ALREADY WAITING.
 0360            TC     MODESLP         MODE SWITCH INCOMPLETE - PUT JOB TO REST
 0361  2         TC     MODEGOOD        -1 INDICATES A SUCCESSFULLY COMPLETED SW
 0362   MG2      INDEX  RUPTREG2        -0 MEANS FINISHED BUT FAILED.
 0363            TS     MODECADR        RESET TO +0.
 0364  2         TC     MODEEXIT        RELINT AND RETURN VIA SWCALL.
 0365   MODEGOOD CCS    A               SEE THAT MODECADR WAS INDEED -1.
 0366            TC     MODABORT        VERY ILL IF SOMEONE ALREADY WAITING.
 0367            XCH    TEMQS           INCREMENT RETURN TO INDICATE SUCCESS.
 0368            AD     ONE
 0369            XCH    TEMQS           BRING +0 BACK
 0370  2         TC     MG2             TO RESET MODECADR AND EXIT.
 0371   MODESLP  TC     MAKECADR        MAKE CADR FROM SWCALL RETUN ADDRESS.
 0372            XCH    ADDRWD
 0373            INDEX  RUPTREG2
 0374            TS     MODECADR
 0375  2         TC     JOBSLEEP
 0376   MODABORT TC     ABORT           IMU OR OPTSTALL ABORT.
 0377  2         OCT    01210
 0378   ENDSTALL EQUALS
P0379            THE FOLLOWING ROUTINE INCREMENTS IN 2S COMPLEMENT THE REGISTER
 0380  9WHOSE ADDRESS IS IN ADDRWD BY THE
R0381   QUANTITY FOUND IN TEM2.  THIS MAY BE USED TO INCREMENT DESIRED IMU AND O
 0382  9PTICS CDU ANGLES OR ANY OTHER 2S
R0383  2COMPLEMENT (+0 UNEQUAL TO -0) QUANTITY.
 0384   CDUINC   TS     TEM2            1S COMPLEMENT INCREMENT ARRIVING IN A.
 0385            INDEX  BUF
 0386            CCS    0               THE 16TH BIT OF A WILL BE USED TO
 0387            AD     ONE             ACHIEVE THE REQUIRED 32,768 DISTINCT
 0388  2         TC     +4              STATES.
 0389            AD     ONE
 0390            AD     ONE             A MAY HAVE OVERFLOW PRESENT HERE.
 0391  2         COM                    DESIRED -1 IF DESIRED WAS NEGATIVE.
 0392    +4      AD     TEM2            AND MAYBE OVERFLOW SOME MORE.
 0393            CCS    A               BACK TO 2S COMPLEMENT.
 0394            AD     ONE               NOTE THAT CCS TREATS A AS A 16 BIT NO.
 0395            TC     +2
 0396            COM
 0397            TS     OVCTR           REVERTS -0 TO +0.
 0398  2         TC     +4              NO OVERFLOW - PLANT NEW DESIRED.
 0399            INDEX  A               OVERFLOW - SIMULATE UN-CORRECTED SIGN.
 0400            CAF    LIMITS          37777 FOR NEGATIVE - 40000 IF PLUS.
 0401  2         AD     OVCTR           OVERFLOW-CORRECTED DIFFERENCE.
 0402    +4      INDEX  BUF
 0403  2         TS     0               NEW ANGLE.
 0404            TC     SWRETURN        RETURN TO CALLER.
P0405  2         MARK REQUESTING ROUTINES.
 0406   SXTMARK  INHINT
 0407  2         TS     RUPTREG1        NUMBER OF MARKS REQUESTED.
 0408            CCS    MARKSTAT        SEE IF MARK BUTTON ALREADY SNATCHED.
 0409            TC     +2              YES - ALARM AND END THE STRAY JOB.
 0410  2         TC     MARKOK          +0 INDICATES AVAILABLE.
 0411            TC     ALARM
 0412            OCT    00105
 0413  2         TC     ENDOFJOB
 0414   MARKOK   CCS    VAC1USE         FIND A VAC AREA TO STORE THE MARKS IN.
 0415            TC     MKVACFND
 0416            CCS    VAC2USE
 0417            TC     MKVACFND
 0418            CCS    VAC3USE
 0419            TC     MKVACFND
 0420            CCS    VAC4USE
 0421            TC     MKVACFND
 0422            CCS    VAC5USE
 0423  2         TC     MKVACFND
 0424            TC     ABORT           VAC AREAS ALL OCCUPIED - ABORT.
 0425  2         OCT    01207
 0426   MKVACFND AD     TWO             ADDRESS OF VAC.
 0427            TS     MARKSTAT
 0428            INDEX  A
 0429  2         TS     QPRET           USED TO SHOW NEXT AVAILABLE MARK SLOT.
 0430            CAF    ZERO            SHOW VACAREA IS OCCUPIED.
 0431            INDEX  MARKSTAT
 0432  2         TS     0 -1
 0433            CAF    BIT12           PLACE DESIRED NUMBER OF MARKS IN 12 - 14
 0434            EXTEND
 0435            MP     RUPTREG1
 0436            XCH    LP
 0437            AD     MARKSTAT        JUST CONTAINS LOW 9 BITS OF VAC ADDRESS.
 0438  2         TS     MARKSTAT
 0439   MARKEXIT CAF    PRIO32
 0440            TC     NOVAC
 0441            CADR   MKVB51
 0442            TC     MODEEXIT
P0443  2         MARK SYSTEM RELEASING ROUTINE.
 0444   MKRELEAS CAF    ZERO            SHOW MARK SYSTEM NOW AVAILABLE.
 0445            XCH    MARKSTAT
 0446            CCS    A
 0447            INDEX  A
 0448  2         TS     0
 0449            TC     SWRETURN
P0450  2         KEYRUPT LEAD-IN AND MARK/MARK ACCEPT PROGRAMS.
 0451   KEYRUPTA TS     BANKRUPT
 0452   MARK     CS     OPTY            PRECISION OPTICS DRIVE - GATHER DATA
 0453  2         TS     RUPTSTOR +5     IMMEDIATELY AND THEN TRANSFER TO VAC.
 0454            CS     OPTX            SHAFT OPTICS ENCODER.
 0455  2         TS     RUPTSTOR +3
 0456            CS     CDUY            READ INNER-MIDDLE-OUTER IMUCDUS.
 0457  2         TS     RUPTSTOR +2
 0458            CS     CDUZ
 0459  2         TS     RUPTSTOR +4
 0460            CS     CDUX
 0461  2         TS     RUPTSTOR +6
 0462  2         TC     READTIME +1     SPECIAL DP TIME COUNTER-READING ROUTINE.
 04621           CAF    BIT5            DO NOT ACCEPT KEYCODE UNLESS PREVIOUS
 04622           MASK   STATE           KEYCODE HAS DISAPPEARED FROM IN0 (SEE
 04623           CCS    A               T4RUPTA). IF SO, BIT5 OF STATE = 0.
 04624 2         TC     RESUME          IF NOT, BIT5 = 1.
 04625           CS     BIT5            ACCEPT CODE AND BLOCK KEYRUPTS UNTIL
 04626           MASK   STATE           PRESENT KEYCODE HAS GONE AWAY.
 04627           AD     BIT5
 04628 2         TS     STATE
 0463            CCS    IN0             SEE IF KEYCODE OR MARK.
 0464            AD     ONE
 0465            TC     KEYCALL
 0466  2         TC     +1              IN0 SHOULD NEVER CONTAIN -0.
 0467            XCH    IN3             NOW FIND OUT IF IT WAS A MARK-REJECT.
 0468            XCH    IN3
 0469            MASK   BIT12           OPT ZERO/MARK REJECT BIT.
 0470            CCS    A
 0471  8         TC     MKREJECT
 0472            CCS    MARKSTAT        SEE IF MARKS BEING CALLED FOR.
 0473  2         TC     MARK2
 0474            XCH    RUPTSTOR +3     STORE IN OBTAINED MPAC COMPLEMENTED.
 0475            TS     RUPTREG1        OPTICS ANGLES AND MINOR PART OF TIME.
 0476            XCH    RUPTSTOR +5     -OPTX, -OPTY, AND -TIME1.
 0477            TS     RUPTREG2
 0478            XCH    RUPTSTOR +1
 0479  2         TS     RUPTREG3
 0480            CAF    PRIO5           CALL SPECIAL DISPLAY JOB
 0481            TC     NOVAC
 0482  2         CADR   MARKDISP
 0483            XCH    RUPTREG1        PLANT INFORMATION IN MPAC OF REGISTER
 0484            INDEX  LOCCTR          SET.
 0485            TS     MPAC
 0486            XCH    RUPTREG2
 0487            INDEX  LOCCTR
 0488            TS     MPAC +1
 0489            XCH    RUPTREG3
 0490            INDEX  LOCCTR
 0491  2         TS     MPAC +2
 0492  8         TC     RESUME
 0493   MARK2    AD     74K             SEE IF ANY MORE MARKS CALLED FOR.
 0494            CCS    A
 0495            TC     MARK3
 0496   BIT10BAR OCT    -1000
 0497   BADMARK  TC     ALARM
 0498            OCT    00106
 0499  2         TC     RESUME          NO FURTHER ACTION HERE.
 0500   MARK3    AD     ONE             SET BIT 10 = 1 TO ENABLE MARK
 0501            MASK   BIT10BAR        REJECT.
 0502            AD     BIT10
 0503  2         TS     MARKSTAT
 0504            MASK   LOW9            SET UP REGISTER TRANSFER LOOP.
 0505            TS     RUPTREG2        ADVANCE POINTER IN QPRET.
 0506            INDEX  A
 0507            XCH    QPRET           PICK UP MARK SLOT-POINTER.
 0508            AD     SIX
 0509            TS     RUPTREG1
 0510            AD     ONE
 0511            INDEX  RUPTREG2
 0512            TS     QPRET
 0513  2         CAF    SIX             LOOP SEVEN TIMES.
 0514   READLOOP TS     RUPTREG2
 0515            INDEX  A
 0516            CS     RUPTSTOR
 0517            INDEX  RUPTREG1
 0518            TS     0
 0519            CCS    RUPTREG1        ADDRESS NEXT LOCATION IN VAC.
 0520            TS     RUPTREG1
 0521            CCS    RUPTREG2
 0522  2         TC     READLOOP
 0523            CAF    HI5             IF ALL REQUESTED MARKS MADE, CHANGE
 0524            MASK   MARKSTAT        DSKY TO VERB 50 FLASHING.
 0525            CCS    A
 0526            TC     RESUME
 0527            CAF    PRIO32
 0528            TC     NOVAC
 0529            CADR   MKVB50
 0530  8         TC     RESUME          DONE.
 0531   MKREJECT CCS    MARKSTAT        SEE IF MARKS BEING ACCEPTED.
 0532            TC     REJECT2
 0533            TC     ALARM           CURSE IF NOT.
 0534            OCT    00107
 0535  2         TC     TASKOVER        (UNTIL MK ACCEPT BUTTON AVAILABLE).
 0536   REJECT2  CS     BIT10           SEE IF MARK HAD BEEN MADE SINCE LAST
 0537            MASK   MARKSTAT        MARK REJECT, AND SET BIT 10 TO ZERO TO
 0538            XCH    MARKSTAT        SHOW MARK REJECT.
 0539            MASK   BIT10
 0540            CCS    A
 0541  2         TC     REJECT3
 0542            TC     ALARM           DONT ACCEPT TWO MARK REJECTS TOGETHER.
 0543            OCT    00110
 0544  2         TC     TASKOVER        (UNTIL MK REJECT BUTTON AVAILABLE).
 0545   REJECT3  CAF    LOW9            DECREMENT POINTER TO REJECT MARK.
 0546            MASK   MARKSTAT
 0547            TS     ITEMP1
 0548            CS     SEVEN
 0549            INDEX  ITEMP1
 0550            AD     QPRET
 0551            INDEX  ITEMP1
 0552  2         TS     QPRET           NEW POINTER.
 0553            CAF    BIT12           INCREMENT MARKS-TO-BE-ACCEPTED FIELD
 0554            AD     MARKSTAT        AND IF FIELD IS NOW NON-ZERO, CHANGE
 0555            XCH    MARKSTAT        DSKY TO VERB 51 FLASHING TO INDICATE
 0556            MASK   HI5             MORE MARKS REQUIRED.
 0557            CCS    A
 0558            TC     TASKOVER        (UNTIL BUTTON AVAIL.)
 0559            CAF    PRIO32
 0560            TC     NOVAC
 0561            CADR   REMKVB51
 0562  8         TC     TASKOVER
 0563   MARKDISP TC     GRABDSP         SPECIAL JOB TO DISPLAY UNCALLED-FOR MARK
 0564  2         TC     PREGBSY
 0565   REMKDSP  CS     MPAC            THE MPAC REGISTERS CONTIN -OPTX, -OPTY,
 0566            TS     DSPTEM1
 0567            CS     MPAC +1
 0568            TS     DSPTEM1 +1
 0569            CS     MPAC +2
 0570            TS     DSPTEM2
 0571            CAF    ZERO
 0572  2         TS     DSPTEM1 +2
 0573            CAF    MKDSPCOD        NOUN-VERB FOR MARK DISPLAY.
 0574            TC     NVSUB
 0575  2         TC     MKDSPBSY        IF BUSY.
 0576  2ENDMKDSP TC     FREEDSP
 0577  2         TC     ENDOFJOB
 0578   MKDSPBSY CAF    LREMKDSP        TAKE DATA OUT OF MPAC WHEN RE-AWAKENED.
 0579  2         TC     NVSUBUSY
 0580   MKDSPCOD OCT    00656
 0581  2LREMKDSP CADR   REMKDSP
 0582   KEYCALL  TC     POSTJUMP        GO TO KEYBOARD/DISPLAY BANK WITH A
 0583  2         CADR   KEYRUPTC        GO THRU STANDARD LOC.
 0584  274K      OCT    74000
 0585   SCTMARK  EQUALS SXTMARK
P0586  2         KEYBOARD AND DISPLAY ROUTINES FOR MARK PROCEDURES.
R0587  2         FLASH VERB 51 WHEN WAITING FOR MARKS, CHANGING TO VERB 50 FLASH
 0588  9ING WHEN ALL ARE IN.
 0589   MKVB51   CAF    VB51            ASSUME USING PROGRAM HAS GRABBED DSP.
 0590            TC     NVSUB
 0591            TC     PRENVBSY
 0592            TC     BANKCALL
 0593            CADR   FLASHON
 0594            TC     ENDIDLE
 0595            TC     MKVB5X          DONT RESPOND TO PROCEED OR TERMINATE.
 0596  2         TC     MKVB5X
 0597            CAF    OCT76           ON ENTER, SEE IF DATA LOADED INSTEAD.
 0598            MASK   VERBREG
 0599            AD     -OCT50          VERBS 50 AND 51 CAUSE END MARK ROUTINES.
 0600            CCS    A
 0601            TC     MKVB5X          ON DATA LOAD, RE-DISPLAY ORIGINAL VERB.
 0602   -OCT50   OCT    -50
 0603  2         TC     MKVB5X
 0604            CAF    LOW9
 0605            MASK   MARKSTAT
 0606            TS     MARKSTAT        VAC ADR IN MARKSTAT AND NO. MARKS MADE
 0607            COM
 0608            INDEX  MARKSTAT        WILL BE LEFT IN QPRET.
 0609            AD     QPRET
 0610            EXTEND
 0611            MP     BIT12
 0612            AD     ONE
 0613            INDEX  MARKSTAT
 0614  2         TS     QPRET
 0615            INHINT                 GO SERVICE OPTSTALL INTERFACE WITH
 0616            CAF    ONE             USING PROGRAM.
 0617            TC     WAITLIST
 0618            CADR   ENDMARKS
 0619  8         TC     ENDOFJOB
 0620   MKVB5X   CAF    HI5             RE-DISPLAY VERB 51 IF MORE MARKS
 0621            MASK   MARKSTAT        WANTED AND VERB 50 IF ALL IN.
 0622            CCS    A
 0623            CAF    BIT7            (MAKES VERB 51).
 0624            AD     VB50
 0625  2         TC     MKVB51 +1
 0626   ENDMARKS TC     ENDOPT
 0627  2         TC     GOODEND
 0628   VB50     OCT    5000
 0629  2OCT76    OCT    76
R0630  2         ON RECEIPT OF LAST REQUESTED MARK, DISPLAY VERB 50 (STILL FLASH
 0631  9ING).
 0632   MKVB50   CAF    VB50
 0633            TS     NVTEMP          SPECIAL ENTRY TO NVSUB WHICH AVOIDS BUSY
 0634            TC     NVSUB +5        TEST.
 0635   VB51     OCT    5100
 0636  2         TC     ENDOFJOB
R0637  2         IF THE ABOVE IS REJECTED, REVERT TO VERB 51.
 0638   REMKVB51 CAF    VB51
 0639            TC     MKVB50 +1
P0640            THE FOLLOWING ROUTINE ALLOWS INTERLOCKING OF IMU COMPENSATION A
 0641  9ND CERTAIN IMU MODE CHANGES WHICH ARE
R0642  2MEANINGFUL AFTER THE IMU HAS BEEN ALIGNED. THESE INCLUDE IMUFINNW, IMUAT
 0643  9TC, AND IMUREENT.
 0644   TSTIMACT INHINT                 TEST IMU ACTIVITY BIT TO SEE IF GYROS
 0645            XCH    Q
 0646            TS     MPAC +2
 0647            CS     BIT11           BEING TORQUED NOW.
 0648            MASK   FLAGWRD1
 0649            AD     BIT11
 0650            XCH    FLAGWRD1
 0651            MASK   BIT11
 0652            CCS    A
 0653            TC     +2              IMU BUSY.
 0654  2         TC     MPAC +2         CHANNEL AVAILABLE - PROCEED AS USUAL.
 0655            XCH    BANKTEM         PUT THE JOB TO SLEEP FOR MAX TIME IT
 0656            TS     MPAC            SHOULD TAKE TO COMPENSATE.
 0657            XCH    TEMQS
 0658            TS     MPAC +1
 0659            CAF    320MS
 0660            TC     WAITLIST
 0661            CADR   IMACT2
 0662            CAF    LIMUACTW
 0663  2         TC     JOBSLEEP
R0664  2         WAKE UP THE JOB AND SET THE ACTIVITY FLAG.
 0665   IMACT2   CAF    LIMUACTW
 0666            TC     JOBWAKE
 0667            TC     FLAG1UP
 0668            OCT    02000
 0669  2         TC     TASKOVER
 0670  2LIMUACTW CADR   IMUACTW
 0671   IMUACTW  INHINT
 0672            XCH    MPAC            PROCEED WITH MODE SWITCH.
 0673            TS     BANKTEM
 0674            XCH    MPAC +1
 0675            TS     TEMQS
 0676            TC     MPAC +2
L      2IMU COMPENSATION PACKAGE
R0001            THE FOLLWOING ROUTINE IS DESIGNED TO COMPENSATE FOR PIPA BIAS A
 0002  9ND SCALE FACTOR ERROR. AT THE SAME TIME,
R0003   IT ACCUMULATES GYRO TORQUE COMMANDS NECESSARY TO COMPENSATE FOR THE ASSO
 0004  9CIATED BIAS AND ACCELERATION-CAUSED GYRO
R0005   DRIFTS. THIS ROUTINE EXPECTS TO FIND PIPA READINGS IN THE MAJOR PARTS OF
 0006  9 DELV (DELVX, DELVY, DELVZ), WITH THE
R0007   MINOR PARTS IRRELEVANT. OUTPUT FROM 1/PIPA IS DOUBLE PRECISION COMPENSAT
 0008  9ED DATA, THE MINOR PART OF WHICH USUALLY
R0009   CONTAINS ALL THE COMPENSATION. 1/PIPA MUST BE CALLED AT LEAST EVERY 2.56
 0010  9 SECONDS, DUE TO SCALING CONSIDERATIONS.
R0011  2SPECIFICALLY, THE CORRECTION IS:
R0012            PIPA  = PIPA (1 + SCALE FACTOR ERROR) - BIAS DELTAT
R0013  2             C       I
R0014   WHERE PIPA  IS THE COMPENSATED DATA OBTAINED FROM THE SAMPLED PIPA .
R0015  4          C                                                       I
 0016            BANK   14
 0017   1/PIPA   CAF    FOUR            LOOP TO PROCESS INPUT PIPA DATA.
 0018    +1      TS     BUF +2
 0019            INDEX  A
 0020            CS     DELVX           SAMPLED PIPA INTO MPAC
 0021            TS     MPAC
 0022            INDEX  BUF +2          SUBTRACT BIAS TERM (LESS THAN 1 BIT).
 0023            CS     PIPABIAS
 0024            EXTEND
 0025            MP     1/PIPADT        SUPPLIED BY USER SCALED AT CS 2(-8).
 0026  2         TS     MPAC +1
 0027            CS     MPAC            SHIFT THE PIPA READING LEFT THREE PLACES
 0028            TS     MPAC
 0029            EXTEND                 IN PREPARATION FOR SCALE FACTOR
 0030            MP     BIT4            CORRECTION. IF IT OVERFLOWS, SHIFT THE
 0031            CCS    A               SCALE FACTOR ERROR RIGHT 11 PLACES
 0032  2         TC     PIPOVF          TAKING A LOSS IN PRECISION.
 0033            TC     +2              THE ABOVE HAPPENS AT DELTA VS OF OVER
 0034            TC     PIPOVF          12 G-SECS., RESULTING IN A SCALE FACTOR
 0035            INDEX  BUF +2          CORRECTION GOOD ONLY TO 60 PPM.
 0036            CS     PIPASCF
 00365           COM
 0037            EXTEND
 0038            MP     LP
 0039            AD     MPAC +1         ADD TO BIAS CORRECTION.
 0040            INDEX  BUF +2
 0041            TS     DELVX +1        AND MAYBE SKIP.
 0042  2         CAF    ZERO
 0043            AD     MPAC
 0044            INDEX  BUF +2
 0045  2         TS     DELVX
 0046   PIPJUMP  CCS    BUF +2          LOOP TO PROCESS NEXT COMPONENT.
 0047            AD     NEG1
 0048            TC     1/PIPA +1
 0049   LGCOMP   ADRES  GCOMP
P0050            THE FOLLOWING ROUTINE COMPUTES THE GYRO TORQUES NECESSARY TO CO
 0051  9MPENSATE FOR THE ACCELERATION-SENSITIVE
R0052  2DRIFTS DUE TO THE DATA JUST PROCESSED, AND SUMS THEM INTO THE GCOMP REGI
 0053  9STERS.
 0054            TS     GCOMPSW         SET GYRO TORQUE INDICATOR TO ZERO.
 0055  2         TS     BUF             RELATIVE ADDRESS OF PRESENT COMPONENT.
 0056            CS     DELVX           PROCESS X COMPONENT.
 0057            TS     MPAC
 0058            CS     DELVX +1
 0059            TS     MPAC +1
 0060            CS     ADIAX
 0061  2         TC     GCOMPSUB -1
 0062            CS     DELVY
 0063            TS     MPAC
 0064            CS     DELVY +1
 0065            TS     MPAC +1
 0066            CS     ADSRAX
 0067  2         TC     GCOMPSUB
 0068            CS     GBIASX          ADD IN BIAS DRIFTS.
 0069  2         TC     DRIFTSUB
 0070            CS     DELVY           COMPUTE Y GYRO COMPENSATION.
 0071            TS     MPAC
 0072            CS     DELVY +1
 0073            TS     MPAC +1
 0074            CS     ADIAY
 0075  2         TC     GCOMPSUB -1
 0076            CS     DELVZ
 0077            TS     MPAC
 0078            CS     DELVZ +1
 0079            TS     MPAC +1
 0080            CS     ADSRAY
 0081  2         TC     GCOMPSUB
 0082            CS     GBIASY
 0083  8         TC     DRIFTSUB
 0084            CS     DELVY           CORRESPONDING PATTERN FOR Z GYRO.
 0085            TS     MPAC
 0086            CS     DELVY +1
 0087            TS     MPAC +1
 0088            CS     ADSRAZ
 0089  2         TC     GCOMPSUB -1
 0090            CS     DELVZ
 0091            TS     MPAC
 0092            CS     DELVZ +1
 0093            TS     MPAC +1
 0094            CS     ADIAZ
 0095  2         TC     GCOMPSUB -1
 0096            CS     GBIASZ
 0097  2         TC     DRIFTSUB
 0098            CCS    GCOMPSW         NON-ZERO IF TIME TO PUT OUT COMPENSATION
 0099            TC     +2
 0100  2         TC     SWRETURN        TORQUES NOT BIG ENOUGH YET.
 0101            INHINT
 0102            CAF    PRIO35          REQUEST COMPENSATION JOB
 0103            TC     NOVAC
 0104  2         CADR   1/GYRO
 0105            TC     MODEEXIT        RELINT AND RETURN TO SWRETURN.
P0106  2         SUBROUTINES USED TO ACCUMULATE GYRO COMPENSATION COMMANDS.
 0107    -1      COM                    (ENTERS HERE TO RE-COMPLEMENT INPUT).
 0108   GCOMPSUB XCH    MPAC +1         DOES DP BY SINGLE MULTIPLY WITH DP ADD
 0109            EXTEND                 TO STORAGE.
 0110            MP     MPAC +1
 0111            XCH    MPAC +1
 0112            EXTEND
 0113            MP     MPAC
 0114            TS     OVCTR
 0115            XCH    LP
 0116  2         AD     MPAC +1         (AND MAYBE INCREMENT OVCTR).
 0117   BIASCOMP INDEX  BUF             BIAS COMPENSATION ENTERS HERE.
 0118            AD     GCOMP +1
 0119            INDEX  BUF
 0120            XCH    GCOMP +1
 0121            XCH    OVCTR
 0122            INDEX  BUF
 0123            AD     GCOMP
 0124            INDEX  BUF
 0125  2         TS     GCOMP
 0126            TC     Q
P0127            SUBROUTINE WHICH ADDS IN GYRO BIAS DRIFT, TESTS TORQUE SIZE TO
 0128  9SEE IF COMMANDS SHOULD BE PUT OUT, AND
R0129  2ADVANCES GCOMP POINTER.
 0130   DRIFTSUB XCH    Q
 0131            TS     BUF +1
 0132            XCH    Q
 0133            EXTEND
 0134            MP     1/PIPADT
 0135            EXTEND                 RESULT WAS IN GYRO PULSES X 2(+2).
 0136            MP     FOUR            RE-SCALE TO ADD INTO GCOMP REGISTER.
 0137            TS     OVCTR
 0138            XCH    LP              GO TO STANDARD INCREMENT ROUTINE.
 0139  2DRFTSUB2 TC     BIASCOMP
 0140            CAF    TWO             INCREMENT POINTER AND
 0141            AD     BUF
 0142            XCH    BUF             CHECK MAGNITUDE OF TORQUE COMMAND. IF
 0143            INDEX  A               SUFFICIENTLY LARGE, SET GCOMPSW PNZ TO
 0144            CCS    GCOMP           CALL FOR COMPENSATION JOB, 1/GYRO.
 0145            TC     +2              GETS DABS OF COMMAND.
 0146  2         TC     BUF +1
 0147            MASK   COMPCHK
 0148            CCS    A
 0149            TS     GCOMPSW
 0150            TC     BUF +1          RETURN.
P0151  2         (1/PIPA COMES HERE IF PIPA COUNTER SHOWED A DELTA V OF OVER 12
 0152  9G-SEC.)
 0153   PIPOVF   INDEX  BUF +2          SHIFT THE SCALE FACTOR RIGHT 11 ON OVF.
 0154            CS     PIPASCF
 01545           COM
 0155            EXTEND
 0156            MP     BIT4
 0157            EXTEND                 FORM DP INCREMENT TO DELV IN THIS CASE.
 0158            MP     MPAC
 0159  2         TS     OVCTR
 0160            XCH    LP
 0161            AD     MPAC +1         MAYBE INCREMENTING OVCTR.
 0162            INDEX  BUF +2
 0163            XCH    DELVX +1        NO SKIP SINCE OVCTR SET.
 0164            XCH    OVCTR
 0165            AD     MPAC
 0166            INDEX  BUF +2
 0167            XCH    DELVX
 0168            TC     PIPJUMP         JUMP ON LOOP COUNTER.
P0169  2         THE FOLLOWING JOB IS INITIATED BY 1/PIPA TO PUT OUT COMPENSATIN
 0170  9G GYRO TORQUE COMMANDS.
 0171   1/GYRO   CAF    BIT11           IF MODE SWITCH IN PROGRESS, DONT PUT
 01711           MASK   FLAGWRD1        OUT COMPENSATION THIS TIME.
 01712           CCS    A
 01713 2         TC     ENDOFJOB
 01714           TC     FLAG1UP         SHOW IMU ACTIVITY
 01715 2         OCT    02000           FLAG TURNED OFF BY GYRO ROUTINES.
 0173            CAF    LGCOMP          DISABLE THE T4RUPT CDU DRIVE THEMSELVES.
 0174            TC     BANKCALL
 0175  2         CADR   GYROSPNT        NO TWITCH (2+2-) ON ZERO INPUT.
 0176            TC     BANKCALL
 0177            CADR   IMUSTALL
 0178  2         TC     CURTAINS
 0181            CAF    ZERO            ZERO GCOMP REGSITERS SINCE COMMANDS HAVE
 0182            TS     GCOMP           BEEN PUT OUT.
 0183            TS     GCOMP +2
 0184  2         TS     GCOMP +4
 0185  2         TC     ENDOFJOB
 0186   COMPCHK  OCT    -37             COMMANDS MUST BE AT LEAST 32 PLS.
P0187            THE FOLLOWING ROUTINE SUPPLIES GYRO DRIFT COMPENSATION DURING T
 0188  9HOSE PORTIONS OF A MISSION WHICH DO NOT
R0189  2USE PIPA DATA. THIS JOB IS CALLED EVERY 81.93 SECONDS (WHEN APPROPRIATE)
 0190  9 BY THE IDLE TASK.
 0191   BIASONLY CS     TIME1           COMPUTE TIME DIFFERENCE (ALMOST ALWAYS
 0192            COM                    81.93 SECS.).
 0193            XCH    OLDBT1
 0194            COM
 0195            AD     OLDBT1
 0196   BONLY2   CCS    A               LASTBIAS ENTERS HERE.
 0197            AD     ONE
 0198            TC     BONLY3
 0199            TC     +2
 0200  2         TC     ENDOFJOB        MAY HAVE A COMPUTED DIFF = 0.
 0201            COM
 0202  2         AD     POSMAX
 0203   BONLY3   EXTEND                 FORM DELTA-T AT 2(+8) CS.
 0204            MP     BIT9            SHIFT RIGHT 6.
 0205            TS     MPAC
 0206            TS     TEM9
 0207            XCH    LP
 0208            TS     MPAC +1
 0209            TS     TEM10
 0210            CAF    ZERO
 0211            TS     GCOMPSW
 0212  2         TS     BUF
 0213            CS     GBIASX          DO X, Y, AND THEN Z.
 0214  2         TC     FBIASSUB
 0215            CS     TEM9            RELOAD DT.
 0216            TS     MPAC
 0217            CS     TEM10
 0218            TS     MPAC +1
 0219            CS     GBIASY
 0220  2         TC     FBIASSUB -1
 0221            CS     TEM9
 0222            TS     MPAC
 0223            CS     TEM10
 0224            TS     MPAC +1
 0225            CS     GBIASZ
 0226  8         TC     FBIASSUB -1
 0227            CCS    GCOMPSW         PUT OUT COMPENSATION IF CALLED FOR.
 0228            TC     1/GYRO
 0229  2         TC     ENDOFJOB
 0230    -1      COM
 0231   FBIASSUB XCH    Q
 0232            TS     BUF +1
 0233            CAF    ZERO
 0234            TS     MPAC +2
 0235            XCH    Q
 0236            TC     SHORTMP
 0237            XCH    MPAC
 0238            TS     OVCTR
 0239            XCH    MPAC +1
 0240  2         TC     DRFTSUB2        RETURN TO CALLER VIA BUF +1.
 0241   LASTBIAS XCH    OLDBT1          COMES HERE FOR TRANSITION TO PIPA READ-
 0242            COM                    ING MODE. NEW VALUE OF 1/PIPADT ARRIVES
 0243            AD     MPAC            IN A WITH WITH TIME1 AT PIPA ZEROING IN
 0244            TC     BONLY2          MPAC. EXITS VIA ENDOFJOB.
L      2IRIG PULSE-TORQUING ROUTINES
R0001  2         THE FOLLOWING PULSE-TORQUING OPTIONS ARE AVAILABLE:
R0002            GYROSPNT               SINGLE PRECISION INPUTS WITH NO TWITCH (
 0003  9IE ZERO OUTPUT ON ZERO COMMAND).
R0004            GYROSPTW               SINGLE PRECISION INPUT WITH TWITCH ON ZE
 0005  9RO (2+ THEN 2-).
R0006  2         GYRODPNT               DOUBLE PRECISION INPUTS (SIGN AGREEMENT
 0007  9UNNECESSARY) WITH NO TWITCH.
R0008  4ALL OF THE ABOVE SHOULD BE FOLLOWED EVENTUALLY BY A CALL TO IMUSTALL.
 0009            BANK   14
 0010   GYROSPNT TS     MPAC            ADDRESS OF THREE REGISTER COMMAND SET
 0011            CCS    LGYRO           ARRIVES IN A. SEE IF GYRO ROUTINES BUSY.
 0012  2         TC     GYROBUSY        (AND RETURN WHEN AVAILABLE.)
 0013   SPNT     CAF    TWO             SET UP LOOP TO AUGMENT (+ OR -) EACH
 0014            TS     MPAC +1         COMMAND BY TWO IF NON-ZERO.
 0015            DOUBLE
 0016            AD     MPAC
 0017            TS     BUF
 0018            INDEX  A
 0019            CCS    0
 0020            CAF    TWO
 0021            TC     +2              (NO INCREMENT IF +-0).
 0022            CS     TWO
 0023            INDEX  BUF
 0024            AD     0
 0025            INDEX  BUF
 0026  2         XCH    0               (JUST TO BE SAFE).
 0027            CCS    MPAC +1
 0028  2         TC     SPNT +1
 0029   SPGYREX  INHINT
 0030            CAF    ONE
 0031            TC     WAITLIST
 0032  2         CADR   DOGYROSP
 0033   GYROEX2  CS     THREE           INITIALIZE CDUIND TO START GYRO TASKS
 0034            TS     CDUIND          AT Y GYRO (ORDER IS YZX).
 0035            CS     FOUR
 0036            AD     MPAC            SET LGYROD PNZ TO INDICATE GYRO ACTIVITY
 0037            TS     LGYRO           AND USE LGYRO TO STORE THE ADDRESS OFF
 0038            TC     MODEEXIT        THE COMMANDS.
P0039  2         SINGLE PRECISION WITH TWITCH.
 0040   GYROSPTW TS     MPAC
 0041            CCS    LGYRO           SAME PROLOGUE AS GYROSPNT
 0042  2         TC     GYROBUSY
 0043   SPTW     CAF    TWO             SET UP LOOP TO AUGMENT BY 2 (+ OR-),
 0044            TS     MPAC +1         WITH A PLUS TWO AUGMENT ON +-0.
 0045            DOUBLE
 0046            AD     MPAC
 0047            TS     BUF
 0048            INDEX  A
 0049            CCS    0
 0050            TC     +3
 0051            TC     +2
 0052  2         TC     +3
 0053            CAF    TWO
 0054  2         TC     +2
 0055    +3      CS     TWO
 0056            INDEX  BUF
 0057            AD     0
 0058            INDEX  BUF
 0059  2         XCH    0
 0060            CCS    MPAC +1
 0061  2         TC     SPTW +1
 0062            TC     SPGYREX         SET UP PULSE-TORQUING TASKS.
P0063  2         DOUBLE PRECISION INPUTS WITH NO TWITCH ON ZERO.
 0064   GYRODPNT TS     ARETURN         SAVE ADDRESS OF INPUT COMMANDS.
 0065            TC     MAKECADR        SAVE RETURN ADDRESS SINCE WE MUST
 0066            XCH    ADDRWD          DO A BANKCALL TO TPAGREE.
 0067            TS     TEM11
 0068            CAF    ZERO
 0069            TS     MPAC +2
 0070  2DPNT     CAF    TWO
 0071            TS     BUF             THIS LOOP FORCES SIGN AGREEMENT IN THE
 0072            DOUBLE                 DP INPUT COMMANDS, AUGMENTING ON
 0073            AD     ARETURN         NON-ZERO.
 0074            TS     BUF +1
 0075            INDEX  A
 0076            XCH    0
 0077            TS     MPAC
 0078            INDEX  BUF +1
 0079            XCH    1
 0080            TS     MPAC +1
 0081            TC     BANKCALL
 0082  2         CADR   TPAGREE
 0083            CCS    A               AUGMENT BY TWO IF NON-ZERO. TPAGREE
 0084            CAF    TWO             RETURNS +1,-0,-1.
 0085            AD     TWO
 0086  2         AD     NEG2
 0087            AD     MPAC +1         DIVIDE BY POSMAX - IE PLACE IN THE MAJOR
 0088            AD     MPAC            PART OF EACH COMMAND THE NUMBER OF
 0089            INDEX  BUF +1          POSMAX PULSE TRAINS TO BE PUT OUT,
 0090            TS     1               LEAVING THE REMAINDER IN THE MINOR PART.
 0091  2         TC     +8D
 0092            TS     Q               ON OVERFLOW, ADD +-1 TO THE MINOR PART
 0093            INDEX  BUF +1          AS WELL AS THE MAJOR PART.
 0094            AD     1
 0095            INDEX  BUF +1          NO OVERFLOW HERE.
 0096            TS     1
 0097            XCH    Q
 0098  2         TC     +2
 0099    +8D     CAF    ZERO
 0100            AD     MPAC
 0101            INDEX  BUF +1
 0102  8         XCH    0
 0103            CCS    BUF
 0104  2         TC     DPNT +1
 0105            XCH    ARETURN         PREPARE FOR POSSIBLE GYROBUSY CALL.
 0106            TS     MPAC
 0107            CCS    LGYRO
 0108  2         TC     GYROBSY2
 0109            CAF    BANKMASK
 0110            MASK   TEM11
 0111            TS     BANKTEM
 0112            CAF    LOW10
 0113            MASK   TEM11
 0114            AD     6K
 0115            TS     TEMQS
 0116            INHINT
 0117            CAF    ONE
 0118            TC     WAITLIST
 0119  2         CADR   DOGYRO
 0120            TC     GYROEX2
P0121  2         GYRO STALLING ROUTINES - CALLED VERY RARELY BY AT MOST ONE ROUT
 0122  9INE AT A TIME.
 0123   GYROBUSY XCH    Q               RETURN ADDRESS TO MPAC.
 0124  2         TS     MPAC +2
 0125            TC     MAKECADR        CALLERS RETURN CADR TO MPAC +1.
 0126            XCH    ADDRWD
 0127            TS     MPAC +1
 0128   REGSLEEP CAF    CADRNEWG
 0129  2         TC     JOBSLEEP        AT STANDARD LOCATION.
 0130   NEWGYRO  CCS    LGYRO           SEE IF ROUTINES STILL AVAILABLE (SHOULD
 0131  2         TC     REGSLEEP        BE). IF NOT, WAIT SOME MORE.
 0132            XCH    MPAC +1         RESTORE RETURN CADR TO STANDARD SWCALL
 0133            TS     BANKTEM         (BANKCALL) FORM.
 0134            MASK   LOW10
 0135            AD     6K
 0136            TS     TEMQS
 0137  2         TC     MPAC +2
 0138   GYROBSY2 XCH    Q               DP WAIT.
 0139            TS     MPAC +2
 0140            XCH    TEM11
 0141  2         TC     REGSLEEP -1
 0142   CADRNEWG CADR   NEWGYRO
P0144  2         TASKS FOR SENDING OUT SINGLE PRECISION COMMANDS.
 0145            BANK   10
 0146   DOGYROSP TC     SETUPSUB        COMMON INITIALIZATION SUBROUTINE.
 0147            INDEX  RUPTREG3
 0148            CCS    0               PUT OUT NEXT COMMAND.
 0149            TC     POSGOUTS
 0150            TC     GYROADVS        NO COMMAND IF +-0.
 0151  2         TC     NEGGOUTS
 0152   GYROADVS CS     CDUIND          ADVANCE TO NEXT GYRO IN ORDER YZX.
 0153            INDEX  A
 0154            TC     -1
 0155            TC     ENDGYRO
 0156            CAF    SIX
 0157            AD     NEG2
 0158            COM
 0159            TS     CDUIND
 0160  2         TC     DOGYROSP
 0161   POSGOUTS AD     ONE
 0162            TS     OVCTR
 0163            TC     OUT2SUB         PUT OUT COMMAND, SAVING COMMAND FOR
 0164            TC     GETDT           DT COMPUTATION.
 0165            XCH    LPRUPT
 0166            TC     WAITLIST
 0167            CADR   TWEAKSP         PUT OUT 2- WHEN COMMAND IS OUT.
 0168  2         TC     TASKOVER        ALL FOR NOW.
 0169   TWEAKSP  TC     SETUPSUB        INITIALIZE.
 0170            CS     TWO             PUT OUT 2- AND ADVANCE TO NEXT GYRO.
 0171            TC     OUT2SUB
 0172  2         TC     GYROADVS
 0173   NEGGOUTS AD     ONE             GET ABS OF COMMAND AND SAVE IN OVCTR.
 0174  2         TS     OVCTR
 0175            CAF    TWO             PUT OUT 2+ BEFORE NEGATIVE PULSE TRAIN.
 0176            TC     OUT2SUB
 0177  2         TC     GETDT           COMPUTE WAITLIST DELTA T.
 0178            CAF    SEVEN           PUT IN A DELAY TO ALLOW 2+ PULSES
 0179            CCS    A               ENOUGH TIME TO GET OUT (3 PULSE TIMES).
 0180  2         TC     -1
 0181            CS     OVCTR           PUT OUT NEGATIVE COMMAND.
 0182  2         TC     OUT2SUB
 0183            XCH    LPRUPT          CALL WAITLIST FOR TASK DUE WHEN PULSE
 0184            TC     WAITLIST        TRAIN COMPLETE.
 0185            CADR   GYROADVS
 0186            TC     TASKOVER
P0187  2         WAITLIST TASKS TO SEND OUT DP PULSE TRAINS TO THE GYROS.
 0188   TWEAKGY  TC     SETUPSUB        FINISHED WITH POSITIVE TRAINS TO A GYRO.
 0189            CS     TWO              SEND OUT 2- TO LEAVE GYRO IN - STATE.
 0190  2         TC     OUT2SUB
 0191   GYROADV  CS     CDUIND          ADVANCE TO THE NEXT GYRO IN ORDER YZX.
 0192            MASK   LOW7            BIT 14 IS 1 IF 2+ PULSES HAD BEEN SENT
 0193            INDEX  A                BEFORE A NEGATIVE COMMAND.
 0194            TC     -1
 0195            TC     ENDGYRO1
 0196            CAF    SIX
 0197            AD     NEG2            (CAME HERE FROM TC WITH C(A)=4.)
 0198            COM
 0199  2         TS     CDUIND
 0200   DOGYRO   TC     SETUPSUB        SERVICE GYRO WHOSE *NUMBER* IS IN CDUIND
 0201            INDEX  RUPTREG3
 0202            CCS    0               MAJOR PART IS POSMAX COUNT.
 0203            TC     DOPOSMAX        PUT OUT POSMAX.
 0204            TC     DOMINOR
 0205  2         TC     DONEGMAX
 0206   DOMINOR  INDEX  RUPTREG3        SEND OUT REMAINDER OF COMMAND.
 0207            CCS    1
 0208            TC     POSGOUT
 0209            TC     TWEAKGY +1      FINISHED WITH LONG + PULSE TRAIN.
 0210            TC     NEGGOUT
 0211  2         TC     GYROADV         DONE WITH LONG - TRAIN OR ZERO INPUT.
 0212   DOPOSMAX INDEX  RUPTREG3        PUT AWAY DECREMENTED POSMAX COUNT.
 0213            TS     0
 0214            CAF    POSMAX
 0215   DOMAX    TC     OUT2SUB
 0216  2         CAF    FULLDT
 0217   GYROWAIT TC     WAITLIST
 0218            CADR   DOGYRO
 0219  8         TC     TASKOVER
 0220   DONEGMAX COM
 0221            INDEX  RUPTREG3
 0222            TS     0               DECREMENTED POSMAX (NEGMAX) COUNT.
 0223            CS     CDUIND          SEE IF 2+ PULSES HAVE BEEN PUT OUT YET,
 0224            MASK   NEG1/2           LEAVING WORD THAT THEY WILL BE OUT
 0225            AD     BIT14            BY TASKOVER TIME.
 0226            COM
 0227            XCH    CDUIND
 0228            MASK   BIT14
 0229            CCS    A
 0230            TC     +2
 0231  2         TC     NEGMAX2         ALREADY OUT.
 0232            CAF    TWO             NOT OUT YET - DO SO.
 0233            TC     OUT2SUB
 0234            CAF    TWO             WAIT FOR THEM TO GET OUT BEFORE DELIVER-
 0235            CCS    A                ING THE REAL COMMAND.
 0236  2         TC     -1
 0237   NEGMAX2  CS     POSMAX
 0238  2         TC     DOMAX
 0239   POSGOUT  AD     ONE             FRACTIONAL POSITIVE COMMAND.
 0240            TS     OVCTR
 0241            TC     OUT2SUB         DELIVER COMMAND.
 0242            TC     GETDT           GET TIME TO END OF PULSE TRAIN.
 0243            XCH    LPRUPT          (ANSWER LEFT IN LPRUPT).
 0244            TC     WAITLIST
 0245            CADR   TWEAKGY         SUPPLY 2- PULSES AT END.
 0246  2         TC     TASKOVER
 0247   NEGGOUT  AD     ONE             FRACTIONAL NEGATIVE COMMAND.
 0248            TS     OVCTR
 0249            CS     CDUIND          SEE IF 2+ PULSES ALREADY OUT.
 0250            MASK   BIT14
 0251            CCS    A
 0252  2         TC     NEGGOUT2
 0253            CAF    TWO
 0254  2         TC     OUT2SUB
 0255            CAF    SEVEN           ALLOW AT LEAST 3 PULSE TIMES FOR THE 2+
 0256            CCS    A               PULSES TO GET OUT.
 0257  2         TC     -1
 0258   NEGGOUT2 TC     GETDT
 0259            CS     OVCTR           DELIVER COMMAND.
 0260            TC     OUT2SUB
 0261            XCH    LPRUPT          GET WAITLIST DT LEFT BY  GETDT  .
 0262            TC     WAITLIST
 0263            CADR   GYROADV
 0264            TC     TASKOVER
P0265  2         SUBROUTINES USED BY TASKS.
 0266   GETDT    XCH    LP              COMPUTE NUMBER OF 10 MS TICKS IT WILL
 0267            TS     LPRUPT           TAKE THE PULSE TRAIN WHOSE MAGNITUDE IS
 0268            CAF    BIT10            IN OVCTR TO BE DELIVERED AT A RATE OF
 0269            EXTEND                  3200 PPS.
 0270            MP     OVCTR
 0271            AD     TWO             INTERRUPT AND ROUND-OFF UNCERTAINTIES.
 0272            XCH    LPRUPT          LEAVE ANSWER IN LPRUPT.
 0273            EXTEND
 0274            MP     ONE
 0275  4         TC     Q
 0276   SETUPSUB CAF    ZERO            SETS UP MISCELLANEOUS REGISTERS.
 0277            TS     RUPTREG2        USED BY OUT2SUB.
 0278            CS     CDUIND
 0279            MASK   LOW7            KILL 2+ BIT.
 0280            TS     RUPTREG1
 0281            DOUBLE
 0282            AD     LGYRO
 0283            TS     RUPTREG3        USED FOR INDEXING GYROD SET.
 0284  2         TC     Q
 0285   ENDGYRO1 CAF    ONE             SPLIT INTO TWO TASKS SO IT WONT LAST TOO
 0286            TC     WAITLIST        LONG IN ANY ONE INTERRUPT.
 0287            CADR   ENDGYRO
 0288  2         TC     TASKOVER
 0289   ENDGYRO  CAF    ZERO            SHOW THAT THE GYROS ARE NOW AVAILABLE.
 0290  2         TS     LGYRO
 02901           XCH    IN3             RESTORE CDUIND
 02902           XCH    IN3             BY CHECKING IMU MODE
 02903           MASK   OCT122          IMUCOARS, IMUATTC, IMUREENT MASK
 02904           CCS    A
 02905           CS     ZERO            TO +0 IF MODES ACTIVE
 02906           COM                    TO -0 IF INACTIVE
 02907 2         TS     CDUIND
 0291            CAF    LNEWGYRO        WAKE UP ANY JOB WHICH MIGHT BE WAITING
 0292  2         TC     JOBWAKE         FOR THE GYROS (AT MOST ONE).
 0293            TC     POSTJUMP        RETURN TO ENDIMU SEQUENCE IN MAIN MODE
 0294  2         CADR   IMUFINED        BANK (CHECKS IMU AND CDU FAIL SIGNALS).
 0295   LNEWGYRO CADR   NEWGYRO         STANDARD SLEEPING LOCATION FOR GYROBUSY.
 02955  OCT122   OCT    122
 0296   FULLDT   DEC    5.13 E 2
L      2EXTENDED VERBS FOR MODING
R0001   VERB PLEASE PERFORM AND VERB PLEASE MARK ----- FLASH SHOULD BE TURNED ON
R0002   (FLASHON) BY ROUTINE PASTING EITHER UP. FLASH IS TURNED OFF BY ENTER OF
R0003  2PLEASE PERFORM, OR ENTER OF PLEASE MARK.
R0004  2BOTH FLASHON AND FLASHOFF MUST NOT BE USED IN INTERRUPTED STATE.
R0005   PLEASE PERFORM VERB AND PLEASE MARK VERB-----
R0006   PRESSING ENTER INDICATES ACTION REQUESTED HAS
R0007   BEEN PERFORMED, AND DOES SAME RECALL AS A COMPLETED LOAD. OPERATOR
R0008   SHOULD DO VERB PROCEED WITHOUT DATA IF WISHES NOT TO PERFORM THE
R0009  4REQUESTED ACTION.
R0010  2FAN-OUT
 0011  2         SETLOC 12000
 0012   PINTEST  EQUALS                 THIS MUST = 05,6000 FOR PINBALL
A0013                                   VERIFICATION.  DO NOT MOVE WITHOUT
A0014  2                                INFORMING ALAN GREEN.
 0015   LST2FAN  TC     VBZERO          VB40 ZERO(USED WITH NOUN ICDU OR OCDU)
 0016            TC     VBCOARK         VB41 COARSE ALIGN(USED WITH NOUN ICDU
A0017                                              OR OCDU)
 0018            TC     IMUFINEK        VB42 FINE ALIGN IMU
 0019            TC     IMULOCKK        VB43 LOCK IMU
 0020            TC     IMUATTCK        VB44 SET IMU TO ATTITUDE CONTROL
 0021            TC     IMUREENK        VB45 SET IMU TO RE-ENTRY CONTROL
 0022            TC     IMUCORK         VB46 RETURN IMU TO COARSE ALIGN
 0023            TC     ALM/END         VB47 OPTICAL TRACKER ON(NOT IN USE YET)
 0024            TC     GOLOADLV        VB50 PLEASE PERFORM
 0025            TC     GOLOADLV        VB51 PLEASE MARK
 0026            TC     DOMKREJ         VB52 MARK REJECT (UNTIL BUTTON AVAIL.)
 0027            TC     RELO/IK         VV53 FREE  (USED WITH NOUN ICDU OR OCDU)
 0028            TC     TORQGYRS        VB54 PULSE TORQUE GYROS
 0029            TC     ALINTIME        VB55 ALIGN TIME
 0030            TC     GOSHOSUM        VB56 PERFORMS BANKSUM
 0031            TC     SYSTEST         VB57 DO SYSTEM TEST
 0032            TC     PRESTAND        VB60 PREPARE FOR STANDBY
 0033            TC     POSTAND         VB61 RECOVER FROM STANDBY
 0034            NOOP                   ILLEGAL VERB.
 0035            NOOP                   ILLEGAL VERB.
 0036            NOOP                   ILLEGAL VERB.
 0037            NOOP                   ILLEGAL VERB.
 0038            NOOP                   ILLEGAL VERB.
 0039            NOOP                   ILLEGAL VERB.
 0040            TC     ALM/END
 0041            TC     71JUMPTO        VERB 71 IS TFFMIN UPDATE
 0042            TC     ABRTJPTO        VERB 72 ABORTS
 0043            NOOP                   ILLEGAL VERB.
 0044            TC     ALM/END
 0045            TC     EXTRAI/O        VB75 MANUAL INPUT/OUTPUT OPTIONS.
 0046            TC     76JUMPTO        VERB 76 IS STATE VECTOR UPDATE
 0047            TC     POSTJUMP        VERB 77 IS L/O TIME UPDATE
 0048            CADR   77UPDATE
 00481  76JUMPTO TC     POSTJUMP
 00482           CADR   76UPDATE
 00483  71JUMPTO TC     POSTJUMP
 00484           CADR   71UPDATE
 00485  ABRTJPTO TC     POSTJUMP
 00486 2         CADR   ABORTRPT
 0049   TESTXACT CAF    BIT3
 0050            MASK   EXTVBACT
 0051            CCS    A
 0052  2         TC     XACTALM
 0053   XACT1    CS     BIT3
 0054            INHINT
 0055            MASK   EXTVBACT
 0056            AD     BIT3
 0057            TS     EXTVBACT
 0058            RELINT
 0059  2         TC     Q
 0060   XACTALM  TC     FALTON
 0061  2         TC     ENDOFJOB
 0062  2TERMEXTV TC     FREEDSP         IF WE GET A TERMINATE INSTEAD OF A LOAD.
 0063   ENDEXTVB TC     XACT0
 0064  2         TC     ENDOFJOB
 0065   XACT0    CS     BIT3
 0066            INHINT
 0067            MASK   EXTVBACT
 0068            TS     EXTVBACT
 0069            RELINT
 0070  4         TC     Q
 0071   ALM/END  TC     FALTON
 0072  4         TC     ENDEXTVB
 0073   VBZERO   TC     OP/INERT
 0074            TC     IMUZEROK        RETURN HERE IF NOUN = ICDU(20)
 0075            TC     ALM/END         RETURN HERE IF NOUN = OCDU(55)
A0076  2                                        (NOT IN USE YET)
 0077   VBCOARK  TC     OP/INERT
 0078            TC     IMUCOARK        RETURN HERE IF NOUN = ICDU(20)
 0079            TC     OPTCOARK        RETURN HERE IF NOUN = OCDU(55)
P0080  2         SUBROUTINE FOR CHECKING GIVEN NOUN IF APPROPRIATE.
 0081   OP/INERT XCH    Q               RETURNS TO L+1 IF NOUN=ICDU(20)
 0082            TS     WDRET           RETURNS TO L+2 IF NOUN = OCDU(55)
 0083            CS     NNICDU            ALARMS IF ANY OTHER NOUN
 0084            AD     NOUNREG
 0085            CCS    A
 0086            TC     +4              NN G/ 20
 0087   NNICDU   OCT    20
 0088            TC     ALM/END         NN L/ 20
 0089            TC     WDRET           NN = 20
 0090            CS     NNOCDU
 0091            AD     NOUNREG
 0092            CCS    A
 0093            TC     ALM/END         NN G/ 55
 0094   NNOCDU   OCT    55
 0095            TC     ALM/END         NN L/ 55
 0096            INDEX  WDRET           NN = 55
 0097            TC     1
P0098  2KEYBOARD REQUEST TO ZERO IMU ENCODERS
 0099   IMUZEROK TC     TESTXACT        ZERO ENCODERS.
 0100            TC     BANKCALL
 0101  2         CADR   IMUZERO
 0102            TC     BANKCALL        STALL
 0103            CADR   IMUSTALL
 0104  2         TC     +1
 0105   ENDMZERO INHINT
 0106            CS     ZLITBITS        TURN OFF ZEROING LIGHT TO SHOW COMPLETE.
 0107            MASK   DSPTAB +11D
 0108            AD     BIT15
 0109            TS     DSPTAB +11D
 0110            TC     ENDEXTVB
P0111  2KEYBOARD REQUEST TO COARSE ALIGN THE IMU
 0112   IMUCOARK TC     TESTXACT        COARSE ALIGN FROM KEYBOARD.
 0113            TC     GRABDSP
 0114            TC     PREGBSY
 0115            CAF    VNLODCDU        CALL FOR THETAD LOAD
 0116            TC     NVSUB
 0117            TC     PRENVBSY
 0118            TC     ENDIDLE         STALL WAITING FOR THE LOAD
 0119            TC     TERMEXTV
 0120  2         TC     ICSDEL          PROCEED - ASK FOR INCREMENTAL LOAD.
 0121   ICORK2   CAF    IMUCOARV        RE-DISPLAY COARSE ALIGN VERB.
 0122            TC     NVSUB
 0123            TC     PRENVBSY
 0124  2         TC     FREEDSP         RELEASE THE DISPLAYS
 0125            TC     BANKCALL        CALL MODE SWITCHING PROG
 0126  2         CADR   IMUCOARS
 0127            TC     BANKCALL        STALL
 0128            CADR   IMUSTALL
 0129            TC     ENDEXTVB
 0130  2         TC     ENDEXTVB
 0131   VNLODCDU OCT    02522
 0132   IMUCOARV OCT    04100
P0133  2         PROVISION FOR COARSE ALIGN TO INCREMENTAL ANGLES.
 0134   ICSDEL   CAF    DELLOAD
 0135            TC     NVSUB           REQUEST LOAD OF DELTA ICDU ANGLES.
 0136            TC     PRENVBSY
 0137            TC     ENDIDLE
 0138            TC     TERMEXTV
 0139            TC     ICORK2          PROCEED WITHOUT DATA HERE TOO.
 0140            TC     INCLOOP         LOOP TO INCREMENT THETAD FROM DSPTEM2.
 0141  2         TC     ICORK2          RE-DISPLAY COARSE ALIGN VERB.
 0142   INCLOOP  XCH    Q               INCREMENTS THETADS IN 2S COMPLEMENT FROM
 0143            TS     MPAC             THREE ANGLE INCREMENTS IN DSPTEM2S.
 0144            CAF    LTHD+2
 0145            TS     BUF             SET UP FOR CDUINC.
 0146  2         CAF    TWO             THREE TIMES THROUGH.
 0147   INCLOOP2 TS     MPAC +1
 0148            INDEX  A
 0149            XCH    DSPTEM2         INCREMENT TO TEM2 FOR CDUINC.
 0150            TC     BANKCALL
 0151            CADR   CDUINC
 0152            CCS    BUF
 0153            TS     BUF
 0154            CCS    MPAC +1
 0155  2         TC     INCLOOP2
 0156  2         TC     MPAC            RETURN WHEN FINISHED.
 0157   DELLOAD  OCT    02523
 0158   LTHD+2   ADRES  THETAD +2
P0159  2KEYBOARD REQUEST TO FINE ALIGN AND GYRO TORQUE IMU
 0160   IMUFINEK TC     TESTXACT        FINE ALIGN WITH GYRO TORQUING.
 0161            TC     GRABDSP
 0162            TC     PREGBSY
 0163            CAF    VNLODGYR        CALL FOR LOAD OF GYRO COMMANDS
 0164            TC     NVSUB
 0165            TC     PRENVBSY
 0166            TC     ENDIDLE         HOLD UP FOR THE DATA LOAD
 0167            TC     TERMEXTV
 0168  2         TC     +1              PROCEED WITHOUT A LOAD
 0169            CAF    IMUFINEV        RE-DISPLAY OUR OWN VERB
 0170            TC     NVSUB
 0171            TC     PRENVBSY
 0172  2         TC     FREEDSP         RELEASE DISPLAYS
 0173            TC     BANKCALL        CALL MODE SWITCH PROG
 0174  2         CADR   IMUFINE
 0175            TC     BANKCALL        HIBERNATION
 0176            CADR   IMUSTALL
 0177            TC     ENDEXTVB
 0178            CAF    LGYROBIN        PINBALL LEFT COMMANDS IN OGC REGIST5RS
 0179            TC     BANKCALL
 0180  2         CADR   GYRODPNT
 0181            TC     BANKCALL        WAIT FOR PULSES TO GET OUT.
 0182            CADR   IMUSTALL
 0183            TC     ENDEXTVB
 0184  2         TC     ENDEXTVB
 0185   VNLODGYR OCT    02567
 0186   IMUFINEV OCT    04200           FINE ALIGN VERB
P0187  2KEYBOARD REQUEST TO LOCK THE IMU CDUS
 0188   IMULOCKK TC     TESTXACT
 0189            TC     BANKCALL
 0190  2         CADR   IMULOCK
 0191            TC     BANKCALL        STALL
 0192            CADR   IMUSTALL
 0193            TC     ENDEXTVB
 0194            TC     ENDEXTVB
P0195  2KEYBOARD REQUEST TO PUT IMU IN ATTITUDE CONTROL MODE
 0196   IMUATTCK TC     TESTXACT        ATTITUDE CONTROL.
 0197            TC     GRABDSP
 0198            TC     PREGBSY
 0199            CAF    DELLOAD         ASK FOR DELTA ANGLE LOAD.
 0200            TC     NVSUB
 0201            TC     PRENVBSY
 0202            TC     ENDIDLE         STALL WAITING FOR LOAD
 0203            TC     TERMEXTV
 0204            TC     ATTCABS         PROCEED - ASK FOR ABSOLUTE ANGLES.
 0205  2         TC     INCLOOP         ADD INCREMENTS TO DESIRED ANGLES.
 0206   ATTCK2   CAF    IMUATTCV
 0207            TC     NVSUB
 0208            TC     PRENVBSY
 0209  2         TC     FREEDSP         LET THE DISPLAYS GO
 0210            TC     BANKCALL        CALL THE MODE SWITCH PROG
 0211  2         CADR   IMUATTC
 0212            TC     BANKCALL        STALL
 0213            CADR   IMUSTALL
 0214            TC     ENDEXTVB
 0215  2         TC     ENDEXTVB
R0216  2PROVISIONS FOR ABSOLUTE LOAD FOR IMU CDUS IN ATTITUDE CONTROL.
 0217   ATTCABS  CAF    VNLODCDU        ASK FOR ABSOLUTE CDU ANGLES.
 0218            TC     NVSUB
 0219            TC     PRENVBSY
 0220            TC     ENDIDLE
 0221            TC     TERMEXTV
 0222            TC     ATTCK2
 0223  2         TC     ATTCK2          SECOND PROCEED WITHOUT DATA.
 0224   IMUATTCV OCT    04400
P0225  2KEYBOARD REQUEST TO PUT THE IMU IN RE-ENTRY CONTROL MODE
 0226   IMUREENK TC     TESTXACT        RE-ENTRY.
 0227            TC     GRABDSP
 0228            TC     PREGBSY
 0229            CAF    DELLOAD         LOAD INCREMENTAL ANGLES.
 0230            TC     NVSUB
 0231            TC     PRENVBSY
 0232            TC     ENDIDLE         STALL FOR THE LOAD
 0233            TC     TERMEXTV
 0234            TC     REENTABS        PROCEED - ASK FOR ABSOLUTE LOAD.
 0235  2         TC     INCLOOP
 0236   REENTK2  CAF    IMUREENV        RE-DISPLAY VERB.
 0237            TC     NVSUB
 0238            TC     PRENVBSY
 0239  2         TC     FREEDSP         LET THE DISPLAYS GO
 0240            TC     BANKCALL        CALL MODE SWITCH PROG
 0241  2         CADR   IMUREENT
 0242            TC     BANKCALL        STALL
 0243            CADR   IMUSTALL
 0244            TC     ENDEXTVB
 0245  2         TC     ENDEXTVB
 0246   REENTABS CAF    VNLODCDU        REQUEST ABSOLUTE ANGLES.
 0247            TC     NVSUB
 0248            TC     PRENVBSY
 0249            TC     ENDIDLE
 0250            TC     TERMEXTV        TERMINATE
 0251            TC     REENTK2
 0252            TC     REENTK2
 0253   IMUREENV OCT    04500
P0254  2KEYBOARD REQUEST TO RETURN THE IMU TO COARSE ALIGN
 0255   IMUCORK  TC     TESTXACT        BACK TO COARSE ALIGN (FROM FINE).
 0256            TC     BANKCALL
 0257  2         CADR   IMURECOR
 0258            TC     BANKCALL
 0259            CADR   IMUSTALL
 0260            TC     ENDEXTVB
 0261            TC     ENDEXTVB
P0262  2KEYBOARD REQUEST TO ZERO OPTICS CDUS
 0263   OPTZEROK TC     BANKCALL        CALL MODE PROG
 0264  2         CADR   OPTZERO
 0265            TC     BANKCALL        STALL
 0266            CADR   OPTSTALL
 0267            TC     ENDEXTVB
 0268  2         TC     ENDEXTVB
 0269   OPTZERO  =                      INTERFACES NOT CURRENTLY WIRED *********
P0270  2TEMPORARY ROUTINE TO RUN THE OPTICS CDUS FROM THE KEYBOARD
 0271   OPTCOARK TC     GRABDSP         SNATCH THEM DISPLAYS
 0272            TC     PREGBSY
 0273            CAF    VNLDOCDU        VERB-NOUN TO LOAD OPTICS CDUS
 0274            TC     NVSUB
 0275            TC     PRENVBSY
 0276            TC     ENDIDLE         WAIT FOR THE LOAD
 0277            TC     TERMEXTV
 0278  2         TC     +1              PROCEED
 0279            CAF    OPTCOARV        RE-DISPLAY OUR OWN VERB
 0280            TC     NVSUB
 0281            TC     PRENVBSY
 0282  2         TC     FREEDSP         LET IT GO
 0283            CAF    ZERO
 0284  2         TS     OPTIND          SNATCH OPTICS
 0285  2         TC     ENDEXTVB
 0286   VNLDOCDU OCT    02457
 0287   OPTCOARV EQUALS IMUCOARV        DIFFERENT NOUNS.
P0288  2KEYBOARD REQUEST TO ACTIVATE THE OPTICAL STAR TRACKER
 0289   OPTTRONK TC     BANKCALL
 0290  2         CADR   OPTTRKON        CALL MODE SWITCHER
 0291            TC     BANKCALL        STALL
 0292            CADR   OPTSTALL
 0293            TC     ENDEXTVB
 0294  2         TC     ENDEXTVB
 0295  2OPTTRKON =                      NOT AVAILABLE JUST NOW
 0296   DOMKREJ  INHINT                 DO 10 MS WAITLIST CALL TO MK REJECT PROG
 0297            CS     MARKSTAT        MARK REJECT IS ENABLED ONLY IF BIT10
 0298            MASK   BIT10           OF MARKSTAT = 1.
 0299            CCS    A
 0300  2         TC     ALM/END
 0301            CAF    ONE
 0302            TC     WAITLIST
 0303            CADR   MKREJECT        (CALLED IN KEYRUPT WHEN BUTTON AVAIL.)
 0304            CAF    HI5             MARK REJECT ROUTINE WILL RE-PASTE VB51
 0305            MASK   MARKSTAT        IF ALL MARKS WERE IN.
 0306            CCS    A
 0307            TC     +2
 0308  2         TC     ENDOFJOB
 0309            RELINT
 0310            TC     BANKCALL        RE-DISPLAY VB 51 SINCE MORE MARKS
 0311            CADR   FLASHON         REQUIRED.
 0312            TC     POSTJUMP
 0313  2         CADR   REMKVB51
R0314   PLEASE PERFORM VERB AND PLEASE MARK VERB ----- PRESSING ENTER INDICATES
R0315   ACTION REQUESTED HAS BEEN PERFORMED, AND DOES SAME RECALL AS A COMPLETED
R0316   LOAD.  OPERATOR SHOULD DO VB PROCEED WITHOUT DATA IF HE WISHES NOT TO
R0317  2PERFORM THE REQUESTED ACTION.
 0318   GOLOADLV TC     BANKCALL
 0319            CADR   FLASHOFF
 0320            TC     XACT0
 0321            TC     POSTJUMP
 0322            CADR   LOADLV1
P0323  4KEYBOARD REQUEST TO RELEASE IMU OR OPTICS
 0324   RELO/IK  TC     OP/INERT
 0325            TC     IMURELK         RETURN HERE IF IMU
 0326            CS     ZERO            RETURN HERE IF OPTICS
 0327            TS     OPTIND
 0328  2         TC     ENDOFJOB
 0329   IMURELK  CS     ZERO
 0330            TS     CDUIND
 0331            TC     ENDOFJOB
P0332  4KEYBOARD REQUEST TO PULSE TORQUE IRIGA
 0333   TORQGYRS TC     TESTXACT        GYRO TORQUING WITH NO MODE-SWITCH.
 0334            TC     GRABDSP
 0335            TC     PREGBSY
 0336            CAF    VNLODGYR
 0337            TC     NVSUB
 0338            TC     PRENVBSY
 0339            TC     ENDIDLE
 0340            TC     TERMEXTV
 0341            TC     +1
 0342            CAF    TORQGYRV        RE-DISPLAY OUR OWN VERB
 0343            TC     NVSUB
 0344            TC     PRENVBSY
 0345            TC     FREEDSP
 0346            CAF    LGYROBIN
 0347            TC     BANKCALL
 0348            CADR   GYRODPNT
 0349            TC     BANKCALL        WAIT FOR PULSES TO GET OUT.
 0350            CADR   IMUSTALL
 0351            TC     ENDEXTVB
 0352  2         TC     ENDEXTVB
 0353   LGYROBIN ADRES  OGC
 0354   TORQGYRV OCT    05400
P0355   ALIGN TIME
 0356   ALINTIME CAF    VNLODDT         USES NVSUBMON. DOES NOT TEST DSPLOCK.
 0357            TS     NVTEMP          DOES NOT KILL MONITOR.
 0358            TC     NVSUBMON
 0359            TC     ENDOFJOB        IN CASE OF ALARM IN LOAD REQUEST SET UP.
 0360            TC     ENDIDLE
 0361            TC     ENDOFJOB        TERMINATE
 0362            TC     ENDOFJOB        PROCEED WITHOUT DATA
 0363   UPDATIME INHINT                 DELTA TIME IS IN DSPTEM1, +1.
 0364            CAF    ZERO
 0365            TS     MPAC    +2      NEEDED FOR TP AGREE
 0366            XCH    TIME1           LO ORDER TIME
 0367            AD     DSPTEM1 +1
 0368            TS     MPAC    +1
 0369            CAF    ZERO
 0370            AD     DSPTEM1
 0371            AD     TIME2           HI ORDER TIME
 0372            XCH    MPAC
 0373            TC     BANKCALL
 0374            CADR   TPAGREE
 0375            XCH    MPAC
 0376            XCH    TIME2
 0377            XCH    MPAC    +1
 0378            XCH    TIME1
 0379            CCS    A
 0380            TC     +2
 0381            TC     ENDALINE
 0382            CAF    ONE             TIME1 WAS INCREMENTED SINCE PICKUP
 0383            AD     TIME1
 0384            TS     TIME1
 0385            TC     ENDALINE
 0386            AD     TIME2
 0387            XCH    TIME2
 0388   ENDALINE RELINT
 0389  2         TC     ENDOFJOB
 0390   VNLODDT  OCT    02124           V/N FOR LOAD DELTA TIME
P0391  2PREPARE FOR STANDBY OPERATION
R0392   PRESTAND PREPARES FOR STANDBY BY SNAPSHOTTING IN1, TIME1, TIME2 AS SOON
R0393   AS IN1 CHANGES. IT DOES THIS BY CONTIUOUS WAITLIST REQUESTS UNTIL A
R0394  2CHANGE IN IN1 IS DETECTED.
R0395   POSTAND RECOVERS TIME AFTER STANDBY. IT WAITS FOR A CHANGE IN IN1 (JUST
R0396   AS PRESTAND DOES), THEN COMPUTES THE DIFFERENCE BETWEEN IN1 VALUES(FULL
R0397   16 BITS), ADDS THIS TO THE PREVIOUSLY SNAPSHOTTED VALUES OF TIME1, TIME2
R0398  4AND PLACES THIS NEW TIME INTO TIME1, TIME2 COUNTERS.
R0399   BIT1 OF IN1LOSAV = LAST VALUE OF BIT1 OF IN1
 0400   PRESTAND INHINT                 PREPARE TIME FOR STANDBY
 0401            CAF    ONE
 0402            TC     WAITLIST
 0403            CADR   PRESTBY
 0404  2         TC     ENDOFJOB
 0405   PRESTBY  XCH    IN1             CALLED BY WAITLIST
 0406            MASK   BIT1            PUT BIT1 OF IN1 INTO BIT1 OF IN1LOSAV
 0407            TS     LPRUPT
 0408            CS     BIT1
 0409            MASK   IN1LOSAV
 0410            AD     LPRUPT
 0411            TS     IN1LOSAV
A0412                                   CALLED BY WAITLIST EVERY 10 MSEC
 0413   PRESTBY1 XCH    IN1             UNTIL A CHANGE IN IN1 IS DETECTED.
 0414            XCH    Q               PUT ALL 16 BITS OF IN1 INTO Q
 0415            CS     TIME1           SNAPSHOT TIME1
 0416            XCH    TIME1SAV
 0417            CS     TIME2           SNAPSHOT TIME2
 0418            XCH    TIME2SAV
 0419            XCH    Q               PUT ALL 16 BITS OF IN1 INTO A
 0420            TC     IN1LOOK
 0421            TC     PRESTBY2        RETURNS HERE IF NO CHANGE IN IN1
 0422            XCH    IN1HITEM        RETURNS HERE IF IN1 HAS CHANGED
 0423            TS     IN1HISAV
 0424            XCH    IN1LOTEM        DONE WITH BIT1 OF IN1LOSAV, DONT PROTECT
 0425            TS     IN1LOSAV
 0426  2         TC     TASKOVER
 0427   PRESTBY2 CAF    ONE             PERPETUATES WAITLIST REQUEST EVERY
 0428            TC     WAITLIST        10 MSEC UNTIL IN1 CHANGES.
 0429            CADR   PRESTBY1
 0430  8         TC     TASKOVER
R0431   IN1LOOK RETURNS TO L+1 IF IN1 HAS NOT CHANGED SINCE LAST EXAMINATION.
R0432   IT RETURNS TO L+2 IF IN1 HAS CHANGED SINCE LAST EXAMINATION, WITH
R0433   BITS 16-8 OF IN1 IN BITS 9-1 OF IN1HITEM, AND BITS 7-1 OF IN1
R0434  2IN BITS 14-8 OF IN1LOTEM.
 0435   IN1LOOK  TS     IN1LOTEM
 0436            CAF    NEG0
 0437            TS     IN1HITEM        PUT +1 FOR OF, -1 FOR UF, -0 FOR NEITHER
 0438            XCH    Q
 0439            TS     LOOKRET
 0440            CAF    BIT1
 0441            MASK   IN1LOTEM
 0442            TS     LPRUPT          NEW VALUE OF BIT1 OF IN1
 0443            CAF    BIT1
 0444            MASK   IN1LOSAV        LAST VALUE OF BIT1 OF IN1
 0445            EXTEND
 0446            SU     LPRUPT
 0447            CCS    A
 0448            TC     IN1PREP         IN1 HAS CHANGED
 0449            TC     CCSHOLE
 0450            TC     IN1PREP         IN1 HAS CHANGED
 0451            TC     LOOKRET         IN1 HAS NOT CHANGED. RETURN TO L+1.
 0452   IN1PREP  XCH    LP
 0453            TS     LPRUPT          STORE LP
 0454            XCH    IN1LOTEM
 0455            EXTEND
 0456            MP     BIT8            SHIFTS RIGHT 7
 0457            XCH    IN1HITEM        PUTS BITS7-1 OF IN1 INTO BITS 14-8 OF LP
 0458            CCS    A               PUTS BITS14-8 OF IN1 INTO BITS7-1 OF A
 0459            CAF    BIT8            PUTS BIT16 OF IN1 INTO BIT9 OF A
 0460            TC     +2
 0461            CS     BIT8
 0462            AD     IN1HITEM        PUTS BIT15 OF IN1 INTO BIT8 OF A
 0463            MASK   LOW9
 0464            TS     IN1HITEM
 0465            XCH    LP
 0466            MASK   B14-B8          BIT14 THRU BIT8
 0467            TS     IN1LOTEM
 0468            CAF    BIT1
 0469            EXTEND
 0470            MP     LPRUPT          RESTORE LP
 0471            INDEX  LOOKRET
 0472            TC     1               RETURN TO L+2
 0473   B14-B8   OCT    37600
P0474  2RECOVER FROM STANDBY OPERATION
 0475   POSTAND  INHINT                 RECOVER TIME AFTER STANDBY
 0476            CAF    ONE
 0477            TC     WAITLIST
 0478            CADR   POSTBY
 0479  2         TC     ENDOFJOB
 0480   POSTBY   XCH    IN1             CALLED BY WAITLIST
 0481            MASK   BIT1            PUT BIT1 OF IN1 INTO BIT1 OF IN1LOSAV
 0482            TS     LPRUPT
 0483            CS     BIT1
 0484            MASK   IN1LOSAV
 0485            AD     LPRUPT
 0486            TS     IN1LOSAV
A0487                                   CALLED BY WAITLIST EVERY 10 MSEC UNTIL
 0488   POSTBY1  XCH    IN1             A CHANGE IN IN1 IS DETECTED.
 0489            XCH    Q               PUT ALL 16 BITS OF IN1 INTO Q
 0490            CAF    ZERO
 0491            TS     TIME1           ZERO TIME1, TIME2 IN ANTICIPATION
 0492            TS     TIME2           OF UPDATING.
 0493            XCH    Q               PUT ALL 16 BITS OF IN1 INTO A
 0494            TC     IN1LOOK
 0495            TC     POSTBY2         RETURNS HERE IF IN1 HAS NOT CHANGED
 0496            CS     BIT1            RETURNS HERE IF IN1 HAS CHANGED
 0497            MASK   IN1LOSAV        FORM DP DIFFERENCE OF C(IN1) TAKEN AFTER
 0498            COM                    STANDBY MINUS C(IN1) TAKEN BEFORE
 0499            AD     IN1LOTEM        STANDBY. THIS DIFF IS IN THE BITS
 0500            TS     IN1LODIF        CORRESPONDING TO TIME1, TIME2.
 0501            CAF    ZERO
 0502            AD     IN1HITEM
 0503            EXTEND
 0504            SU     IN1HISAV
 0505            CCS    A
 0506            AD     ONE             DIFF IS +
 0507            TC     +2
 0508            TC     DIFFNEG         DIFF IS -NZ, ADD BIT10 TO HI PART
 0509   DIFFCOM  TS     IN1HIDIF
 0510            CAF    PRIO33          GO TO EXEC TO FINISH UP
 0511            TC     NOVAC           GO TO EXEC TO FINISH UP
 0512            CADR   POSTBY3
 0513  2         TC     TASKOVER
 0514   DIFFNEG  AD     ONE
 0515            COM
 0516            AD     BIT10
 0517  2         TC     DIFFCOM
 0518   POSTBY2  CAF    ONE             PERPETUATES WAITLIST REQUEST EVERY
 0519            TC     WAITLIST        10 MSEC UNTIL IN1 CHANGES.
 0520            CADR   POSTBY1
 0521  4         TC     TASKOVER
 0522   POSTBY3  CS     TIME1SAV        CALLED BY EXEC
 0523            AD     IN1LODIF        TIME WAS STORED COMP
 0524            TS     MPAC    +1
 0525            CAF    ZERO
 0526            AD     IN1HIDIF
 0527            EXTEND
 0528            SU     TIME2SAV        TIME WAS STORED COMP
 0529            TS     MPAC
 0530            TC     +1              JUST IN CASE OF OF
 0531            CAF    ZERO            MAKES TPAGREE SAFE FOR DPAGREE
 0532            TS     MPAC    +2
 0533            TC     BANKCALL
 0534            CADR   TPAGREE
 0535            XCH    MPAC    +1
 0536            TS     DSPTEM1 +1
 0537            XCH    MPAC
 0538            TS     DSPTEM1
 0539            TC     UPDATIME
P0540  2         SELECT AND INITIATE DESIRED SYSTEM TEST PROGRAM.
 0541   SYSTEST  TC     GRABDSP         FIXED BY THE PHANTI
 0542            TC     PREGBSY
 0543            CCS    MODREG          MUST NOT BE RUNNING ANYTHING.
 0544  2         TC     XVBOUT
 0545            TC     NEWMODE         FOR SYSTEM TEST.
 0546  2         OCT    07
 0547   REDO     CAF    LQPL            ASK FOR TEST OPTION (1 - 7).
 0548            TS     MPAC +2
 0549            CAF    TESTNV
 0550            TC     NVSUB
 0551            TC     PRENVBSY
 0552            TC     ENDIDLE
 0553            TC     XVBOUT
 0554  2         TC     REDO
 0555            INHINT
 0556            CAF    PRIO20
 0557            TC     FINDVAC
 0558            CADR   TSELECT
 0559  2         TC     ENDOFJOB        LEAVING DISPLAY GRABBED FOR SYSTEM TEST.
 0560   TSELECT  CAF    SEVEN
 0561            MASK   QPLACE          SAFETY PLAY.
 0562            INDEX  A
 0563            CAF    TESTCADR
 0564  2         TC     BANKJUMP
 0565   TESTCADR CADR   ALM/END         0  ILLEGAL.
 0566            CADR   GYDRFT          1 GYRO DRIFT TEST.
 0567            CADR   ACCELTST        2  PIPA SCALE FACTOR DETERMINATION.
 0568            CADR   ALGNTST         3  IMU ALIGNMENT TEST
 0569            CADR   IMUCHK          4  IMU CHECK.
 0570            CADR   GYROTORK        5  GYRO TORQUING TEST.
 0571            CADR   CCHK            6  C RELAY CHECK.
 0572  2         CADR   DCHECK          7  DSKY CHECK.
 0573   TESTNV   OCT    2101
 0574   LQPL     ADRES  QPLACE
 0575   GOSHOSUM TC     POSTJUMP        START ROUTINE TO DISPLAY SUM OF EACH
 0576            CADR   SHOWSUM         BANK ON DSKY
P0577            VERB 75 ALLOWS THE GROUND TO PERFORM SOME I/O OPERATIONS WITH T
 0578  9HE DSKY. FOUR OPTIONS ARE
R0579   MECHANIZED FOR FLIGHT 501 (WITH MAJOR MODES DURING WHICH ALLOWED) -
R0580            1      GIMBAL MOTOR POWER ON              MAJOR MODES 0X.
R0581            2      GIMBAL MOTOR POWER OFF             MAJOR MODES 0X.
R0582            3      LIFT-OFF (AND GUIDANCE RELEASE).   MAJOR MODES 02 AND 04
 0583  9.
R0584            4      S4B-SM SEPARATE                    MAJOR MODE 14.
R0585  2         5      FDAI ALIGN.                        MAJOR MODES 0X.
 0586   EXTRAI/O TC     GRABDSP
 0587            TC     PREGBSY
 0588   75RELOAD CAF    LV75TEMP        ASK FOR FUNCTION NUMBER.
 0589            TS     MPAC +2
 0590            CAF    STATENV
 0591            TC     NVSUB
 0592            TC     PRENVBSY
 0593            TC     ENDIDLE
 0594            TC     XVBOUT
 0595  2         TC     75RELOAD
 0596            CCS    V75TEMP         MAKE SURE FUNCTION NUMBER IS LEGIT.
 0597            TC     +4
 0598            TC     75RELOAD
 0599            TC     75RELOAD
 0600  2         TC     75RELOAD
 0601    +4      MASK   75HI12
 0602            CCS    A
 0603  2         TC     75RELOAD
 0604            INDEX  V75TEMP
 0605            TC     +0
 0606            TC     75FN1
 0607            TC     75FN2
 0608  2         TC     75FN3
 0609            TC     75FN4
 0610            TC     75FN5
 0611            TC     75RELOAD
 0612            TC     75RELOAD
 0613            TC     75RELOAD
P0614  2         FUNCTION 4 - DO S4B SEPARATE.
 0615   75FN4    TC     CHECKMM         NO MODE 13 PLANNED.
 0616            OCT    14
 0617  2         TC     MALAPROP
 0618            INHINT
 0619            CAF    BIT8
 0620            MASK   FLAGWRD1
 0621            CCS    A
 0622  2         TC     XVBOUT          SWITCH SET - FUNCTION ALREADY DONE.
 0623            CAF    PRIO25
 0624            TC     FINDVAC
 0625  2         CADR   S4BSMSEP
 0628  2         TC     XVBOUT
R0629  2         FUNCTION 1 - GIMBAL MOTOR POWER ON - DURING PRE-LAUNCH ONLY.
 0630   75FN1    CAF    75MASK
 0631            MASK   MODREG
 0632            CCS    A
 0633  2         TC     MALAPROP
 0634            TC     RELAYON
 0635  2         OCT    40200
 0636  2         TC     XVBOUT
R0637  2         FUNCTION 2 - GIMBAL MOTOR POWER OFF - DURING PRE-LAUNCH ONLY.
 0638   75FN2    CAF    75MASK
 0639            MASK   MODREG
 0640            CCS    A
 0641  2         TC     MALAPROP
 0642            TC     RELAYOFF
 0643  2         OCT    40200
 0644            TC     XVBOUT
P0645  2         FUNCTION 3 - DO LIFT-OFF IF IN MAJOR MODE 04
 0646   75FN3    TC     CHECKMM         TEST IF PLATFORM IS INERTIAL (MM 04)
 0647            OCT    4
 0648  2         TC     CHECKM02        IT IS NOT. TEST IF STILL GYROCOMPASSING
 0649    +3      INHINT
 0650            CAF    BIT2
 0651            MASK   FLAGWRD1
 0652            CCS    A
 0653  2         TC     XVBOUT
 0654            CAF    PRIO24
 0655            TC     FINDVAC
 0656  2         CADR   LIFTOFF
 0659  2         TC     XVBOUT
 0660   CHECKM02 TC     CHECKMM         CHECK IF GYROCOMPASSING
 0661            OCT    00002
 0662            TC     MALAPROP        NOT INERTIAL OR GYROCOMPASSING
 0663  2         TC     75FN3 +3
R0664  2         FUNCTION 5 - FDAI ALIGN ON.
 0665   75FN5    CAF    75MASK
 0666            MASK   MODREG
 0667            CCS    A
 0668            TC     MALAPROP
 0669            TC     RELAYON
 0670            OCT    40400
 0671            INHINT
 0672            CAF    10SECS75        TURN OFF IN 10 SECONDS.
 0673            TC     WAITLIST
 0674            CADR   FDOFTSK1
 0675            TC     XVBOUT
 0676   -.5SEC75 DEC    -50
 0677   75MASK   OCT    70
 0678   75HI12   OCT    77770
 0679   10SECS75 DEC    1000
 0680   LV75TEMP ADRES  V75TEMP
P0681   THE FOLLOWING PROGRAM IMPLEMENTS MAJOR MODE 27 OF FLIGHT 501 - STATE VEC
 0682  9TOR UPDATE.
 06829           BANK   13
 0683   76UPDATE TC     FLAG1DWN        TURN OFF UPDA0FLG TO ALLOW ANOTHER V76
 06835           OCT    20000
 0684            CS     MINUS14D        PICK UP NO OF COMPONENTS FOR V76
 06845           TC     DATUPDAT
 0685   71UPDATE CAF    BIT2            PICK UP NO OF COMPONENTS FOR V71
 06855           TC     DATUPDAT
 0686   77UPDATE CAF    BIT1            PICK UP NO OF COMPONENTS FOR V71
 06865  DATUPDAT TS     MPAC            COMES HERE WITH NO OF COMPONENTS IN A
 0687            TC     CHECKMM         IS THIS P24
 06875           OCT    24
 0688            TC     CK4MM14         NO,SEE IF IT IS P14
 06885  STUFMODE CS     MODREG
 0689            TS     UPOLDMD         PUT OLD MODE IN REGISTER FOR DOWNLINK
 06895           CAF    76UPDATE +1
 0690            MASK   FLAGWRD1
 06905           CCS    A               IS UPDATFLG SET
 0691            TC     XACTALM7        YES, TURN ON CHECK FAIL AND EXIT
 06915           CAF    LDNLST2         NO, SET UP UPDATE DOWNLIST
 0692            TS     DNLSTADR
 06925           XCH    MPAC
 0693            TS     COMPNUMB
 06935           TC     NEWMODE
 0694            OCT    27
 06945           CS     LSTBUFF
 0695            TS     -UPADR          INITIALIZE LOOP
 0696            TC     GRABDSP
 06965           TC     PREGBSY
 06966           CAF    BIT1
 0697   NEXTCOMP TS     STCNTR
 06975  OHWELL   CS     -UPADR
 0698            TS     MPAC +2
 06982           CAF    STATENV7
 06985           TC     NVSUB           SET UP FOR COMPONENT LOAD
 0699            TC     PRENVBSY
 06995           TC     ENDIDLE         WAIT FOR INPUT
 0700            TC     ENDUPDAT        V34 E, TERMINATE
 0701            TC     OHWELL          V33E, MAKES NO SENSE, RECYCLE
 07013           CS     ONE             COMPONENT LOADED
 07015           AD     -UPADR
 0702            TS     -UPADR          CHANGE LOAD ADDRESS
 0703            TC     CHECKMM         ARE WE STILL IN P27
 07035           OCT    27
 0704            TC     ENDUPDAT        NO, TIME HAS RUN OUT, EXIT
 07045           CS     STCNTR          YES, CONTINUE
 0705            AD     COMPNUMB
 07055           CCS    A               WAS THAT THE LAST COMPONENT
 0706            CS     A               NO, CALCULATE NEW STCNTR
 07065           AD     COMPNUMB
 0707            TC     NEXTCOMP        RECYCLE
 07075  NEXTCHGE CAF    L-UPADR         YES, SET UP FOR OCTAL ID IF NEEDED
 0708            TS     MPAC +2
 07085           CAF    OCTIDNV
 0709            TC     NVSUB           DISPLAY VERIFICATION V21N02
 07095           TC     PRENVBSY
 0710            TC     ENDIDLE         WAIT FOR INPUT
 07105           TC     ENDUPDAT        V34E, TERMINATE
 0711            TC     UPDTDONE        V33E, UPDATE VERIFIED
 07115           CCS    -UPADR          IS OCTAL ID PNZ
 0712            TC     +4              YES, TEST FURTHER
 07125           TC     NEXTCHGE        NO, BAD ID, RECYCLE
 0713            TC     NEXTCHGE        NO, BAD ID, RECYCLE
 07135           TC     NEXTCHGE        NO, BAD ID, RECYCLE
 0714            CS     COMPNUMB
 07145           AD     -UPADR
 0715            CCS    A               IS ID TOO BIG
 07155           TC     NEXTCHGE        YES, BAD ID, RECYCLE
 0716   OCTIDNV  OCT    02102           CANNOT COME HERE
 07165           NOOP                   NO, GOOD ID
 0717            CCS    -UPADR          NO, GOOD ID
 07175           AD     LSTBUFF
 0718            TC     OHWELL +1
 07195  CK4MM14  TC     CHECKMM         COMES HERE TO SEE IF IN P14
 0720            OCT    14
 0721            TC     XACTALM7        NO, TURN ON CHECK FAIL
 07215           TC     STUFMODE        YES, SAVE MODE AND START P27
 0722   UPDTDONE CCS    COMPNUMB        COMES HERE AFTER VERIFIED UPDATE
 07225           CCS    A               TEST NO OF COMPONENTS TO TELL WHICH UPDT
 0723            TC     TESTMORE
 07235  77CONTIN INHINT                 1 COMPONENT, V77 UPDATE
 0724            XCH    DTEPOCH +1
 07245           AD     STBUFF          ADD TO DTEPOCH
 0725            TS     MPAC +2
 07255           CAF    ZERO
 0726            AD     DTEPOCH
 07265           TS     MPAC +1
 0727            CAF    ZERO
 07275           TS     MPAC
 0728            TC     BANKCALL        FORCE SIGN AGREEMENT
 07285           CADR   TPAGREE
 0729            CAF    ZERO
 07295           TS     DSPTEM1         INITIALIZE REGISTERS FOR CLOCK INCREMENT
 0730            CS     STBUFF
 07301           TS     DSPTEM1 +1
 07302           XCH    MPAC +1
 07303           TS     DTEPOCH         REPLACE WITH NEW DTEPOCH
 0731            XCH    MPAC +2
 0732            TS     DTEPOCH +1
 07322  ALLDONE  INHINT                 STANDARD EXIT FOR SUCCESSFUL UPDATES
 07324           CS     STATE           INVERT VERIFLAG ON COMPLETED UPDATES
 07326           MASK   BIT6
 07328           TS     Q
 0733            CS     BIT6
 07332           MASK   STATE
 07334           AD     Q
 07336           TS     STATE
 07338           RELINT
 07339           TC     CHECKMM
 073395          OCT    27
 0734            TC     +4              NO, DO NOT CHANGE PRESENT PROGRAM
 07345           CS     UPOLDMD         YES, RESTORE P14 OR P24
 0735            TC     NEWMODE +2
 07355  LSTBUFF  ADRES  STBUFF
 0736            CAF    LDNLST1         RESTORE FLIGHT DOWNLINK LIST
 07365           TS     DNLSTADR
 0737            TC     FREEDSP
 07375           CCS    COMPNUMB        WAS THIS A V77 UPDATE
 0738            CCS    A
 07385           TC     ENDOFJOB        NO, FINISHED
 0739            TC     POSTJUMP        YES, GO INCREMENT CLOCK
 07395           CADR   UPDATIME
 0740   TESTMORE CCS    A               IF NOT V77, WHICH UPDATE WAS IT
 07405           TC     76CONTIN        V76, CONTINUE AT 76CONTIN
 0741   71CONTIN XCH    STBUFF          V71, LOAD TFFMIN
 07415           TS     TFFMIN
 0742            XCH    STBUFF +1
 07425           TS     TFFMIN +1
 0743            TC     ALLDONE         GO TO STANDARD EXIT
 07435  76CONTIN TC     FLAG1UP         SET UPDATFLG
 0744            OCT    20000
 07445           CAF    BIT4
 0745            MASK   UPOLDMD
 07455           CCS    A               WAS OLD PROGRAM P14 OR P24
 0746            TC     ALLDONE         P24, GO TO STANDARD EXIT
 07465           CS     STBUFF +12D     P14, LOAD UPTIME
 0747            CS     A
 07475           TS     UPTIME
 0748            CS     STBUFF +13D
 07485           CS     A
 0749            TS     UPTIME +1
 07495           TC     ALLDONE         GO TO STANDARD EXIT
 0750   ENDUPDAT TC     CHECKMM         COMES HERE ON V34E
 0751            OCT    27              IS IT STILL P27
 0752            TC     +4              NO, DO NOT CHANGE PRESENT PROGRAM
 0753            CS     UPOLDMD         YES, RESTORE P14 OR P24
 0754            TC     NEWMODE +2
 0755   MINUS14D OCT    77761
 0756            CAF    LDNLST1         RESTORE DOWNLIST
 0757            TS     DNLSTADR
 0758            TC     FREEDSP
 0759            TC     ENDOFJOB        THATS IT, THERE AINT NO MORE
 0760   STATENV7 OCT    02101
 0761   L-UPADR  ADRES  -UPADR
 07632  XACTALM7 TC     POSTJUMP
 07634           CADR   XACTALM
 0764            BANK   5
 07641  STATENV  OCT    02101
 07643  MALAPROP TC     FALTON
 07644  XVBOUT   TC     FREEDSP
 07645           TC     ENDOFJOB
 07646  REDO5.20 TC     NEWMODE
 07647           OCT    24
 07648           TC     ENDOFJOB
 0765   ENDEXTVS =
L      2AGC SELF-CHECK
 0001  2         SETLOC 22000
R0002   NEXT THREE CONSTANTS ARE USED IN RUPTCHK SUBROUTINE
 0003   OVCON    OCTAL  37767
 0004   TM1WAIT  OCTAL  00320
 0005  2ZRUPTCON ADRES  TSKADRS         MUST BE ADDRESS OF TSKADRS
R0006   NEXT SIX CONSTANTS ARE USED IN ERASCHK, CNTRCHK, AND CYCLSHF SUBROUTINES
 0007   CONCNTR1 EQUALS BIT5            00020
 0008   CONERAS1 OCTAL  00060
 0009   CONERAS2 OCTAL  01774
 0010   CONC+S1  OCTAL  25252
 0011  2CONC+S2  EQUALS CSQ             40001
R0012   NEXT 3 CONSTANTS ARE USED IN SHOWSUM ROUTINE
 0013   SUMADRS  ADRES  SKEEP1          SKEEP1 HOLDS SUM OF BANK
 0014   VNCON    OCTAL  00501           DISPLAY CONTENTS OF THREE ADDRESSES
 0015   SCADR    CADR   SDISPLAY
R0016   THE FOLLOWING CONSTANTS ARE USED THROUGHOUT SELF-CHECK
 0017   SCON0    EQUALS ZERO            +0
 0018   SCON1    EQUALS BIT1            +1
 0019   SCON2    EQUALS BIT2            +2
 0020   SCON4    EQUALS BIT3            +4
 0021   SCON64   EQUALS BIT7            00100
 0022   SCON1/4  EQUALS BIT13           10000
 0023   SCON1/2  EQUALS BIT14           20000
 0024   SCON+MAX EQUALS POSMAX          37777
 0025   SCON-2   EQUALS MINUS2          77775
 0026   SCON-1   EQUALS MINUS1          77776
 0027  2SCONMAX  EQUALS NEG0            77777
 0028    -2      XCH    QADRS           ENTRY HERE FROM -ZEROCHK AND -ONECHK
 0029  2         TC     +2
 0030   ERRORS   XCH    Q               FAILURE DETECTED - ALARM.
 0031            TS     SFAIL           SAVE CALLING Q FOR POSSIBLE FAILURE LOC.
 0032            TC     ALARM
 0033            OCT    01102
 0034            XCH    ERCOUNT         ADD +1 TO ERCOUNT REGISTER EVERY TIME
 0035            AD     SCON1           THERE IS AN ERROR IN SELF-CHECK
 0036            XCH    ERCOUNT
 0037  2         TC     SMODECHK        START    SELF-CHECK AGAIN
 0038   -ZEROCHK XCH    Q
 0039            TS     QADRS           HOLDS ADDRESS THAT WAS IN Q REGISTER
 0040            XCH    Q
 0041            CCS    A
 0042            TC     ERRORS -2
 0043            TC     ERRORS -2
 0044            TC     ERRORS -2
 0045  3         TC     Q
 0046            CS     A
 0047   -ONECHK  XCH    Q
 0048            TS     QADRS           HOLDS ADDRESS THAT WAS IN Q REGISTER
 0049            XCH    Q
 0050            CCS    A
 0051            TC     ERRORS -2
 0052            TC     ERRORS -2
 0053            CCS    A
 0054            TC     ERRORS -2
 0055  3         TC     Q
R0056   CHECKS MOST CCS PULSES
 0057   CCSCHK   RELINT                 COMES HERE FROM INHIBIT LOOP AT SMODECHK
 0058            CS     SCON2           -2
 0059            CCS    A               C(A) = -2
 0060            TC     ERRORS
 0061            TC     ERRORS
 0062            TC     +2
 0063            TC     ERRORS
 0064            CCS    A               C(A) = +1, RESULT OF CCS -NUMBER
 0065            TC     +4
 0066            TC     ERRORS
 0067            TC     ERRORS
 0068            TC     ERRORS
 0069            CCS    A               C(A) = +0, RESULT OF CCS + NUMBER
 0070            TC     ERRORS
 0071            TC     +3
 0072            TC     ERRORS
 0073            TC     ERRORS
 0074            CS     A
 0075            CCS    A               C(A) = -0, RESULT OF CCS +0
 0076            TC     ERRORS
 0077            TC     ERRORS
 0078            TC     ERRORS
 0079            CCS    A               RESULT OF CCS -0
 0080            TC     ERRORS
 0081            TC     +3
 0082            TC     ERRORS
 0083            TC     ERRORS
R0084   SPECIFICALLY CHECKS RSC PULSE OF TC INSTRUCTION (ALSO MOST OF TC
R0085   PULSES)
 0086            TC     +2
 0087            TC     +2              NEXT SUBROUTINE
 0088  3         TC     Q
R0089   CHECKS WP, GP, TP - WP2, RP2 - RG, WP, OF CCS1
R0090   CHECKS RB, WG PULSES (READ BACK INTO ERASABLE)
 0091   PTY+ERAS CAF    5777            47777
 0092            TS     SKEEP1
 0093            MASK   SKEEP1
 0094            XCH    SKEEP1
 0095            AD     SKEEP1
 0096            INDEX  5777
 0097            4      SKEEP1          MP SKEEP1
 0098            INDEX  5777
 0099            5      SKEEP1          DV SKEEP1
 0100            CS     SKEEP1
 0101            TS     SKEEP2          30000
 0102            INDEX  SKEEP1          TROUBLE IF C(SKEEP1) NOT 47777
 0103            6      SKEEP2          SU SKEEP2, C(A) = -0
 0104            TS     SKEEP2          -0
 0105            CCS    SKEEP2
 0106            TC     ERRORS
 0107            TC     ERRORS
 0108            TC     ERRORS
 0109            CCS    SKEEP2
 0110            TC     ERRORS
 0111            TC     ERRORS
 0112            TC     ERRORS
R0113   START ERASABLE INSTRUCTION CHECK
 0114            CAF    EINST1
 0115            TS     SKEEP1
 0116            CAF    EINST2
 0117            TS     SKEEP2
 0118            CAF    EINST3
 0119            TS     SKEEP3
 0120            CAF    EINST4
 0121            TS     SKEEP4
 0122            CAF    EINST5
 0123            TS     SKEEP5
 0124            CAF    EINST6
 0125            TS     SKEEP6
 0126            CAF    SCON1/2
 0127            TC     SKEEP1
 0128   EINST1   INDEX  5777
 0129   EINST2   4      SCON2           MP, C(A) = +1, THEN +0
 0130   EINST3   AD     A               CHECKS ST2 PARITY
 0131   EINST4   CCS    A
 0132   EINST5   TC     SKEEP1
 0133  3EINST6   TC     +1              NEXT SUBROUTINE
R0134   CHECKS RSC, WSC PULSES
R0135   NO WSC PULSE IN MASK INSTRUCTION
 0136   SCCHK    CAF    SCON64          00100
 0137            XCH    LP              00040
 0138            XCH    LP
 0139            TS     LP              00020
 0140            AD     LP              00010
 0141            INDEX  LP              00004
 0142            2      5767            INDEX 5777
 0143            6      0003            SU LP, 00002
R0144   NEXT 4 INSTRUCTIONS CHECK RSC PULSE IN MASK INSTRUCTION
 0145            CS     LP              C(A) = -2, C(LP) = +1
 0146            MASK   LP              C(A) = +1, C(LP) = +1
 0147            CS     A
 0148            TC     -ONECHK
 0149            CCS    LP
 0150            TC     +4
 0151            TC     ERRORS
 0152            TC     ERRORS
 0153            TC     ERRORS
 0154            CCS    LP
 0155            TC     ERRORS
 0156            TC     ERRORS
 0157            TC     +2
 0158            TC     ERRORS
 0159            CCS    LP
 0160            TC     ERRORS
 0161            TC     +3              NEXT SUBROUTINE
 0162            TC     ERRORS
 0163            TC     ERRORS
R0164   CHECKS MOST OF MP PULSES
 0165   MPCHK    CAF    SCON4
 0166            TS     LP
 0167   MP++     CAF    SCON+MAX
 0168            INDEX  5777
 0169            4      LP              C(A) = +1, CHECKS RSC PULSE
 0170            AD     LP              C(LP) = +37776
 0171            TS     SKEEP1          37777
 0172   MP+-     CAF    SCON+MAX
 0173            INDEX  5777
 0174            4      SCON-2
 0175            AD     LP              C(LP) = -37776
 0176            AD     SKEEP1
 0177            TC     -ZEROCHK
 0178   MP--     CS     SCON+MAX
 0179            INDEX  5777
 0180            4      SCON-2          C(A) = +1
 0181            AD     LP              C(LP) = +37776
 0182            TS     SKEEP1          37777
 0183   MP-+     CS     SCON+MAX
 0184            INDEX  5777
 0185            4      SCON2           C(A) = -1
 0186            AD     LP              C(LP) = -37776
 0187            AD     SKEEP1
 0188  3         TC     -ZEROCHK
R0189   CHECKS MOST OF SU PULSES
 0190   SUCHK    CAF    SCON+MAX
 0191            INDEX  5777
 0192            6      SCONSU          SU 37776, C(A) = +1
 0193  2         TC     -ONECHK -1
R0194   CHECKS MOST OF DV PULSES (ALL EXCEPT WP, GP, TP)
R0195   DIVIDE USES ST2
R0196   ++ AND --, C(A) = 25252, C(Q) = 67777, C(LP) = +1
R0197   +- AND -+ , C(A) = 52525, C(Q) = 67777, C(LP) = 40000 AND 40001
 0198   DVCHK    CAF    SCON3/8
 0199            TS     Q
 0200   DV++     CAF    SCON1/4
 0201            INDEX  5777
 0202            5      Q               C(A) = 25252, CHECKS RSC PULSE
 0203            TS     SKEEP1
 0204            XCH    LP
 0205            TS     SKEEP2
 0206   DV+-     CS     Q               +1/4
 0207            INDEX  5777
 0208            5      SCON-3/8        C(A) = 52525
 0209            AD     SKEEP1          C(A) = -0
 0210            TS     SKEEP5          SHOULD BE -0
 0211            XCH    LP
 0212            TS     SKEEP3
 0213   DV--     XCH    Q               -1/4
 0214            INDEX  5777
 0215            5      SCON-3/8        C(A) = 25252
 0216            TS     SKEEP1
 0217            XCH    LP
 0218            TS     SKEEP4
 0219   DV-+     XCH    Q               -1/4
 0220            INDEX  5777
 0221            5      SCON3/8
 0222            AD     SKEEP1          C(A) = -0
 0223            TS     SKEEP1
 0224            CS     LP              C(A) = 37776
 0225            AD     SKEEP1          C(A) = 37776
 0226            AD     SKEEP2          C(A) = 37777
 0227            AD     SKEEP3          C(A) = -0
 0228            AD     SKEEP4          C(A) = +1
 0229            AD     SKEEP5          C(A) = +1
 0230  3         TC     -ONECHK -1
R0231   CHECKS MOST TS PULSES
R0232   CHECKS ALL OF PINC AND MINC PULSES EXCEPT WOVR
 0233   TS+-CHK  CAF    SCON1
 0234            TS     OVCTR
 0235            AD     SCON+MAX        C(A) = + WITH OVERFLOW
 0236            TS     SKEEP1
 0237            TC     ERRORS
 0238            AD     SKEEP1          C(A) = +1
 0239            AD     OVCTR           C(A) = +3
 0240            TS     OVCTR
 0241            CS     A               C(A) = 77774
 0242            INDEX  5777
 0243            6      SCONTS          C(A) = -0 WITH UNDERFLOW
 0244            TS     SKEEP1
 0245            TC     ERRORS
 0246            AD     SKEEP1          C(A) = -1
 0247            AD     OVCTR           C(A) = -1+2
 0248  2         TC     -ONECHK -1
R0249   NOT POSSIBLE TO CHECK WOVI PULSE IN NXI1
R0250   START WOVI PULSE CHECK AND INHINT RELINT CHECK
 0251   RUPTCHK  INDEX  INHINT
 0252            CAF    SCON0
 0253            TS     0024            ZRUPT
 0254            INDEX  RELINT
 0255            AD     TIME1
 0256            TS     SKEEP1
 0257   TENMS    CS     SKEEP1          CHECK FOR NEXT PULSE TP TIME1
 0258            AD     TIME1
 0259            CCS    A
 0260            CCS    A
 0261            TC     RUPTCHK         START AGAIN, TIMING IS OFF DUE TO RUPT
 0262            TC     +2              10 MS PULSE HAS ARRIVED AT TIME1
 0263            TC     TENMS
 0264            CAF    TM1WAIT         START 7 TO 8 MS WAIT
 0265   7-8WAIT  CCS    A
 0266            TC     7-8WAIT
 0267            INDEX  INHINT
 0268            CCS    0024            ZRUPT
 0269            TC     RUPTCHK         THERE WAS AN INTERRUPT. START AGAIN
 0270            CAF    SCON1
 0271            TC     WAITLIST
 0272            CADR   TSKADRS
 0273            XCH    SCON+MAX
 0274            AD     OVCON           WILL STAY IN OVERFLOW, UNDERFLOW FOR
 0275            INDEX  RELINT          APPROXIMATELY 3 MS
 0276   WAIT1    CCS    A
 0277            AD     SCON2
 0278            TC     +2
 0279            TC     WOVIRPT
 0280            INDEX  5777
 0281            6      SCONMAX         SU -0
 0282            XCH    A
 0283            INDEX  SCON0
 0284            CS     A
 0285            MASK   A
 0286            CS     A
 0287            TS     A
 0288            TC     ERRORS
 0289            TC     WAIT1
 0290   WOVIRPT  INDEX  INHINT
 0291            TS     SKEEP1
 0292   SCONTS   OCTAL  37775
 0293            INDEX  RELINT
R0294   INTERRUPT SHOULD APPEAR BEFORE NEXT INSTRUCTION
 0295            TC     SOPTION1        END OF PULSES CHECK
 0296   TSKADRS  CS     0024            C(ZRUPT) = ADDRESS OF TSKADRS
 0297            AD     ZRUPTCON
 0298            TC     -ZEROCHK
 0299            XCH    SCOUNT          ADD +1 TO SCOUNT REGISTER AT THIS
 0300            AD     SCON1           POINT OF SELF-CHECK.
 0301            XCH    SCOUNT
 0302  3         TC     TASKOVER
 0303   SOPTION1 CCS    SMODE           3 OPTIONS OF SELF-CHECK
 0304            TC     SMODECHK        END OF PULSES ONLY CHECK
 0305            TC     SMODECHK
 0306  2         TC     +1              CONTINUE IF C(SMODE) IS A NEG. NUMB5R
R0307   COUNTS DOWN 15 BIT NUMBER (APPROXIMATELY 10 SECONDS)
 0308   COUNTCHK CS     SCON+MAX
 0309            TS     SKEEP5
 0310   COUNTS   TS     Q
 0311            CCS    Q
 0312            TC     -NMBR
 0313   SCONSU   OCTAL  37776
 0314            TC     +2
 0315            TC     OFCOUNT
 0316            AD     SKEEP5
 0317            TC     -ONECHK
 0318            CCS    NEWJOB
 0319            TC     DUMEXIT
 0320            CS     SKEEP5
 0321            AD     SCONMAX         -0
 0322            TS     SKEEP4
 0323            TC     COUNTS
 0324   -NMBR    CS     A
 0325            TS     SKEEP5
 0326            AD     SKEEP4
 0327            TC     -ONECHK -1
 0328            CS     SKEEP5
 0329            CS     A
 0330  2         TC     COUNTS
R0331   COUNTS DOWN OVERFLOW NUMBER (APPROXIMATELY 3.5 SECONDS)
 0332   OFCOUNT  TS     SKEEP7          +0
 0333            CAF    SCON+MAX
 0334            AD     A
 0335   COUNTSOF AD     SCON1
 0336            INHINT
 0337            XCH    Q
 0338            CCS    Q
 0339            TS     SKEEP6
 0340            TC     ENDOF
 0341            RELINT
 0342            AD     SKEEP7
 0343            TS     SKEEP7
 0344            TC     +2
 0345            TC     ERRORS
 0346            CCS    NEWJOB
 0347            TC     DUMEXIT
 0348            CAF    SCON+MAX
 0349            AD     SKEEP6
 0350            TC     COUNTSOF
 0351   ENDOF    CS     A
 0352            RELINT
 0353            AD     SKEEP7
 0354  2         TC     -ZEROCHK
R0355   REGISTER 1777 ALWAYS HOLDS LOWEST (X-1) ADDRESS JUST CHECKED
R0356   REGISTER 1776 HOLDS BEFORE CONTENTS OF X
R0357   REGISTER 1775 HOLDS BEFORE CONTENTS OF X-1
R0358   REGISTER 1774 IS STARTING ADDRESS
R0359   PUTS OWN ADDRESS IN REGISTERS OCT 1774 THROUGH OCT 60 (APPROX.  1.2 SEC)
 0360   ERASCHK  CAF    CONERAS2        01774
 0361            TS     1777
 0362   ERASLOOP RELINT
 0363            CCS    1777
 0364            TS     1777
 03645           INHINT
 0365            NDX    1777
 0366            CS     0001
 0367            CS     A
 0368            TS     1776            PUT C(X) IN 1776
 0370            NDX    1777
 0371            CS     0000
 0372            CS     A
 03721           TS     1775            PUT C(X-1) IN 1775
 03722           CS     1777
 03723           CS     A
 03724           TS     ERESTORE        IF RESTART, RESTORE C(X) AND C(X-1)
 03725           NDX    1777
 03726           TS     0000            PUT OWN ADDRESS IN X-1
 03727           AD     SCON1
 03728           NDX    1777
 0373            TS     0001            PUT OWN ADDRESS IN X
 0374            INDEX  1777
 0375            CS     0001
 0376            INDEX  1777
 0377            AD     0000
 0378            TC     -ONECHK
 0379   COMPLMNT CS     1777
 0380            INDEX  1777
 0381            TS     0000            PUTS COMPLEMENT OF ADDRESS IN X-1
 0382            AD     SCON-1
 0383            INDEX  1777
 0384            TS     0001            PUTS COMPLEMEMT OF ADDRESS IN X
 0385            INDEX  1777
 0386            CS     0000
 0387            INDEX  1777
 0388            AD     0001
 0389            TC     -ONECHK
 0390            CS     1776
 0391            CS     A
 0392            NDX    1777
 0393            TS     0001            RESTORE C(X)
 0394            CS     1775
 0395            CS     A
 03951           NDX    1777
 03952           TS     0000            RESTORE C(X-1)
 03953           CS     SCONMAX
 0396            TS     ERESTORE        IF RESTART, DO NOT RESTORE C(X), C(X-1).
 0397            CCS    NEWJOB
 0398            TC     DUMEXIT
 0399   ENDERAS  CS     1777
 0400            AD     CONERAS1        +60 OCT
 0401            CCS    A
 0402   SCON3/8  OCTAL  14000
 0403   SCON-3/8 OCTAL  63777
 0404            TC     ERASLOOP
 0405  2         INDEX  RELINT
R0406   CS ALL REGISTERS FROM OCT 57 THROUGH OCT 20
R0407   ALL COUNTERS, PLUS 4 SPARES, PLUS 4 RUPT REGISTERS,
R0408   PLUS CYCLE AND SHIFT REGISTERS
 0409   CNTRCHK  CAF    LOW5
 0410   CNTRLOOP TS     SKEEP1
 0411            AD     CONCNTR1        +20 OCT
 0412            INDEX  A
 0413            CS     0000
 0414            CCS    SKEEP1
 0415  2         TC     CNTRLOOP
 0416   CYCLSHFT CAF    CONC+S1
 0417            TS     CYR             C(CYR) = 12525
 0418            TS     CYL             C(CYL) = 52524
 0419            TS     SR              C(SR) = 12525
 0420            TS     SL              C(SL) = 12524
 0421            AD     CYR
 0422            AD     CYL
 0423            AD     SR
 0424            AD     SL
 0425            AD     CONC+S2         C(A) = -1
 0426  2         TC     -ONECHK
 0427            XCH    SCOUNT +1       ADD +1 TO SCOUNT +1 REGISTER AT THIS
 0428            AD     SCON1           POINT OF SELF-CHECK
 0429            XCH    SCOUNT +1
 0430   SOPTION2 CCS    SMODE           TWO OPTIONS LEFT
 0431            TC     COUNTCHK
 0432            TC     SMODECHK
 0433            TC     SMODECHK        END OF PULSES + SC + ERASABLE CHECK
 0434  2         TC     ROPECHK         CONTINUE WITH SELF-CHECK
R0435   THE BNKCON CONSTANTS (BANK NUMBERS) ARE USED BY ROPECHK AND SHOWSUM
R0436   THEY MUST BE IN THE FOLLOWING TABLE FORM
 0437   BNKCON1  OCTAL  02000
 0438   BNKCON2  OCTAL  04000
 0439   BNKCON3  OCTAL  06000
 0440   BNKCON4  OCTAL  10000
 0441   BNKCON5  OCTAL  12000
 0442   BNKCON6  OCTAL  14000
 0443   BNKCON7  OCTAL  16000
 0444   BNKCON10 OCTAL  20000
 0445   BNKCON11 OCTAL  22000
 0446   BNKCON12 OCTAL  24000
 0447   BNKCON13 OCTAL  26000
 0448   BNKCON14 OCTAL  30000
 0449   BNKCON21 OCTAL  42000
 0450   BNKCON22 OCTAL  44000
 0451   BNKCON23 OCTAL  46000
 0452   BNKCON24 OCTAL  50000
 0453   BNKCON25 OCTAL  52000
 0454   BNKCON26 OCTAL  54000
 0455   BNKCON27 OCTAL  56000
 0456   BNKCON30 OCTAL  60000
 0457   BNKCON31 OCTAL  62000
 0458   BNKCON32 OCTAL  64000
 0459   BNKCON33 OCTAL  66000
 0460   BNKCON34 OCTAL  70000
 0461  2BANKSTOP OCTAL  00000           PUT +0 AFTER LAST BANK TO BE CHECKED
R0462   TAKES BETWEEN 17 AND 20 SECONDS FOR ROPECHK TO GO THROUGH  ALL BANKS.
R0463   INITIALIZE 2OPTIONS TO -1 TO PERFORM ROPECHK
R0464   SKEEP1 HOLDS SUM
R0465   SKEEP2 HOLDS PRESENT CONTENTS OF ADDRESS IN ROPCHEK AND SHOWSUM ROUTINES
R0466   SKEEP2 HOLDS ACTUAL BANK NUMBER USED IN THE BANK REGISTER BUT CYCLED 5
R0467   PLACES LEFT FOR DISPLAY IN SHOWSUM ROUTINE
R0468   SKEEP3 HOLDS PRESENT ADDRESS (02000 TO 05777 IN FXFX BANKS)
R0469                                (00000 TO 01777 IN FXSW BANKS)
R0470   SKEEP3 HOLDS BUGGER WORD FOR DISPLAY IN SHOWSUM ROUTINE
R0471   SKEEP4 HOLDS ADDRESS OF BANK NUMBER
R0472   SKEEP5 COUNTS TWO SUCCESSIVE TC SELF WORDS
R0473   SKEEP6 HOLDS END OF BANK NUMBERS
R0474   SKEEP7 COUNTS DOWN FIXED FIXED BANKS
 0475   ROPECHK  CS     SCON1
 0476            TS     2OPTIONS
 0477   FXFXCHK  CAF    FXCON1          43776
 0478            TS     SKEEP6
 0479            CAF    BNKCON1         02000
 0480            TS     SKEEP3
 0481            CAF    STBNKCON
 0482            TS     SKEEP4
 0483            CAF    SCON1
 0484            TS     SKEEP7
 0485   FXFXBNKS CAF    SCON0
 0486            TS     SKEEP1
 0487            CAF    SCON2
 0488            TS     SKEEP5          COUNTS DOWN TWO TC SELF WORDS
 0489   FXADRS   INDEX  SKEEP3
 0490            CAF    0000
 0491            TC     ADSUM
 0492  2         TC     ADRSCHK
 0493   BANK2    TS     SKEEP7
 0494            CAF    FXCON2          45776
 0495            TS     SKEEP6
 0496            CAF    BNKCON2         04000
 0497            TS     SKEEP3
 0498  2         TC     FXFXBNKS
 0499   FXSWBNKS CAF    SCON2
 0500            TS     SKEEP5          COUNTS DOWN TWO TC SELF WORDS
 0501            CAF    SCON0
 0502            TS     SKEEP1
 0503            TS     SKEEP3
 0504   SWADRS   AD     SKEEP3
 0505            INDEX  SKEEP4
 0506            AD     0000
 0507            TC     DATACALL
 0508            TC     ADSUM
 0509            AD     BNKCON3         06000
 0510  2         TC     ADRSCHK
R0511   SUBROUTINES ADRS+1, ADRSCHK, OPTION, NXTBNK, ADSUM, AND BNKCHK ARE
R0512   USED BY BOTH FXFX AND FXSW BANKS
 0513   ADRS+1   XCH    SKEEP3
 0514            AD     SCON1
 0515            TS     SKEEP3
 0516            CCS    SKEEP7
 0517            TC     FXADRS
 0518            TC     FXADRS
 0519  2         TC     SWADRS
 0520   ADRSCHK  CCS    A
 0521            TC     CONTINU
 0522            TC     CONTINU
 0523            TC     CONTINU
 0524            CCS    SKEEP5
 0525            TS     SKEEP5
 0526            TC     CONTINU +5
 0527   CONTINU  CCS    SKEEP5
 0528            TC     +2
 0529            TC     SOPTION
 0530            CAF    SCON2
 0531            TS     SKEEP5          MAKES SURE TWO CONSECUTIVE TC SELF WORDS
 0532            CCS    NEWJOB
 0533            TC     DUMEXIT
 0534            CS     SKEEP3
 0535            AD     SKEEP6
 0536            TS     A               UNDERFLOW AT END OF BANK
 0537  2         TC     ADRS+1          STAY IN SAME BANK
 0538   SOPTION  CCS    2OPTIONS
 0539            TC     SDISPLAY
 0540            TC     NXTBNK
 0541            TC     BNKCHK
 0542  2         TC     -ONECHK
 0543   NXTBNK   XCH    SKEEP4
 0544            AD     SCON1
 0545            TS     SKEEP4
 0546            CCS    SKEEP7
 0547            TC     BANK2
 0548            TC     +1
 0549            CS     SCON1
 0550            TS     SKEEP7
 0551            CAF    SWCON           41776
 0552            TS     SKEEP6
 0553   ENDBANKS INDEX  SKEEP4
 0554            CS     0000
 0555            CCS    A
 0556            TC     FXSWBNKS
 0557   STBNKCON ADRES  BNKCON1         CONSTANT. STARTING ADDRESS OF BANK LIST
 0558            TC     FXSWBNKS
 0559            CCS    2OPTIONS        END OF FIXED MEMORY CHECKING
 0560            TC     SHOWSUM         END OF SHOWSUM, START AGAIN
 0561   SWCON    OCTAL  41776           CONSTANT
 0562  2         TC     1/2OPTN         END OF BANK SUMCHECKING SUBROUTINE
 0563   ADSUM    TS     SKEEP2
 0564            AD     SKEEP1
 0565            TS     SKEEP1
 0566            CAF    SCON0
 0567            AD     SKEEP1
 0568            TS     SKEEP1
 0569            CS     SKEEP2
 0570            AD     SKEEP3
 0571  3         TC     Q
 0572   BNKCHK   XCH    Q
 0573            TS     QADRS
 0574            CCS    SKEEP1
 0575            TC     +4
 0576            TC     ERRORS
 0577            TC     +2
 0578            TC     ERRORS
 0579            TS     SKEEP1
 0580            INDEX  SKEEP4
 0581            CAF    0000
 0582            TC     LEFT5           CYCLES LEFT 5 PLACES
 0583            CS     A
 0584            AD     SKEEP1
 0585            TC     QADRS
 0586   FXCON1   OCTAL  43776           CONSTANT
 0587  2FXCON2   OCTAL  45776           CONSTANT
R0588   INITIALIZE 2OPTIONS TO +1 TO PERFORM SHOWSUM
R0589   START OF ROUTINE THAT DISPLAYS SUM OF EACH BANK
 0590   SHOWSUM  CAF    SCON1
 0591            TS     2OPTIONS        SHOWSUM OPTION
 0592            CAF    SCON0
 0593            TS     SMODE           PUT SELF-CHECK TO SLEEP
 0594            INDEX  INHINT
 0595            CAF    PRIO2
 0596            TC     NOVAC
 0597            CADR   FXFXCHK
 0598            INDEX  RELINT
 0599            TC     ENDOFJOB
 0600   SDISPLAY INDEX  SKEEP4
 0601            CAF    0000
 0602            TC     LEFT5           CYCLES LEFT 5 PLACES
 0603            TS     SKEEP2          HOLDS BANK NUMBER FOR DSKY DISPLAY
 0604            CCS    SKEEP7          12 INSTRUCTIONS TO PUT BUGGER WORD
 0605            TC     FXFXWORD        IN SKEEP3.
 0606            TC     FXFXWORD
 0607            CS     SKEEP3          GETS FXSW BUGGER WORD
 0608            CS     A
 0609            INDEX  SKEEP4
 0610            AD     0000
 0611            TC     DATACALL
 0612            TC     +3
 0613   FXFXWORD INDEX  SKEEP3          GETS FXFX BUGGER WORD
 0614            CAF    0000
 0615            TS     SKEEP3          SKEEP3 NOW HOLDS BUGGER WORD
 0616            TC     GRABDSP
 0617            TC     PREGBSY
 0618   NOKILL   CAF    SUMADRS
 0619            TS     MPAC +2
 0620            CAF    VNCON
 0621            TC     NVSUB
 0622            TC     SBUSY
 0623            TC     BANKCALL
 0624            CADR   FLASHON
 0625            TC     ENDIDLE
 0626            TC     +3              FINISHED WITH SHOWSUM
 0627            TC     SALLOW          PROCEED TO NEXT BANK
 0628            TC     NOKILL          SO CAN LOAD WITHOUT KILLING SHOWSUM.
 0629            TC     FREEDSP
 0630  2         TC     ENDOFJOB
 0631   SALLOW   TC     FREEDSP         ALLOWS ANOTHER JOB TO DISPLAY. LEAVES
 0632  2         TC     NXTBNK          SUM IN DSKY FOR 10 SEC. AFTER PROC. VERB
 0633   SBUSY    CAF    SCADR
 0634  2         TC     NVSUBUSY
 0635   1/2OPTN  CCS    SMODE
 0636            TC     +4              STAY IN ROPECHK LOOP
 0637            TC     SOPTION3 -3
 0638            TC     SMODECHK        SHOULD NOT COME HERE
 0639            TC     MPNMBRS         CONTINUE WITH SELF-CHECK
 0640            XCH    SCOUNT +2
 0641            AD     SCON1
 0642            XCH    SCOUNT +2
 0643  2         TC     ROPECHK
R0644   MULTIPLY SUBROUTINES TAKE APPROXIMATELY 30 SECONDS
R0645   (37777) X (37777 THROUGH 00001)
R0646   C(A) COUNTS DOWN. C(LP) COUNTS UP.
 0647   MPNMBRS  CAF    SCON+MAX
 0648            TS     SKEEP2
 0649            CAF    SCON+MAX
 0650            EXTEND
 0651            MP     SKEEP2
 0652            AD     LP              C(A) = 37777
 0653            CS     A
 0654            AD     SCON+MAX
 0655            TC     -ZEROCHK
 0656            CCS    NEWJOB
 0657            TC     DUMEXIT
 0658            CCS    SKEEP2
 0659            TS     SKEEP2
 0660            CCS    SKEEP2
 0661            TC     MPNMBRS +2
R0662   (-1) X (37777 THROUGH 00001)
 0663            CAF    SCON+MAX
 0664            TS     SKEEP2
 0665   MPHIGH1  CAF    SCON-1
 0666            EXTEND
 0667            MP     SKEEP2          C(A) = -0
 0668            AD     LP
 0669            AD     SKEEP2
 0670            TC     -ZEROCHK
 0671            CCS    NEWJOB
 0672            TC     DUMEXIT
 0673            CCS    SKEEP2
 0674            TS     SKEEP2
 0675            CCS    SKEEP2
 0676  2         TC     MPHIGH1
R0677   INTERCHANGE MULTIPLIER AND MULTIPLICAND
R0678   (37777 THROUGH 00001) X (37777)
R0679   C(A) COUNTS DOWN. C(LP) COUNTS UP.
 0680            CAF    SCON+MAX
 0681            TS     SKEEP1
 0682   MPAGAIN  CS     SKEEP1
 0683            CS     A
 0684            EXTEND
 0685            MP     SCON+MAX
 0686            AD     LP              C(A) = 37777
 0687            CS     A
 0688            AD     SCON+MAX
 0689            TC     -ZEROCHK
 0690            CCS    NEWJOB
 0691            TC     DUMEXIT
 0692            CCS    SKEEP1
 0693            TS     SKEEP1
 0694            CCS    SKEEP1
 0695            TC     MPAGAIN
R0696   (37777 THROUGH 00001) X (-1)
 0697            CAF    SCON+MAX
 0698            TS     SKEEP1
 0699   MPHIGH2  CS     SKEEP1
 0700            CS     A
 0701            EXTEND
 0702            MP     SCON-1
 0703            AD     LP
 0704            AD     SKEEP1
 0705            TC     -ZEROCHK
 0706            CCS    NEWJOB
 0707            TC     DUMEXIT
 0708            CCS    SKEEP1
 0709            TS     SKEEP1
 0710            CCS    SKEEP1
 0711            TC     MPHIGH2
 0712  2         TC     DV1
R0713   THESE 2 CONSTANTS USED BY DIVIDE SUBROUTINES
 0714   DVCON1   OCTAL  37776
 0715   DVCON2   OCTAL  50001
R0716   DIVIDE 1/4 BY 3/8
R0717   ONCE THROUGH ALL DEVIDE SUBROUTINES TAKES APPROX. 0.012 SECONDS
R0718   TOTAL TIME IN DEVIDE SUBROUTINES IS APPROX. 20 SECONDS
 0719   DV1      CAF    CONERAS2        01774
 0720            TS     SKEEP7
 0721   DV1++    CAF    SCON3/8
 0722            TS     Q
 0723            CAF    SCON1/4
 0724            EXTEND
 0725            DV     Q               C(A) = 25252
 0726            TS     SKEEP1
 0727            XCH    LP
 0728            TS     SKEEP2
 0729   DV1+-    CS     Q               +1/4
 0730            EXTEND
 0731            DV     SCON-3/8        C(A) = 52525
 0732            AD     SKEEP1          C(A) = -0
 0733            TS     SKEEP5
 0734            XCH    LP
 0735            TS     SKEEP3
 0736   DV1--    XCH    Q               -1/4
 0737            EXTEND
 0738            DV     SCON-3/8
 0739            TS     SKEEP1
 0740            XCH    LP
 0741            TS     SKEEP4
 0742   DV1-+    XCH    Q
 0743            EXTEND
 0744            DV     SCON3/8
 0745            AD     SKEEP1          C(A) = -0
 0746            TS     SKEEP1
 0747            CS     LP              C(A) = 37776
 0748            AD     SKEEP1          C(A) = 37776
 0749            AD     SKEEP2          C(A) = 37777
 0750            AD     SKEEP3          C(A) = -0
 0751            AD     SKEEP4          C(A) = +1
 0752            AD     SKEEP5          C(A) = +1
 0753  2         TC     -ONECHK -1
R0754   DIVIDE INCREASING BIT POSITIONS BY 1/2  (13 DEVISIONS)
 0755   DV2      CAF    SCON1
 0756   DV2LOOP  TS     SKEEP2
 0757            EXTEND
 0758            DV     SCON1/2
 0759            TS     SKEEP3
 0760            AD     Q               Q = -0
 0761            TS     CYR
 0762            CS     CYR
 0763            AD     SKEEP2
 0764            AD     LP
 0765            TC     -ONECHK -1
 0766            CS     SKEEP3
 0767            AD     A
 0768            TS     A               OVERFLOW AT END OF DV2 SUBROUTINE
 0769            TC     +2
 0770            TC     DV3
 0771            XCH    SKEEP3
 0772            AD     SCON1
 0773  2         TC     DV2LOOP
R0774   DIVIDE SEPARATE DECREASING BIT POSITIONS BY 37777 (14DEVISIONS)
R0775   AFTER C(A) = BEFORE C(A) AND AFTER C(Q) = -C(A)
 0776   DV3      CS     SCON+MAX
 0777            TS     CYR             C(CYR) = 20000
 0778   DV3LOOP  CS     CYR
 0779            CS     A
 0780            EXTEND
 0781            DV     SCON+MAX
 0782            TS     SKEEP4
 0783            AD     Q
 0784            TC     -ZEROCHK
 0785            CCS    SKEEP4
 0786            CCS    A
 0787  2         TC     DV3LOOP
R0788   DEVIDE 37776 BY 37776
R0789   C(A) = +MAX FOR POSITIVE SIGN AND -MAX FOR NEGATIVE SIGN
R0790   C(Q) = - ABSOLUTE VALUE OF DEVISOR = 40001
 0791   DV4++    CAF    DVCON1          37776
 0792            EXTEND
 0793            DV     DVCON1          C(A) = 37777    C(Q) = -37776
 0794            AD     Q
 0795            TC     -ONECHK -1
 0796            XCH    LP              C(LP) = +1
 0797            TS     SKEEP5
 0798            CS     DVCON1
 0799            TS     SKEEP4
 0800   DV4+-    CAF    DVCON1
 0801            EXTEND
 0802            DV     SKEEP4          C(A) = 40000  C(Q) = -37776
 0803            CS     A
 0804            AD     Q
 0805            TC     -ONECHK -1
 0806            AD     LP              C(LP) = 40000
 0807            AD     SKEEP5
 0808            TS     SKEEP5          -37776
 0809   DV4-+    CS     DVCON1
 0810            EXTEND
 0811            DV     DVCON1          C(A) = 40000  C(Q) = -37776
 0812            CS     A
 0813            AD     Q
 0814            TC     -ONECHK -1
 0815            CS     LP              C(LP) = 40001
 0816            AD     SKEEP5
 0817            TS     SKEEP5          -0
 0818   DV4--    CS     DVCON1
 0819            TS     SKEEP4
 0820            EXTEND
 0821            DV     SKEEP4          C(A) = 37777  C(Q) = -37776
 0822            AD     Q
 0823            TC     -ONECHK -1
 0824            CS     LP              C(LP) = +1
 0825            AD     SKEEP5
 0826            TC     -ONECHK
 0827            CCS    NEWJOB
 0828            TC     DUMEXIT
 0829            CCS    SKEEP7
 0830            TC     +2
 0831            TC     SOPTION3 -3
 0832            TS     SKEEP7
 0833  2         TC     DV1++           BACK TO DEVIDE LOOP
 0834            XCH    SCOUNT +2       ADD +1 TO SCOUNT +2 REGISTER AT THIS
 0835            AD     SCON1           POINT OF SELF-CHECK
 0836            XCH    SCOUNT +2
 0837   SOPTION3 CCS    SMODE
 0838            TC     MPNMBRS         STAY IN MPNMBRS LOOP
 0839            TC     SMODECHK
 0840            TC     SMODECHK        SHOULD NOT COME HERE
 0841  2         TC     SMODECHK        END OF SELF-CHECK. START AGAIN
 0843            BANK   1
P0844  2COMPUTER ACTIVITY LIGHT (GREEN LIGHT) MAINTENANCE.
 0846   SMODECHK CCS    NEWJOB          SEE IF ITS TIME FOR A CHANGE.
 0847  2         TC     DUMEXIT
 0848   ADVAN    CCS    SMODE           SEE IF SELF-CHECK IS WANTED
 0849            TC     CCSCHK          YES PULSES ONLY
 0850            TC     SMODECHK
 0851            TC     CCSCHK          YES PULSES + SC + ERASABLE
 0852  2         TC     CCSCHK          YES ALL OF SELF-CHECK
 0858            BANK   11
 0859   DUMEXIT  XCH    Q
 0860            TS     QADRS           STORE RETURN ADDRESS
 0861            CS     TWO             TURN ON GREEN LIGHT (COMP ACT) AND
 0862            INHINT
 0863            MASK   OUT1            GO TO CHANG1.
 0864            AD     TWO
 0865            TS     OUT1
 0866  2         TC     CHANG1
 0867   DUMYJOB  CS     TWO             IDLING AGAIN- TURN OFF ACTIVITY LIGHT
 0868            INHINT
 0869            MASK   OUT1            LIGHT.
 0870            TS     OUT1
 0871            RELINT
 0872  2         TC     QADRS           BACK TO CHECKING COMPUTER
 0873   DUMMYJOB CAF    SMODECON        ENTER AT SMODECHK IF THERE IS A
 0874            TS     QADRS           FRESH START OR A GOJAM
 0875            TC     DUMYJOB
 0876   SMODECON ADRES  SMODECHK
P0877  2C-RELAY TESTER
 0878   CCHK     CAF    BIT15
 0879            TS     DSPTAB +11D
 0880            TS     DSPTAB +12D
 0881  2         TS     DSPTAB +13D
 0882            CAF    BIT7
 0883            INHINT
 0884            TC     WAITLIST
 0885            CADR   CCHKA
 0886            CAF    LCCHKB
 0887  2         TC     JOBSLEEP
 0888   CCHKA    CAF    LCCHKB
 0889            TC     JOBWAKE
 0890  2         TC     TASKOVER
 0891   CCHKB    CAF    TWO
 0892  2         TS     MPAC
 0893            CAF    TEN
 0894  2CCHK0    TS     MPAC +1
 0895            INDEX  A
 0896            CAF    BIT11
 0897            AD     BIT15
 0898            INDEX  MPAC
 0899  2         TS     DSPTAB +11D
 0900            CAF    BIT8
 0901            INHINT
 0902            TC     WAITLIST
 0903  2         CADR   CCHK1
 0904            CAF    LCCHK2
 0905  2         TC     JOBSLEEP
 0906   CCHK1    CAF    LCCHK2
 0907            TC     JOBWAKE
 0908  2         TC     TASKOVER
 0909   CCHK2    XCH    IN3
 0910            CCS    IN3
 0911            TC     CCHKALM
 0912            TC     CCHKALM
 0913            TC     +2
 0914  2         TC     CCHKALM
 0915            CCS    MPAC +1
 0916  2         TC     CCHK0
 0917            CAF    BIT15           TURN OFF LAST RELAY.
 0918            INDEX  MPAC
 0919  2         TS     DSPTAB +11D
 0920            CCS    MPAC
 0921            TC     CCHK0 -2
 0922            CAF    BIT7
 0923            INHINT
 0924            TC     WAITLIST
 0925            CADR   CCHKC
 0926            CAF    LCCHKD
 0927  2         TC     JOBSLEEP
 0928   CCHKC    CAF    LCCHKD
 0929            TC     JOBWAKE
 0930  2         TC     TASKOVER
 0931   CCHKD    XCH    IN3
 0932            CCS    IN3
 0933            TC     +4
 0934            TC     +3
 0935            TC     CCHKALM
 0936  2         TC     CCHKALM
 0937            CAF    SEVEN
 0938            TS     MPAC +2
 0939            CAF    CCHKNV
 0940            TC     NVSUB
 0941            TC     PRENVBSY
 0942   TSTOUT   TC     FREEDSP
 0943            TC     NEWMODE         REVERT TO MODE 00.
 0944            OCT    0
 0945  2         TC     ENDOFJOB
 0946   CCHKALM  TC     ALARM
 0947            OCT    1104
 0948  2         TC     ENDOFJOB
 0949   LCCHKB   CADR   CCHKB
 0950   LCCHK2   CADR   CCHK2
 0951   CCHKNV   OCT    00101
 0952   LCCHKD   CADR   CCHKD
P0953  2DSKY TESTER
 0954   DCHECK   CAF    TEN
 0955   DC9      TS     MPAC
 0956            INDEX  MPAC
 0957            CAF    DSKYCODE
 0958            TS     MPAC +1
 0959            INHINT
 0960            COM
 0961            TS     DSPTAB +9D
 0962            CS     MID5
 0963            MASK   MPAC +1
 0964            COM
 0965            TS     DSPTAB +7
 0966            CS     BIT11
 0967            MASK   MPAC +1
 0968            COM
 0969            TS     DSPTAB
 0970            TS     DSPTAB +1
 0971            TS     DSPTAB +2
 0972            TS     DSPTAB +3
 0973            TS     DSPTAB +4
 0974            TS     DSPTAB +5
 0975            TS     DSPTAB +6
 0976            TS     DSPTAB +8D
 0977            TS     DSPTAB +10D
 0978            CAF    DCNOUT
 0979            TS     NOUT
 0980   DCWAIT   CAF    BIT11           10.24 SEC WAIT
 0981            TC     WAITLIST
 0982            CADR   DC10
 0983            CAF    LDC11
 0984  2         TC     JOBSLEEP
 0985   DC10     CAF    LDC11
 0986            TC     JOBWAKE
 0987  2         TC     TASKOVER
 0988   DC11     CCS    MPAC
 0989  2         TC     DC9
 0990            TC     +2
 0991  2         TC     DC+
 0992            INHINT
 0993            CS     6K              - SIGNS.
 0994            TS     DSPTAB
 0995            TS     DSPTAB +3
 0996            TS     DSPTAB +5
 0997            TS     MPAC
 0998            CAF    THREE
 0999            TS     NOUT
 1000  2         TC     DCWAIT
 1001   DC+      INHINT
 1002            CS     6K
 1003            TS     DSPTAB +1
 1004            TS     DSPTAB +4
 1005            TS     DSPTAB +6
 1006            CS     BIT12
 1007            TS     DSPTAB
 1008            TS     DSPTAB +3
 1009            TS     DSPTAB +5
 1010            CAF    SIX
 1011            TS     NOUT
 1012            CAF    LOW5
 1013            TS     OUT1            TURNS ON DSKY LAMPS.
 1014            RELINT
 1015            CAF    BIT9
 1016   DC++     TS     MPAC            KEEP GLIT ON FOR A WHILE.
 1017            CAF    BIT11           LOOPS FOR ABOUT 40 MS.
 1018            CCS    A
 1019            TC     -1
 1020            CCS    NEWJOB
 1021            TC     CHANG1
 1022            CCS    MPAC
 1023            TC     DC++
 1024  2         TC     TSTOUT
 1025   DSKYCODE OCT    04000           BLANKS
 1026            OCT    07265           00
 1027            OCT    06143           11
 1028            OCT    07471           22
 1029            OCT    07573           33
 1030            OCT    06757           44
 1031            OCT    07736           55
 1032            OCT    07634           66
 1033            OCT    07163           77
 1034            OCT    07675           88
 1035            OCT    07777           99
 1036   DCNOUT   DEC    11
 1037   LDC11    CADR   DC11
P1038  2ENGINE-ON PROGRAM    FOLLOWING A +XXX.XX SECOND DELAY OF LESS THAN 2 MIN
 1039  9UTES, ENGINE WILL REMAIN ON FOR +XXX.XX
 1040   BROKYPRG TC     GRABDSP
 1041            TC     PREGBSY
 1042            CAF    ONE
 1043            TS     CUSSANG
 1044            CAF    V21N24G
 1045            TC     NVSUB
 1046            TC     PRENVBSY
 1047            TC     ENDIDLE
 1048            TC     ENDOFJOB
 1049            TC     -5
 1050            XCH    DSPTEM1
 1051            XCH    LONGTIME
 1052            XCH    DSPTEM1 +1
 1053            XCH    LONGTIME +1
 1054            TS     PLOW
 1055            CCS    CUSSANG
 1056            TC     BROKYPRG +3
 1057            XCH    PLOW
 1058            TC     WAITLIST
 1059            CADR   ENGNON
 1060            TC     FREEDSP
 1061            TC     ENDOFJOB
 1062   ENGNON   CS     BIT13
 1063            MASK   OUT1
 1064            AD     BIT13
 1065            TS     OUT1
 1066            CAF    ENGOFLOC
 1067            TS     CALLCADR
 1068            TC     IBNKCALL
 1069            CADR   LONGCALL
 1070            TC     TASKOVER
 1071   ENGNOFF  CS     BIT13
 1072            MASK   OUT1
 1073            TS     OUT1
 1074            TC     TASKOVER
 1075   V21N24G  OCT    02124
 1076   ENGOFLOC CADR   ENGNOFF
L 001  2INTER-BANK COMMUNICATION
R0001            THE FOLLOWING SUBROUTINES ARE INTENDED TO FACILITATE INTER-BANK
 0002  9 COMMUNICATION. ROUTINES ARE PROVIDED
R0003   FOR JUMPING TO A LOCATION IN ANOTHER BANK, CALLING A SUBROUTINE IN ANOTH
 0004  9ER BANK, AND OBTAINING DATA FROM ANOTHER
R0005  2BANK. IN ADDITION, A ROUTINE IS PROVIDED FOR MAKING UP A RETURN-ADDRESS
 0006  9CADR FOR USE BY THE CALLED SUBROUTINE.
 0007            BANK   2
 0008   BANKCALL TS     ADDRWD          SUBROUTINE CALL WITH TRANSMISSION BOTH
 0009            XCH    Q               WAYS IN A. THE CADR OF THE CALLED
 0010            AD     ONE             ROUTINE SHOULD IMMEDIATELY FOLLOW THE
 0011            TS     Q               TC BANKCALL.
 0012            INDEX  A
 0013  2         CAF    0 -1            PICK UP CADR AND FALL INTO SWCALL.
 0014   SWCALL   TS     TEMQS           SWCALL IS ALOS USED TO CALL SUBROUTINES
 0015            XCH    BANKREG         IN OTHER BANKS, BUT THE CADR ARRIVES IN
 0016            TS     BANKTEM         A. DATA MAY BE TRANSMITTED BACK TO THE
 0017            XCH    Q               CALLING PROGRAM IN A, HOWEVER.
 0018            XCH    TEMQS           RETURN INFORMATION NOW COMPLETE.
 0019            TS     ESCAPE
 0020            MASK   70K             PROVISION FOR CALLING A ROUTINE IN
 0021            CCS    A               FIXED-FIXED (OF QUESTIONABLE VALUE).
 0022            TC     +2              SPECIAL TREATMENT REQUIRED IF NON-ZERO.
 0023  2         TC     +3              INPUT CADR OK AS IS.
 0024            CS     BANKREG         FORM PROPER 12 BIT ADDRESS.
 0025            AD     6K
 0026    +3      AD     ESCAPE          PROPER CADRS COME HERE WITH C(A) = 0.
 0027            XCH    ADDRWD          SO A CAN TRANSMIT WITH BANKCALL.
 0028            INDEX  ADDRWD
 0029  2         TC     0               SETTING Q TO SWRETURN.
 0030   SWRETURN XCH    BANKTEM         RETURN TO CALLER, TRANSMITTING THROUGH A
 0031            TS     BANKREG
 0032            XCH    BANKTEM         RESTORE A AS UPON ARRIVAL TO SWRETURN.
 0033  8         TC     TEMQS           RETURN.
 0034   MAKECADR CAF    ZERO            LEAVES RETURN-ADDRESS CADR (AS SET BY
 0035            AD     TEMQS           SWCALL OR BANKCALL) IN ADDRWD.
 0036            TS     ADDRWD
 0037            AD     32K             SEE IF BANK INFORMATION NEEDED (USUAL).
 0038            TS     OVCTR
 0039  2         TC     Q               ADDRWD SET OK IF NO OVERFLOW (IN FF).
 0040            XCH    OVCTR           CONTAINS LOW 10 BITS ONLY.
 0041            AD     BANKTEM
 0042            TS     ADDRWD          RETURN CADR NOW COMPLETE.
 0043  2         TC     Q
 0044   32K      EQUALS PRIO32
 0045   POSTJUMP XCH    Q               ONE-WAY BANK TO BANK JUMP, WITH NO
 0046            INDEX  A               RETURN ADDRESS. THIS VERSION TRANSMITS
 0047  2         CAF    0               THROUGH A IF DESIRED.
 0048   BANKJUMP TS     BANKREG         SAME AS ABOVE ONLY ADDRESS ARRIVES IN A.
 0049            MASK   LOW10           BANKJUMP AND POSTJUMP MAY BE USED IN
 0050            XCH    Q               INTERRUPT OR UNDER EXEC, BUT BANKCALL
 0051            INDEX  Q               AND SWCALL MAY BE USED ONLY UNDER EXEC.
 0052  4         TC     6000
 0053   DATACALL TS     ESCAPE          SUBROUTINE TO RETRIEVE DATA IN ANOTHER
 0054            XCH    BANKREG         BANK. THE CADR OF THE LOCATION OF INTER-
 0055            XCH    ESCAPE          EST ARRIVES IN A AND ITS CONTENTS ARE IN
 0056            MASK   LOW10           A ON EXIT. THIS MAY BE USED ONLY UNDER
 0057            INDEX  A               EXECUTIVE.
 0058  2         CAF    6000            REQUESTED DATA NOW ACQUIRED.
 0059            XCH    ESCAPE
 0060            TS     BANKREG
 0061            XCH    ESCAPE
 0062            TC     Q
P0063  2         THE FOLLOWING ROUTINES ARE INTERRUPT ANALOGS OF BANKCALL AND SW
 0064  9CALL. BANK-TO-BANK ONLY.
 0065   IBNKCALL TS     RUPTREG1
 0066            XCH    Q
 0067            AD     ONE
 0068            TS     Q
 0069            INDEX  A
 0070  2         CAF    0 -1
 0071   ISWCALL  TS     RUPTREG3
 0072            XCH    BANKREG
 0073            TS     RUPTREG2
 0074            XCH    Q
 0075            XCH    RUPTREG3
 0076            MASK   LOW10
 0077            XCH    RUPTREG1
 0078            INDEX  RUPTREG1
 0079  2         TC     6000
 0080   ISWRETRN XCH    RUPTREG2
 0081            TS     BANKREG
 0082            XCH    RUPTREG2
 0083            TC     RUPTREG3
L      2ALARM AND DISPLAY PROCEDURES
R0001            THE FOLLOWING SUBROUTINE MAY BE CALLED TO DISPLAY A NON-ABORTIV
 0002  9E ALARM CONDITION. IT MAY BE CALLED
R0003  2EITHER IN INTERRUPT OR UNDER EXECUTIVE CONTROL.
R0004  2         CALLING SEQUENCE IS AS FOLLOWS:
R0005            TC     ALARM
R0006            OCT    AAANN           ALARM NO. NN IN GENERAL AREA AAA.
R0007  2                                (RETURNS HERE)
 0008            BANK   1
 0009   ALARM    INHINT
 0010            XCH    Q
 0011  2         TS     ITEMP1
 0012            CCS    FAILREG         SEE IF ONE FAILURE HAS OCCURRED SINCE
A0013                                    THE LAST ERROR RESET.
 0014            TC     MULTFAIL        YES - INDICATE MULTIPLE FAILURES.
 0015            TC     NEWALARM        FIRST SINCE RESET.
 0016  2MULTEXIT XCH    ITEMP1          FREE ITEMP1 BEFORE RELINT.
 0017   ENDALARM RELINT
 0018            INDEX  A
 0019  2         TC     1               RETURN TO CALLER.
 0020   MULTFAIL AD     CSQ             BIT15 = 1 INDICATES MULTIPLE FAILURES.
 0021            TS     FAILREG         CSQ = BIT15 + BIT1.
 0022  2         TC     MULTEXIT
 0023   NEWALARM XCH    ITEMP1          SAVE RETURN ADDRESS FOR CALL TO NOVAC.
 0024  2         TS     FAILREG
 0025  2         TC     PROGLARM        TURN ON THE PROGRAM ALARM LIGHT.
 0026            CAF    PRIO37
 0027            TC     NOVAC
 0028  2         CADR   DOALARM         CALL (SEPARATE) JOB FOR DISPLAY.
 0029            INDEX  FAILREG         (RETURN ADDRESS AT THIS POINT).
 0030            CAF    0
 0031            XCH    FAILREG         SET FAILREG AND GET BACK RETURN ADDRESS.
 0032   NEWALM2  TC     ENDALARM
P0033  2         JOB WHICH CALLS NVSUB FOR ALARM DISPLAY.
 0034            BANK   11
 0035   DOALARM  TC     GRABDSP         DISPLAY FAILREG.
 0036            TC     PREGBSY
 0037            CAF    FAILDISP
 0038            TC     NVSUB
 0039            TC     PRENVBSY
 0040            TC     FREEDSP
 0041  4         TC     ENDOFJOB
 0043  2         SETLOC NEWALM2 +1
 0044   PROGLARM CS     ONE             TURNS ON PROGRAM FAIL LIGHT ON THE
 0045            MASK   OUT1            PANEL.  CALLED ONLY BY ALARM AND ABORT.
 0046            AD     ONE
 0047            TS     OUT1
 0048  2         TC     Q
 0049   FAILDISP OCT    00531
P0050            THE FOLLOWING ROUTINE IS CALLED TO INITIATE AN ABORT. FAILREG I
 0051  9S SET (ACCORDING TO THE MULTIPLE
R0052  2FAILURES CONVENTION) AND A RE-START IS INITIATED BY TC-SELF. THIS IS CAL
 0053  9LED ONLY UNDER RARE CIRCUMSTANCES.
 0054   ABORT    INHINT                 MAY BE CALLED IN INTERRUPT OR UNDER EXEC
 0055            INDEX  Q               PICK UP FAILURE CODE.
 0056            CAF    0
 0057  2         TS     ITEMP1
 0058            CCS    FAILREG         SEE IF THIS IS A MULTIPLE FAILURE.
 0059            TC     SETMULTF        SET BIT 15 TO INDICATE YES.
 0060  2         TC     NEWABORT        FIRST FAILURE.
 0061  2WHIMPER  TC     WHIMPER         NOT WITH A BANG...
 0062   SETMULTF AD     CSQ             RESTORE AND SET BIT15
 0063  2         TC     +3
 0064   NEWABORT TC     PROGLARM        FIRST FAILURE - TURN ON ALARM LIGHT.
 0065            XCH    ITEMP1
 0066    +3      TS     FAILREG
 0067  2         TC     WHIMPER         UNIVERSAL ABORT LOCATION.
 0068   CCSHOLE  XCH    Q
 0069            TS     SFAIL
 0070            TC     ABORT
 0071  2         OCT    1103
R0072  2         MISSION PROGRAM DETECTED FAILURES (ERROR RETURNS TO IMUSTALL, E
 0073  9TC.)
 0074   CURTAINS XCH    Q               PROGRAM DETECTED FLUSH.
 0075            TC     POSTJUMP
 0076  2         CADR   THATSALL        FRESH START AND PROGRAM ALARM.
 0077   ENDFAILF EQUALS
L      2ORBITAL INTEGRATION PROGRAM
 0001            BANK   23
R000101      *** SCALING FACTORS AND ARGUMENTS ***
R000102
 000103 DEL      =      2
 000104 DEL+E    =      2
 000105 2DEL     =      4
 000106 2DEL+E   =      4
 000107 E        =      0
 000108 RSCALE   =      16D
 000109 VSCALE   =      6
 00011  TSCALE   =      27D
 000111 2VSCALE  =      12D
 000112 4RSCALE  =      64D
 000113 R+VSCALE =      22D
R0002  2         FBR3 SETS UP A TIMESTEP CALL TO KEPLER.
 0003   FBR3     TSRT   1
 0004            ROUND  DAD
 0005                   H
 0006                   TSCALE -18D
 0007                   TC
 0008  2         STORE  TAU
 0009            DMP    2
 0010            TSRT   ROUND
 0011            DAD
 0012                   EARTHTAB
 0013                   DT/2
 0014                   12D
 0015                   TET
 0016  2         STORE  TET
 0017            ITC    0
 0018  2                KEPLER
 0019            ITC    0
 0020  2                KEPLER2
 0021   GETKTIME ITC    0
 0022  2                KTIMEN+1
 0023            ITC    0
 0024                   KEPLER3
P0025            THIS ORBITAL KEPLER SUBROUTINE FINDS THE POSITION AND VELOCITY
 0026  9OF THE VEHICLE AFTER TIME FOUND IN
R0027   GIVENT  SINCE RECTIFICATION TO POSITION  RRECT  AND VELOCITY  VRECT  . T
 0028  9HE RESULTING POSITION AND VELOCITY ARE
R0029  4LEFT IN  FOUNDR  AND  FOUNDV  , RESPECTIVELY.
 0030   KEPLER   LXA,1  1               UNIT OF RECTIFICATION POSITION TO 0
 0031            SXA,1  UNIT
 0032                   FIXLOC
 0033                   PUSHLOC
 0034  2                RRECT
 0035            TSLT   0               AND LENGTH OF ORIGINAL IN 6.
 0036                   30D
 0037  2                1
 0038            VSQ    3               A4 TO REGISTER 8.
 0039            ROUND  DMP
 0040            TSLT   DSU
 0041            TSLT   ROUND
 0042                   VRECT
 0043                   6               LENGTH OF POSITION AT RECTIFICATION.
 00435                  2DEL+E -1
 0044                   DP1/2
 0045  2                1
 0046            NOLOD  3               ALPHA TO REGISTER 10.
 0047            TSRT   COMP
 0048            DAD    TSRT
 00485           DDV
 0049                   1
 0050                   DP1/2
 00505                  2DEL+E -1
 0051  2                6
 0052            DOT    1               A1 TO REGISTER 12.
 0053            TSLT   ROUND
 0054                   RRECT
 0055                   VRECT
 00555 2                DEL+E
 0056  8         ITCQ   0
 0057   KEPLER2  UNIT   1
 0058            AXT,2  DOT
 0059                   RCV
 0060                   10D             SET MAXIMUM ITERATION COUNT TO 10.
 0061  2                VCV             IR/2 . VC IN 14
 0062            TSLT   0
 0063                   30D
 0064                   1
 0065  2         STORE  ALPHAM          RC IN ALPHAM.
 0066            TSRT   1
 0067            ROUND  DDV
 0068                   DT/2
 0069                   TSCALE -18D
 0070  2                ALPHAM          Q IN 16.
 0071            TSRT   4
 00715           DDV    DSU
 0072            DMPR   DMPR
 0073            DMPR   AST,2
 0074            TSLT
 0075                   DP1/2
 00755                  2DEL+E -1
 0076                   ALPHAM
 0077                   10D             1/4RC - ALPHA
 0078                   16D             Q (  )
 0079                   16D             Q Q (  )
 0080                   DP1/3
 0081                   1
 0082  2                2DEL +4
 0083            DMPR   1
 0084            TSLT
 0085                   14D
 0086                   16D
 0087  2                DEL +3
 0088            NOLOD  4
 0089            BDSU   DMPR
 0090            BDSU   DSU
 0091            DMP    TSLT
 0092            ROUND  DAD
 0093                   DP1/2
 0094                   -               20
 0095                   DP1/2
 0096                   -               18
 0097                   -               16
 0098                   1
 0099                   XKEP
 0100  2         STORE  XKEP
 0101            ITCQ   0
P0102  4ITERATING EQUATIONS - GIVEN X IN MPAC AND 14D, FIND TIME OF FLIGHT.
 0103   KTIMEN+1 NOLOD  5               FORM ALPHA X-SQUARED AND CALL S AND C.
 0104            DSQ    ROUND
 0105            DMP    TSLT
 0106            ROUND  LXA,1           AND SET PD INDICATOR TO 16 AS WELL.
 0107            INCR,1 SXA,1
 0108            ITA    ITC
 0109                   10D             ALPHA
 0110                   2DEL
 0111                   FIXLOC
 0112                   16D
 0113                   PUSHLOC
 0114                   GMODE
 0115  2                S(X)C(X)
 0116            NOLOD  4               S RETURNS IN MPAC, C ON TOP OF PDL.
 0117            DMP    TSLT
 0118            DMP    TSLT
 0119            DMP    TSLT
 0120            ROUND
 0121                   XKEP
 0122                   4
 0123                   XKEP
 0124                   E +1
 0125                   XKEP
 0126                   1
 0127  2         STORE  23D             A3.
 0128            NOLOD  1
 0129            DMPR
 0130  2                8D
 0131            DMP    2
 0132            TSLT   DMP
 0133            TSLT   ROUND
 0134                   XKEP
 0135                   16D             VALUE OF C.
 0136                   5
 0137                   XKEP
 0138                   E +2
 0139  2         STORE  21D             A2.
 0140            NOLOD  2
 0141            DMP    TSRT
 0142            ROUND  DAD
 0143                   12D             A1.
 0144                   2
 0145            DMPR   1
 0146            DAD
 0147                   6
 0148  2                XKEP            COMPUTED TIME TO PD+18.
 0149            ITCI   0
 0150  2                GMODE
 0151   KEPLER3  NOLOD  1               COMPARE COMPUTED TIME WITH GIVEN TIME.
 0152            BDSU
 0153                   GIVENT
 0154  2         STORE  16D             DIFFERENCE TO REGISTER 16.
 0155            EXIT   0               FOR DUMP ONLY  **************
 0156  2DUMPDUMP TC     INTPRET
 0157            NOLOD  3
 0158            ABS    DSU
 0159            BMN    TIX,2
 0160            ITC
 0161                   KEPSILON        SEE IF WITHIN EPSILON OF GIVEN TIME.
 0162  2                GETRANDV        IF SO, GET R AND V AND EXIT.
 0163                   GETNEWX
 0164  2                GETRANDV
 0165   GETNEWX  DMP    4
 0166            TSLT   ROUND
 0167            BDSU   DMP
 0168            AXC,1  TSLT*
 01685           ROUND
 0169                   10D             ALPHA
 0170                   23D             A3
 0171                   2DEL+E
 0172                   XKEP
 0173                   12D             A1
 0174                   E -3
 01745                  0,1
 0175  2         STORE  18D
 0176            DMP    2
 0177            TSLT   ROUND
 0178            DAD    DAD
 0179                   21D             A2
 0180                   8D              A4
 0181                   1
 0182                   -
 0183  2                6               R0
 0184            DDV    1
 0185            DAD
 0186                   16D
 0187                   18D
 0188                   XKEP
 0189  2         STORE  XKEP
 0190            ITC    0
 0191  8                GETKTIME
R0192  2CONSTANTS.
 0193   KEPSILON OCT    00000
 0194            OCT    00002
 0195   THREE/8  2DEC   .375
 0196   DP1/4    2DEC   .25
 0197   DP1/3    2DEC   .333333333
 0198   DQUARTER EQUALS DP1/4
 0199   POS1/16  2DEC   .0625
 0200   POS1/4   EQUALS DP1/4
 0201   3/8      EQUALS THREE/8
P0202            SUBROUTINE FOR COMPUTING THE UNIVERSAL CONIC FUNCTIONS S(X) AND
 0203  9 C(X). THE ACTUAL OUTPUT OF THIS ROUTINE
R0204  2CONSISTS OF SCALED VERSIONS DEFINED AS FOLLOWS:
R0205                        S (X) = S(64X)                C (X) = C(64X)/4
R0206  2                      S                             S
R0207            IT IS ASSUMED THAT THE INPUT ARRIVES IN MPAC,MPAC+1,AND THAT IT
 0208  9 LIES BETWEEN -30/64 AND 40/64. UPON
R0209  4EXIT, S(X) WILL BE LEFT IN MPAC,MPAC+1 AND C(X) ON TOP OF THE PUSHDOWN L
 0210  9IST.
 0211   S(X)C(X) NOLOD  0               SAVE ARGUMENT
 0212  2         STORE  XSTOREX
 0213            NOLOD  2                        2
 0214            RTB    DSQ             COMPUTE A (X)
 0215            ROUND
 0216                   A(X)
 0217  2         STORE  ASQ
 0218            NOLOD  3                      2          2
 0219            DMP    TSLT            C (X)=A (.25 - 2XA ) TO PUSHDOWN LIST
 0220            ROUND  BDSU             S
 0221            DMPR
 0222                   XSTOREX
 0223                   1
 0224                   POS1/4
 0225  2                ASQ
 0226            TSRT   1                2
 0227            ROUND                  A /4 TO PUSHDOWN LIST
 0228                   ASQ
 0229  2                2
 0230            DMOVE  2                2
 0231            RTB    DSQ             B  TO PUSHDOWN LIST
 0232            ROUND
 0233                   XSTOREX
 0234  2                B(X)
 0235            DMPR   2                            2        2    2
 0236            BDSU   DMPR            LEAVE S (X)=B (.0625-A X)+A /4 IN MPAC
 0237            DAD    ITCQ                   S
 0238                   XSTOREX
 0239                   ASQ
 0240  2                POS1/16
 0241   XSTOREX  =      26D
 0242   ASQ      =      24D
 0243  2         OCT    70707           THIS HAS TO BE NEGATIVE TO TERMINATE EQN
 0244  2A(X)     TC     POLY                A AND B POLYNOMIALS WHOSE COEFFICI-
 0245  2         DEC    10                    ENTS WERE OBTAINED WITH THE *AUTO-
 0246            2DEC    7.071067810 E-1      CURVEFIT* PROGRAM
 0247            2DEC   -4.714045180 E-1
 0248            2DEC    9.42808914  E-2
 0249            2DEC   -8.9791893   E-3
 0250            2DEC    4.989987    E-4
 0251            2DEC   -1.79357     E-5
 0252  4         TC     DANZIG          RE-ENTER INTERPRETER
 0253  2B(X)     TC     POLY
 0254  2         DEC    10
 0255            2DEC    8.164965793 E-1
 0256            2DEC   -3.265986572 E-1
 0257            2DEC    5.90988980  E-2
 0258            2DEC   -4.0085592   E-3
 0259            2DEC    2.781528    E-4
 0260            2DEC   -1.25610     E-5
 0261            TC     DANZIG          RETURN AS BEFORE
P0262  4ROUTINE FOR OBTAINING R AND V, NOW THAT THE PROPER X HAS BEEN FOUND.
 0263   GETRANDV LXA,1  2
 0264            INCR,1 SXA,1
 0265            COMP   VXSC
 0266                   FIXLOC
 0267                   25D
 0268                   PUSHLOC
 0269                   21D             AZ FROM LAST ITERATION.
 0270  2                0               UNIT OF GIVEN POSITION VECTOR.
 0271            DSU    2
 0272            TSLT   VXSC
 0273            VAD    VSLT
 0274                   18D             LAST VALUE OF T.
 0275                   23D             LAST VALUE OF A3.
 0276                   DEL +1
 0277                   VRECT
 0278                   -
 0279  2                1
 0280            NOLOD  1               ADDITION MUST BE DONE IN THIS ORDER.
 0281            VAD    VAD
 0282                   RRECT
 0283  2         STORE  FOUNDR          RESULTING CONIC POSITION.
 0284            NOLOD  1               LENGTH OF ABOVE TO PD+16.
 0285            ABVAL  TSLT
 0286                   1
 0287  2         STORE  16D
 0288            DMP    4
 0289            TSLT   ROUND
 0290            DSU    TSRT
 0291            DDV    VXSC
 02915           VSLT
 0292                   10D             ALPHA.
 0293                   23D             A3
 0294                   2DEL+E
 0295                   XKEP
 02955                  DEL+E
 0296                   16D             LENGTH OF FOUND POSITION.
 0297                   0               UNIT OF RECTIFICATION POSITION.
 0298                   3
 0299            TSRT   3
 0300            DSU    DDV
 0301            VXSC   VAD
 0302            VSLT
 0303                   16D
 0304                   1
 0305                   21D
 0306                   16D
 0307                   VRECT
 0308                   -
 0309                   1
 0310  2         STORE  FOUNDV          THIS COMPLETES THE CALCULATION.
 0311            ITCI   0
 0312                   HBRANCH
P0313  4         THE POSTRUE ROUTINES SET UP THE BETA VECTOR AND OTHER INITIAL C
 0314  9ONDITIONS FOR THE NEXT ACCOMP.
 0315   POSTRUE  LXA,1  3                                                    -
 0316            SXA,1  VSRT
 0317            VAD    LXA,2
 0318            LXA,1  SXA,1
 0319                   SCALDELT        SETS UP SCALE A.
 0320                   SCALEA
 0321                   ALPHAV
 0322                   RSCALE -4
 0323                   RCV             POSITION OUTPUT OF KEPLER.
 0324                   DIFEQCNT
 0325                   SCALER
 0326                   SCALEB          SET UP SCALE B AND G MODE.
 0327  2         STORE  BETAV
 0328            BHIZ   0
 0329                   WMATFLAG        TEST W MATRIX FLAG.
 0330  2                ACCOMP
 0331            VMOVE  0
 0332                   BETAV
 0333            STORE  VECTAB,2        SAVE R/PV IN VECTAB FOR W MATRIX UPDATE.
P0334  4AGC ROUTINE TO COMPUTE ACCELERATION COMPONENTS.
 0335   ACCOMP   UNIT   0               UNITIZE ALPHA VECTOR
 0336                   ALPHAV
 0337  2         STORE  ALPHAV
 0338            DMOVE  0               SAVE LENGTH OF ALPHA VECTOR
 0339                   30D
 0340  2         STORE  ALPHAM
 0341            STZ    0
 0342  2                OVFIND
 0343   ACCOMP2  VSRT   3                       2
 0344            VSQ    LXA,1           NORMED B  TO PD.
 0345            SXA,1  TSLC
 0346            ROUND
 0347                   BETAV
 0348                   1
 0349                   FIXLOC
 0350                   PUSHLOC
 0351  2                S1
 0352            TSLC   1               NORMALIZE (LESS ONE) LENGTH OF ALPHA
 0353            TSRT                     SAVING NORM. SCALE FACTOR IN X1
 0354                   ALPHAM
 0355                   X1
 0356  2                1                C(PDL+2)= ALMOST NORMED ALPHAM
 0357            UNIT   0               SAME PROCEDURE FOR BETA VECTOR
 0358                   BETAV
 0359  2         STORE  BETAV
 0360            DMOVE  0
 0361                   30D
 0362  2         STORE  BETAM
 0363            NOLOD  2
 0364            TSLC   BDDV            FORM NORMALIZED QUOTIENT ALPHAM/BETAM
 0365            TSRT   ROUND
 0366                   X2
 0367                   -
 0368  8                1               C(PDL +2) = ALMOST NORMALIZED RHO.
 0369            LXC,2  3               C(X2) = -SCALE(RHO) + 1.
 0370            XAD,2  XAD,2                 = -S(B)-N(B)+S(A)+N(A)+1
 0371            XSU,2  INCR,2
 0372            NOLOD  TSRT*
 0373                   X2
 0374                   SCALEA
 0375                   X1
 0376                   SCALEB
 0377                   2
 0378  2                0,2
 0379            NOLOD  1               RHO/4 PD +6
 0380            TSRT   ROUND
 0381  2                2
 0382            DOT    2
 0383            TSLT   ROUND            (RHO/4)- 2 (ALPHAV/2.BETAV/2)
 0384            BDSU                                TO PDL +6
 0385                   ALPHAV
 0386                   BETAV
 0387  2                1
 0388            NOLOD  1               Q/4 = RHO(C(PDL +4)) TO PD +8D
 0389            DMPR
 0390  2                4
 0391            NOLOD  1               (Q + 1)/4 TO PD +10D.
 0392            DAD
 0393  2                DQUARTER
 0394            NOLOD  1                          3/2
 0395            SQRT   DMPR            ((Q + 1)/4)    TO PD +12D.
 0396  2                10D
 0397            NOLOD  1                                   3/2
 0398            TSLT   DAD             (1/4) + 2((Q + 1)/4)    TO PD +14D.
 0399                   1
 0400  8                DQUARTER
 0401            DAD    3                              -
 0402            DMPR   TSLT            (G/2)(C(PD +4))B/2 TO PD +16D.
 0403            DAD    DDV
 0404            DMPR   VXSC
 0405                   10D
 0406                   DP1/2
 0407                   8D
 0408                   1
 0409                   THREE/8
 0410                   14D
 0411                   6
 0412  2                BETAV
 0413            VSRT   1               A12 + C(PD +16D) TO PD +16D.
 0414            VAD
 0415                   ALPHAV
 0416  2                3
 0417            DMP    5               -
 0418            TSLC   ROUND           GAMMA TO PD +22D, -SCALE(GAMMA)-1 TO
 0419            BDDV   LXC,1           X1.
 0420            XAD,1  XAD,1
 0421            XAD,1  XAD,1
 0422            COMP   VXSC
 0423                   0
 0424                   12D
 0425                   S2
 0426                   2
 0427                   X2              C(X2) = SCALE (RHO).
 0428                   S2              C(S2) = N((B.B/4)(...)3/2)
 0429                   S1              C(S1) = N(B.B/4)
 0430                   SCALEB
 0431                   SCALEB
 0432  2                16D             RESULT OF PRECEDING EQUATION.
 0433            NOLOD  1               -SCALE(GAMMA)-1 IS LEFT IN X1.
 0434            VSLT*                  ADJUST GAMMA TO SCALE OF -32.
 0435                   31D,1
 0436  2         STORE  FV
 0437            VMOVE  0
 0438                   BETAV
 0439  2         STORE  ALPHAV          BETA VECTOR INTO ALPHA FOR NEXT ACCOMP.
 0440            DMOVE  0
 0441                   BETAM
 0442            STORE  ALPHAM
P0443            THE  OBLATE  ROUTINE COMPUTES THE ACCELERATION DUE THE THE EART
 0444  9HS OBLATENESS. IT USES THE UNIT OF THE
R0445   VEHICLE POSITION VECTOR FOUND IN ALPHAV AND THE DISTANCE TO THE CENTER O
 0446  9F THE EARTH IN ALPHAM. THIS IS ADDED TO
R0447  4THE SUM OF THE DISTURBING ACCELERATIONS IN FV AND THE PROPER DIFEQ STAGE
 0448  9 IS CALLED VIA X1.
 0449   OBLATE   LXA,1  1
 0450            SXA,1  TSLT
 0451                   FIXLOC          SET PUSH-DOWN COUNTER TO ZERO.
 0452                   PUSHLOC
 0453                   ALPHAM
 0454                   1
 0455  2         STORE  ALPHAM
 0456            DMPR   0               P2'/8 TO REGISTER 0.
 0457                   ALPHAV +4       Z COMPONENT OF POSITION IS COS PHI.
 0458  2                3/4
 0459            DSQ    2               P3'/4 TO REGISTER 2.
 0460            TSLT   DMPR
 0461            DSU
 0462                   ALPHAV +4
 0463                   3
 0464                   15/16
 0465  2                3/8
 0466            NOLOD  2               P4'/16 TO REGISTER 4.
 0467            DMPR   DMPR
 0468            TSLT
 0469                   ALPHAV +4
 0470                   7/12
 0471  2                1               TO STACK.
 0472            DMPR   1               FINISH P4'/16.
 0473            BDSU
 0474                   P2'/8
 0475  2                2/3
 0476            NOLOD  1               BEGIN COMPUTING P5'/128.
 0477            DMPR   DMPR
 0478                   ALPHAV +4
 0479  8                9/16
 0480            DMPR   6               FINISH P5:/128 AND TERM USING UNIT
 0481            BDSU   DMP             POSITION VECTOR AT ALPHA.
 0482            TSLT   TSRT
 04822           DDV    DAD
 0483            DMPR   TSRT
 0484            DDV    DAD
 0485            VXSC
 0486                   P3'/4
 0487                   5/128
 0488                   -
 0489                   J4REQ/J3
 0490                   2
 04902                  RSCALE -14D
 0491                   ALPHAM
 0492                   P4'/16
 0493                   2J3RE/J2
 04932                  RSCALE -14D
 0494                   ALPHAM
 0495                   P3'/4
 0496                   ALPHAV
 0497  2         STORE  ALPHAV
 0498            DMP    2               COMPUTE TERM USING IZ.
 0499            TSLT   TSRT
 0500            DDV    DAD
 0501                   J4REQ/J3
 0502                   -
 0503                   1
 05032                  RSCALE -14D
 0504  8                ALPHAM
 0505            TSRT   2
 0506            DMPR   DDV
 0507            DAD    BDSU
 0508                   2J3RE/J2
 0509                   RSCALE -11D
 0510                   -
 0511                   ALPHAM
 0512                   -
 0513                   ALPHAV +4
 0514  2         STORE  ALPHAV +4
 0515            DSQ    4
 0516            DSQ    TSLC
 0517            BDDV   VXSC
 0518            INCR,1 VSLT*           SHIFTS LEFT ON+, RIGHT ON -.
 0519            VAD
 0520                   ALPHAM
 0521                   X1
 0522                   J2REQSQ
 0523                   ALPHAV
 0524                   4RSCALE -52D
 0525                   0,1
 0526                   FV
 0527            STORE  FV
P052701          THE DRAG ROUTINE IS AN INSERTION TO THE OBLATE ROUTINE. IT USES
R052702 THE VEHICLE POSITION VECTOR FOUND IN RCV, THE DISTANCE TO THE CENTER OF
R0527032THE EARTH IN ALPHAM, AND THE VEHICLE VELOCITY VECTOR IN VCV.
R052704          IT APPROXIMATES THE U.S. STD ATMOSPHERE 1962 (OVER THE RANGE OF
R052705 100 TO 300 KM ABOVE SEA LEVEL) WITH AN EQUATION OF THE FORM
R052706                                                   2      3      4  4
R0527072                    RHO = BASERHO /((1 +C1 X +C2 X  +C3 X  +C4 X )  ).
R052708          IT ASSUMES THE VEHICLE MASS TO BE THAT EXPECTED AFTER THE
R0527093FIFTH SPS BURN.
 05271  DENSITY  TSRT   2               IF THE ALTITUDE IS GREATER THAN THE
 052711          DSU    BPL                CEILING ALTITUDE, DENCEIL (300 KM),
 052712          ITC                       SKIP THE DRAG CALCULATIONS AND GO
 052713                 DENCEIL            TO NBRANCH.
 052714                 RSCALE -14D
 052715                 ALPHAM
 052716                 DENSITY1
 0527172                NBRANCH
 052718 DENSITY1 TSRT   2               NORMALIZE ALTITUDE FOR AIR DENSITY
 052719          BDSU   TSLT               FUNCTION SO THAT IT RANGES FROM
 05272           DDV    TSLT               0 TO 1 OVER THE ALTITUDES OF 100 KM
 052721                 DENBASE            TO 300 KM RELATIVE TO THE REFERENCE
 052722                 RSCALE -14D        SPHERE AND STORE IN DENALT.
 052723                 ALPHAM
 052724                 6
 052725                 DENFACT
 052726                 RSCALE -14D
 0527272         STORE  DENALT
 052728 DRAG1    NOLOD  7               CALCULATE SCALAR PART OF DRAG, I.E.,
 052729          DMP    DAD                ((RHO)(AREA)(DRAG COEFF))/MASS.
 05273           DMP    DAD
 052732          DMP    DAD                LEAVE IN PDL AS D. P. NUMBER
 052734          DMP    DAD
 052736          TSLT   DSQ
 052738          DSQ    TSLT
 05274           BDDV
 052742                 DEN4
 052744                 DEN3
 052746                 DENALT
 052748                 DEN2
 05275                  DENALT
 052752                 DEN1
 052754                 DENALT
 052756                 DEN0
 052758                 1
 05276                  2
 052762                 PACD/M
 052764 DRAG2    VXV    2
 052766          AXT,1  VSLT*
 052768          VSU
 05277                  OMEGA
 052772                 RCV
 052774                 23D
 052776                 R+VSCALE,1
 052778                 VCV
 05278           NOLOD  3
 052782          ABVAL  VXSC
 052784          VXSC   AXT,1
 052786          VSLT*  VAD
 052788                 -                  (-1/2)(ABVAL(-V))(V)
 05279                  -                                            -   -
 052792                 1                  (-1/2)(RHO A CD/M)(ABVAL(-V))(V)
 052793                 2VSCALE -12D,1
 052794                 FV
 052796          STORE  FV                 SUM OF PERTURB ACCELERATIONS
 0528   NBRANCH  LXA,1  1
 0529            ITC*
 0530                   DIFEQCNT
 0531                   DIFEQ,1
P0532  4         BEGIN INTEGRATION STEP WITH RECTIFICATION TEST.
 0533   TIMESTEP ABVAL  2               RECTIFICATION REQUIRED IF THE LENGTH OF
 0534            DSU    BMN             DELTA IS GREATER THAN .5 (8 KM).
 0535            ITC
 0536                   YV
 0537                   DP1/4
 0538                   INTGRATE
 0539  2                RECTIFY         CALL RECTIFICATION SUBROUTINE.
 0540   INTGRATE AXT,1  3               INITIALIZE INDEXES AND SWITCHES.
 0541            SXA,1  AXT,1
 0542            SXA,1  TEST
 0543            SWITCH
 0544                   FBR3
 0545                   FBRANCH         EXIT FROM DIFEQCOM
 0546                   POSTRUE
 0547                   HBRANCH         EXIT FROM KEPLER.
 0548                   JSWITCH         0 FOR STATE VECTOR, 1 FOR W MATRIX.
 0549                   +2              TURN IT OFF HERE.
 0550  8                JSWITCH
 0551   DIFEQ0   VMOVE  0               POSITION DEVIATION INTO ALPHA.
 0552                   YV
 0553  2         STORE  ALPHAV
 0554            DMOVE  0               START H AT 0.
 0555                   DPZERO
 0556  2         STORE  H               GOES 0(DELT/2)DELT.
 0557            NOLOD  0               ZERO DIFEQCNT AND REGISTER FOLLOWING.
 0558  2         STORE  DIFEQCNT        GOES 0(-12D)(-24D).
 0559            ITCI   0               BEGIN AT ADDRESS IN HBRANCH.
 0560                   HBRANCH
P0561            THE  RECTIFY  SUBROUTINE IS CALLED BY THE INTEGRATION PROGRAM (
 0562  9AND OCCAISONALLY BY THE MEASUREMENT
R0563  4INCORPORATION ROUTINES) TO ESTABLISH A NEW CONIC.
 0564   RECTIFY  VSRT   1               RECTIFY - FORM TOTAL POSITION AND VEL.
 0565            VAD                    ADJUST SCALE DIFFERENCE (ASSUMED
 0566                   TDELTAV
 0567                   RSCALE -4
 0568                   RCV
 0569  2         STORE  RRECT
 0570            NOLOD  0               SET UP CONIC 'ANSWER' FOR TIMESTEP.
 0571  2         STORE  RCV
 0572            AXT,1  2
 0573            VMOVE  VSLT*
 05735           VAD
 0574                   VSCALE -14D
 0575                   TNUV
 05755                  0,1
 0576                   VCV
 0577  2         STORE  VRECT
 0578            NOLOD  0
 0579  2         STORE  VCV
 0580            AXT,1  1               ZERO DELTA, NU, AND TIME SINCE RECTIFI-
 0581            AST,1  DMOVE
 0582                   12D
 0583                   2
 0584                   DPZERO
 0585  2         STORE  TC
 0586            NOLOD  0
 0587  2         STORE  XKEP            ZERO X.
 0588   ZEROLOOP NOLOD  0               INDEXES CAUSE LOOP TO ZERO 6 CONSECUTIVE
 0589  2         STORE  YV +12D,1       DP NUMBERS (DELTA AND NU ARE ADJACENT).
 0590            TIX,1  1               LOOP OR START INTEGRATION STEP IF DONE.
 0591            ITCQ
 0592                   ZEROLOOP
P0593            THE THREE DIFEQ ROUTINES - DIFEQ+0, DIFEQ+12, AND DIFEQ+24 - AR
 0594  9E ENTERED TO PROCESS THE CONTRIBUTIONS
R0595  4AT THE BEGINNING, MIDDLE, AND END OF THE TIME STEP, RESPECTIVELY. THE UP
 0596  9DATING IS DONE BY THE NYSTROM METHOD.
 0597   DIFEQ+0  VSRT   0
 0598                   FV
 0599                   3
 0600  2         STORE  PHIV
 0601            ITC    0
 0602  2                DIFEQCOM
 0603   7/12     2DEC   .5833333333     ENTRIES MUST BE 12 WORDS APART SO FILL
 0604   9/16     2DEC   9 B -4          HOLES WITH CONSTANTS
 0605   5/128    2DEC   5 B -7
 0606   DIFEQ+12 VSRT   1
 0607            VAD
 0608                   FV
 0609                   1
 0610                   PHIV
 0611  2         STORE  PSIV
 0612            ITC    0
 0613  2                DIFEQCOM -6
 0614   DPZERO   2DEC   0.0
 0615   DP2/3    2DEC   .6666666667
 0616   DIFEQ+24 VXSC   3               DO FINAL CALCULATION FOR Y AND Z.
 0617            VXSC   VSLT
 0618            VAD    VXSC
 0619            VAD
 0620                   PHIV
 0621                   H
 0622                   DP2/3
 0623                   1
 0624                   ZV
 0625                   H
 0626                   YV
 0627  8         STORE  YV
 0628            VSRT   4
 0629            VAD    VXSC
 0630            VXSC   VSLT
 0631            VAD    TEST            SEE IF THIS IS STATE VECTOR OR W COLUMN.
 0632            AXT,1
 0633                   FV
 0634                   3
 0635                   PSIV
 0636                   H
 0637                   DP2/3
 0638                   1
 0639                   ZV
 0640                   JSWITCH
 0641                   ENDSTATE
 0642                   0
 0643  2         STORE  W +72D,2        VELOCITY COLUMN VECTOR.
 0644            VMOVE  0
 0645                   YV
 0646  2         STORE  W +36D,2        POSITION COLUMN VECTOR.
 0647            TIX,2  0
 0648  2                NEXTCOL
 0649            VMOVE  0
 0650                   DELTAV
 0651  2         STORE  TDELTAV
 0652            VMOVE  0
 0653                   NUV
 0654  2         STORE  TNUV
 0655            ITCI   0
 0656  2                STEPEXIT
 0657   NEXTCOL  VMOVE* 0               SET UP NEXT COLUMNS OF W MATRIX.
 0658                   W +36D,2
 0659  2         STORE  YV
 0660            VMOVE* 0
 0661                   W +72D,2
 0662  2         STORE  ZV
 0663            ITC    0
 0664  2                DIFEQ0
 0665   ENDSTATE NOLOD  0
 0666  8         STORE  TNUV
 0667            TSRT   1               UPDATE TIME SINCE RECTIFICATION.
 0668            ROUND  DAD
 0669                   H
 0670                   TSCALE -18D
 0671                   TC
 0672  2         STORE  TC
 0673            BHIZ   0
 0674                   WMATFLAG
 0675  2                NEXTCOL -2
 0676            ITC    0
 0677                   SETWINT         FOR NOW
 0678   SETWINT  AXT,2  4               SET UP W MATRIX EXTRAPOLATION ROUTINES.
 0679            AST,2  AXT,1           PROGRAM DESCRIPTION IS AT  DOW..  .
 0680            SXA,1  SXA,1
 0681            SWITCH AXT,1
 0682            ITC
 0683                   36D
 0684                   6
 0685                   DOW..
 0686                   FBRANCH
 0687                   HBRANCH
 0688                   JSWITCH
 0689                   0
 0690                   NEXTCOL
P0691  4         COMES HERE TO FINISH FIRST TWO DIFEQ COMPUTATIONS.
 0692   -6       VSRT   1               ENTERS HERE FROM DIFEQ+12 MIDPOINT
 0693            VAD                    COMPUTATION.
 0694                   FV
 0695                   2
 0696                   PHIV
 0697  2         STORE  PHIV
 0698   DIFEQCOM DAD    1               INCREMENT H AND DIFEQCNT.
 0699            INCR,1 SXA,1
 0700                   DT/2
 0701                   H
 0702           -       12D
 0703                   DIFEQCNT        DIFEQCNT SET FOR NEXT ENTRY.
 0704  2         STORE  H
 0705            VXSC   2
 0706            VSRT   VAD
 0707            VXSC   VAD
 0708                   FV
 0709                   H
 0710                   1
 0711                   ZV
 0712                   H
 0713                   YV
 0714  2         STORE  ALPHAV
 0715            ITCI   0               EXIT VIA FBRANCH.
 0716  2                FBRANCH
 0717   DIFEQ    EQUALS DIFEQ+0
P0718            ORBITAL ROUTINE FOR EXTRAPOLATING THE W MATRIX. IT COMPUTES THE
R0719   SECOND DERIVATIVE OF EACH COLUMN POSITION VECTOR OF THE MATRIX AND CALLS
R0720   THE NYSTOM INTEGRATION ROUTINES TO SOLVE THE DIFFERENTIAL EQUATIONS. THE
R0721   PROGRAM USES A TABLE OF VEHICLE POSITION VECTORS COMPUTED DURING THE
R0722  2INTEGRATION OF THE VEHICLES POSITION AND VELOCITY.
 0723   DOW..    VSRT   0
 0724                   ALPHAV
 0725  2                4
 0726            UNIT*  2               X1 REFERENCES THE TABLE OF POSITION
 0727            VPROJ  VXSC            VECTORS AND CALLS THE CORRECT DIFEQ PROG
 0728            VSU
 0729                   VECTAB,1
 0730                   ALPHAV
 0731  2                3/4
 0732            DMP    4               CUBE OF LENGTH OF POSITION VECTOR
 0733            TSLC   ROUND           DIVIDES VECTOR IN PUSH-DOWN LIST TO
 0734            BDDV   VXSC            FORM FINAL RESULT.
 0735            XCHX,2 INCR,2          INCREMENT COMPENSATES FOR .5 R IN 30D.
 0736            VSLT*  LXA,2
 0737                   28D
 0738                   30D
 0739                   S1
 0740                   DP1/4
 0741                   -
 0742                   S1
 0743                   3
 0744                   0,2
 0745                   S1
 0746  2         STORE  FV
 0747            ITC*   0               CALL NYSTROM ROUTINES ACCORDING TO X1.
 0748  8                DIFEQ,1
 0749   EARTHTAB 2DEC   .6335627        400 / SQRT(MU).
 0750   15/16    2DEC   15. B -4
 0751   3/4      2DEC   3.0 B -2
 0752   J2REQSQ  2DEC   .335914874
 0753   2J3RE/J2 2DEC   -.003309146
 0754   J4REQ/J3 2DEC   .60932709
 0755   2/3      EQUALS DP2/3
 0756   P2'/8    EQUALS 0
 0757   P3'/4    EQUALS 2
 0758  2P4'/16   EQUALS 4
 0759   DP1/2    2DEC   .5
 075901 DENBASE  2DEC   6455 B-14       EARTHRAD +100 KM SCALED AT 2 TO THE (14)
 075902 DENFACT  2DEC   0.781250        200/256
 075903 DEN4     2DEC   -7.55161127 B-5 CONSTANTS FOR DENSITY FUNCTION SCALED AT
 075904 DEN3     2DEC   21.2523654 B-5     2 TO THE (5)
 075905 DEN2     2DEC   -19.9253572 B-5
 075906 DEN1     2DEC   16.0533069 B-5
 075907 DEN0     2DEC   1.0 B-5
 075908 PACD/M   2DEC   0.0000363648    (RHO AREA CD)/MASS AT 100KM
 075909 OMEGA    2DEC   0               EARTH ROT VECTOR/SQRT(MU) SCALED
 07591           2DEC   0                  AT 2 TO THE (-23) KM TO (-3/2)
 075911          2DEC   0.968892208
 075912 DENALT   =      26D             TEMPORARY STORAGE FOR ALTITUDE
 075913 DENCEIL  2DEC   6655 B-14       EARTHRAD +300 KM SCALED AT 2(14)
L       ORBITAL INTEGRATION FOR 501
 0001  2         SETLOC 60000
 0002   AVETOMD1 AXC,1  2
 0003            ITA    SXA,1
 0004            ITC
 0005                   1
 0006                   MIDEXIT
 0007                   MEASMODE
 0008  2                AVETOMID
 0009   AVETOMD2 AXC,1  1
 0010            ITA    SXA,1
 0011                   2
 0012                   MIDEXIT
 0013  2                MEASMODE
 0014   AVETOMID VMOVE  6
 0015            AXT,1  SXA,1
 0016            AXT,1  SXA,1
 0017            AXT,1  SXA,1
 0018            AXT,1  SXA,1
 0019            AXT,1  SXA,1
 0020            AXT,1  SXA,1
 0021                   ZEROVEC
 0022                   0
 0023                   WMATFLAG        TURN OFF WMATRIX INTEGRATION.
 0024                   RSCALE
 0025                   SCALER          SET SCALE OF POSITION.
 0026                   4
 0027                   SCALDELT        ALSO DEVIATION.
 0028                   18D
 0029                   SCALEDT         AND TIME STEP.
 0030                   EARTHTAB
 0031                   PBODY
 0032                   TESTTET
 0033                   STEPEXIT
 0034  2         STORE  TDELTAV         ZERO POSITION DEVIATION.
 0035            NOLOD  0
 0036  2         STORE  TNUV            ALSO VELOCITY.
 0037            NOLOD  0               AND TIME SINCE RECTIFICATION, TIME,
 0038  8         STORE  TC              AND KEPLER X.
 0039            AXT,1  1
 0040            AST,1
 0041                   12D
 0042  2                6
 0047   RVTOMID  VXSC*  1               TRANSFORM POSITION AND VELOCITY TO
 0048            VXM    VSLT
 0049                   RRECT +12D,1
 0050                   SCLRAVMD +12D,1
 0051                   REFSMMAT
 0052                   2
 0053  2         STORE  RRECT +12D,1
 0054            NOLOD  0
 0055  2         STORE  RCV +12D,1
 0056            TIX,1  0
 0057  2                RVTOMID
 0058            DMOVE  0
 0059                   TAVEGON
 0063  8         STORE  TDEC
 0064   TESTTET  EXIT   0               FOR DUMP ONLY
 00643           TC     INTPRET
 00647           LXC,1  1
 0065            AST,1  TIX,1
 0066                   MEASMODE
 0067                   1
 0068  2                +3
 0069            ITC    0
 0070  2                +4
 0071            TEST   0
 0072                   UPDATFLG
 0073  2                NOSTATE
 0074            STZ    0
 0075  2                OVFIND
 0076            DSU    2
 00765           RTB    TSLT
 0077            DDV
 0078                   TDEC
 0079                   TET
 00795                  SGNAGREE
 0080                   11D
 0081                   EARTHTAB
 0082  2         STORE  DT/2
 0083            BOV    3
 0084            ABS    DSU
 0085            BMN    DAD
 0086            DSU    BMN
 0087                   USEMAXDT
 0088                   DT/2
 0089                   DT/2MIN
 0090                   DODCSION
 0091                   DT/2MIN
 0092                   DT/2MAX
 0093  2                TIMESTEP
 0094   USEMAXDT DMOVE  1
 0095            SIGN
 0096                   DT/2MAX
 0097                   DT/2
 0098  2         STORE  DT/2
 0099            ITC    0
 0100  8                TIMESTEP
 0101   DODCSION ITC    0               RECTIFY TO OBTAIN FULL POSITION
 0102  2                RECTIFY         AND VELOCUTY VECTORS.
 0103            SMOVE  1
 0104            BMN    BZE
 0105                   MEASMODE        TEST MEASMODE.
 0106                   AVEGON          MEASMODE = -1.
 0107  2                IGN-4SEC        MEASMODE = 0.
 0108            AXT,1  1               MEASMODE = +1.
 0109            AST,1
 0110                   12D
 0111  2                6
 0112   RVTOAVE  VXSC*  1               TRANSFORM POSITION AND VELOCITY VECTORS
 0113            MXV    VSLT
 0114                   RRECT +12D,1
 0115                   SCLRMDAV +12D,1
 0116                   REFSMMAT
 0117                   1
 0118  2         STORE  RIGNTION +12D,1
 0119            VXSC*  1
 0120            MXV    VSLT
 0121                   RAVEGON +12D,1
 0122                   SCLRMDAV +12D,1
 0123                   REFSMMAT
 0124                   1
 0125  2         STORE  RAVEGON +12D,1
 0126            TIX,1  0
 0127  2                RVTOAVE
 0128            ITCI   0
 0129  8                MIDEXIT         RETURN.
 0130   AVEGON   VMOVE  0               SAVE POSITION AND VELOCITY AT
 0131                   RRECT           AVERAGE G ON TIME.
 0132  2         STORE  RAVEGON
 0133            VMOVE  0
 0134                   VRECT
 0135  2         STORE  VAVEGON
 0136            LXC,1  1
 0137            AST,1  TIX,1
 0138                   MEASMODE
 0139                   1
 0140  2                RVTOAVE -4
 0141            DAD    1
 0142            AXT,1  SXA,1
 0143                   TDEC
 0144                   12M56S          12 MINUTES, 56 SECS
 0145                   0
 0146                   MEASMODE        MAKE MEASMODE 0.
 0147  2         STORE  TDEC
 0148            ITC    0
 0149  4                TESTTET         CONTINUE INTEGRATION.
 0150   IGN-4SEC VXSC   1               TRANSFORM AND SAVE POSITION ONLY
 0151            MXV    VSLT
 0152                   RRECT
 0153                   SCLRMDAV
 0154                   REFSMMAT
 0155                   1
 0156  2         STORE  RIG-4SEC
 0157            DAD    1
 0158            AXT,1  SXA,1
 0159                   TDEC
 0160                   4SECONDS        ADD 4 SECONDS TO DECISION TIME.
 0161                   1
 0162                   MEASMODE        MAKE MEASMODE +1.
 0163  2         STORE  TDEC
 0164            ITC    0
 0165  8                TESTTET         DO LAST INTEGRATION STEP.
 0166   12M56S   2DEC   77600           12 MINUTES, 56 SECS
 0167   4SECONDS 2DEC   400
 01675  DT/2MIN  2DEC   .000024
 01676  DT/2MAX  2DEC   .65027077 B-1   .075 HOUR MAXIMUM TIME STEP
 0168   INITMSK  OCT    30000
L      2PRELAUNCH ALIGNMENT PROGRAM
R0001   THE PRELAUNCH ALIGNMENT PROGRAM CONSISTS OF TWO PARTS- VERTICAL ERECTION
 0002  9 AND GYROCOMPASSING. IN THE FIRST CASE
R0003   THE Z PIPA INPUTS ARE USED TO CONTROL THE Y GYRO IN SUCH A WAY THAT THES
 0004  9E INPUTS ARE NULLED. A SIMILAR SIT-
R0005   UATION APPLIES TO THE Y PIPA INPUTS AND THE Z GYRO.IN THE GYROCOMPASSING
 0006  9 CASE, THE Y PIPA INPUTS ARE USED IN
R0007   EXACTLY THE SAME FASHION AS IN VERTICAL ERECTION. THE Z PIPA INPUTS ARE
 0008  9SPLIT BETWEEN THE Y GYRO TO HOLD THE
R0009  4VERTICAL AND THE X GYRO TO POINT THE Z AXIS ALONG SOME DESIRED AZIMUTH.
R0010   WHILE PRELAUNCH IS ACTIVE IT STAYS IN THE EXECUTIVE AND USES THE SLEEP/W
 0011  9AKE FEATURES. BY THIS MEANS MOST
R0012  2ERASABLE USAGE IS CONFINED TO A VAC AREA. THE ASSIGNMENT IS AS FOLLOWS-
 0013   SINLAM   =      34D             SIN OF LATITUDE
 0014   COSLAM   =      36D             COSINE OF LATITUDE
 0015   SINAZ    =      2               SIN OF AZIMUTH
 0016   COSAZ    =      4               COSINE OF AZIMUTH
 0017  2         SETLOC 42000
 0018  2TOP1     TC     INTPRET
 0019            DMOVE  1               THIS START DISPLAYS ALL INPUTS FOR CHEK
 0020            RTB    EXIT
 0021                   AZIMUTH
 0022  2                1STO2S
 0023            TC     GRABDSP
 0024  2         TC     PREGBSY
 0025            XCH    MPAC
 0026            TS     DSPTEM1
 0027            CAF    ZERO
 0028  2         TS     DSPTEM1 +1
 0029            TC     CHECKNV         DISPLAY AZIMUTH
 0030  2         OCT    00661           (N.B. CAN NOT BE MODIFIED    ...ALK)
 0031  2         TC     PRELEXIT -1
 0032  2         TC     INTPRET
 0033            TSLT   0
 0034                   LATITUDE
 0035                   2
 0036  2         STORE  DSPTEM1 +1
 0037            DMOVE  1
 0038            RTB    EXIT
 0039                   VAZ
 0040  2                1STO2S
 0041            XCH    MPAC
 0042  2         TS     DSPTEM1
 0043            TC     CHECKNV         DISPLAY VEHICLE AZIMUTH, LATITUDE
 0044  2         OCT    00661           (SEE N.B. ABOVE)
 0045  2         TC     PRELEXIT -1
 00455 2         TC     FREEDSP         DONE WITH DSKY.
 0046  2         TC     INTPRET
 0047   TOP3     DMOVE  1               COMPUTES GIMBAL ANGLES
 0048            RTB    AXT,1
 0049                   SCNBMAT +8D
 0050                   ZEROVAC
 0051                   18D
 0052  2         STORE  0
 0053            COS    0
 0054                   VAZ
 0055  2         STORE  8D
 0056            NOLOD  0
 0057  2         STORE  16D
 0058            SIN    0
 0059                   VAZ
 0060  2         STORE  14D
 0061            NOLOD  1
 0062            COMP   AST,1
 0063                   6
 0064  2         STORE  10D
 0065   TOP33    VMOVE* 1
 0066            VXM    VSLT
 0067                   SCNBMAT +18D,1
 0068                   0
 0069                   1
 0070  2         STORE  XNB +18D,1
 0071            TIX,1  0
 0072  2                TOP33
 0073            ITC    0
 0074  2                MAKEXSM
 0075            ITC    0
 0076  2                CALCGA
 0077            NOLOD  1
 0078            TP
 0079  2         STORE  PRELXGA
 0080  2         EXIT   0
R0081  4ENTER AT TOP2 IF GIMBAL ANGLES, AZIMUTH, LATITUDE ALREADY KEYED IN
 0082   TOP2     TC     BANKCALL        GO AND START CDU ZEROING
 0083  2         CADR   IMUZERO
 0084            TC     NEWMODE
 0085  2         OCT    01              INITIALIZATION.
 0086            CAF    NINETEEN        INITIALIZE ERASABLE MEMORY TO ZEROS
 0087   ZEROS1   XCH    THETAY
 0088            CAF    ZERO
 0089            INDEX  THETAY
 0090            TS     FILTER
 0091            CCS    THETAY
 0092  2         TC     ZEROS1
 0093            CAF    ELEVEN
 0094   ZEROS2   XCH    THETAY
 0095            CAF    ZERO
 0096            INDEX  THETAY
 0097            TS     THETAY
 0098            CCS    THETAY
 0099  2         TC     ZEROS2
 0100            CAF    SIXHNDRD        INITIALIZE FOR 5 MIN VERTICAL
 0101  2         TS     GYROCSW
 0102            TC     BANKCALL        INITIALIZATION COMPLETE SO STALL
 0103            CADR   IMUSTALL
 0104  4         TC     PRELEXIT
 0105            CS     PRELXGA         LOAD DESIRED CDU ANGLES.
 0106            COM
 0107            TS     THETAD
 0108            CS     PRELYGA
 0109            COM
 0110            TS     THETAD +1
 0111            CS     PRELZGA
 0112            COM
 0113            TS     THETAD +2
 0114            TC     PHASCHNG        GO INTO COARSE ALIGN PHASE.
 0115  2         OCT    02103           3.17 RESTART.
 0116   REPL11   TC     BANKCALL
 0117  2         CADR   IMUCOARS
 0118            TC     BANKCALL        NOTHING TO DO BUT SPEEP
 0119            CADR   IMUSTALL
 0120  4         TC     PRELEXIT
 0121   STARTPL2 TC     PHASCHNG        START FINE ALIGN - INITIALIZATION PHASE.
 0122  2         OCT    02203           3.18 RESTART.
 0123   REPL12   TC     BANKCALL
 0124  2         CADR   IMUFINE
 0125            TC     READTIME
 0126            CS     RUPTSTOR
 0127            TS     PREVTIME
 0128            CS     RUPTSTOR +1
 0129            TS     PREVTIME +1
 0130  2         RELINT
 0131            TC     BANKCALL        SLEEP
 0132            CADR   IMUSTALL
 0133  4         TC     PRELEXIT
 0134            TC     NEWMODE         SET MAJOR MODE TO VERTICAL ERECTION
 0135  2         OCT    5               (COUNTING)
 0136            CAF    ZERO
 0137            TS     INFLANG
 0138            TS     INFLANG +1
 0139            TS     INFLANG +2
 0140            TS     INFLANG +3
 0141            TS     INFLANG +4
 0142            TS     INFLANG +5
 0143            TS     PIPAY           SET ALL PIPAS TO ZERO
 0144            TS     PIPAZ
 0145  2         TS     PIPAX
 0146            CAF    NINE
 0147  2         TS     PRELTEMP
 0148            CAF    PLPIPADT        SET UP DELTA TIME FOR IMU COMPENSATION.
 0149            TS     1/PIPADT
 0150            INHINT
 0151            CAF    PRELDT          SET WAITLIST TO WAKE JOB
 0152            TC     WAITLIST
 0153  2         CADR   PRELALTS
 0154            TC     ENDOFJOB
P0155  2         PRELAUNCH WAITLIST TASK - EXECUTED EVERY .5 SEC. IN LOOP.
 0156   PRELALTS CAF    PIPCAD21
 0157  2         TC     ISWCALL
 0158            CAF    TWENTY0
 0159            TC     NEWPHASE
 0160  2         OCT    3
 0161   REDO3.20 CS     TIME1
 0162  2         TS     TBASE3
 0163            CAF    TWO
 0164  2         TS     PIPAGE
 0165            XCH    IN2             TEST IN2 FOR GRR OR LIFT-OFF
 0166            XCH    IN2
 0167            MASK   BITS56
 0168            CCS    A
 0169  2         TC     PRELTERM
 0170            CAF    BIT2            CHECK IF LIFT-OFF HAS OCCURRED
 0171            MASK   FLAGWRD1
 0172            CCS    A
 0173  2         TC     PRELTERM        IT HAS. TERMINATE PRELAUNCH
 0174            CAF    PRELDT          SELF-SUSTAINING WAITLIST CALL
 0175            TC     WAITLIST
 0176  2         CADR   PRELALTS
 0177   NOPLWAIT CAF    PRIO20
 0178            TC     FINDVAC
 0179  2         CADR   PRAWAKE
 0180  2         TC     TASKOVER        RESUME
 0181   PRELTERM CS     RUPTSTOR +1     N.B. READTIME IS DONE IN PIPASR ABOVE
 0182            TS     TIME1GR
 0183            CS     RUPTSTOR
 0184  2         TS     TIME2GR
 0189            CS     TIME1GR
 0190  2         TS     TBASE5
 0191            CAF    ONE
 0192            TC     NEWPHASE
 0193  2         OCT    00005
 0194            CCS    A
 0195            TC     NOPLWAIT
 0196  2         TC     +1
 0197            CAF    2SEC21          CALL READACCS IN 2 SECS
 0198            TC     WAITLIST
 0199  2         CADR   READACCS
 0200  2         TC     NOPLWAIT
 0201   REPRELAL CAF    REPIP21
 0202  2         TC     PRELALTS +1
 0203   PIPCAD21 CADR   PIPASR
 0204  8REPIP21  CADR   REPIPASR
 0205   REDO3.21 TC     PRLRSTOR
 0206  2         TC     RE3.21
 0207  2PRAWAKE  TC     PRLSAVE
 0208            CCS    PHASE5          CHECK IF GRR HAS OCCURED.
 02082           CAF    NINETEEN        3.19 RESTART.
 02085           TC     +2
 0209            CAF    TWENTY1         3.21 RESTART.
 02092           TC     NEWPHASE
 02095 2         OCT    3
 0210            TC     BANKCALL
 0211  2         CADR   1/PIPA
 0212  2RE3.21   TC     INTPRET
 0213            SMOVE  0               ZERO TO THEAT-SOUTH
 0214                   ZEROPR
 0215  2         STORE  THETASTH
 0216            NOLOD  0
 0217  2         STORE  THETAE          ZERO TO THETA EAST
 0218            RTB    1
 0219            SIN
 0220                   ZEROVAC
 0221                   LATITUDE
 0222  2         STORE  SINLAM
 0223            COS    0
 0224                   LATITUDE
 0225  2         STORE  COSLAM
 0226            SMOVE  1
 0227            DSU
 0228                   90DEGAZ
 0229  2                AZIMUTH
 0230            SIN    0
 0231                   0
 0232  2         STORE  SINAZ
 0233            COS    0
 0234  2         STORE  COSAZ
 0235  2         EXIT   0
 0236            CCS    PHASE5          CHECK IF GRR HAS OCCURRED
 0237            TC     PRELTER1
 0238  2         TC     +1
 0239            TC     CHECKMM         CHECK IF VERTICAL ERECTION (UNCONDIT.)
 0240            OCT    5
 0241            TC     +2
 0242  2         TC     NOGYROCM
 0243            TC     CHECKMM         CHECK IF VERTICAL ERECTION (UNCONDIT.)
 0244            OCT    6
 0245            TC     +2
 0246  2         TC     TJL
 0247   DOGYROC  TC     CHECKMM         CHECK IF OPTICAL VERIFICATION
 0248            OCT    3
 0249  2         TC     DOGYROC1
 0254  2JSTERTHR TC     INTPRET
 0255            ITC    0
 0256  2                EARTHRR
 0257   DOGYROC1 TC     NEWMODE
 0258  2         OCT    2
 0259  2DOGYROC2 TC     INTPRET
 0260            ITC    0
 0261  2                GYROCOM
 0262   EARTHRR  ITC    0
 0263  2                EARTHRAT
 0264   ENDOFPR  DMOVE  0
 0265                   PIPTIME
 0266  2         STORE  PREVTIME
 0267  2         EXIT   0
 0268            CCS    PRELTEMP
 0269  2         TC     JUMPY
 0270            CCS    LGYRO           IF BUSY GO AROUND LOOP AGAIN
 0271  2         TC     JUMPY + 1       WAIT TIL NEXT TIME.  PRELTEM = 0 STILL.
 0278   PTORQUE  CAF    ZERO            INITIALIZE TORQUING REGISTERS AND RESET
 0279            XCH    THETAX
 0280            AD     INFLANG +1
 0281            TS     GYROANG +1
 0282            CAF    ZERO
 0283            AD     INFLANG
 0284  4         TS     GYROANG
 0285            CAF    ZERO
 0286            XCH    THETAY
 0287            AD     INFLANG +3
 0288            TS     GYROANG +3
 0289            CAF    ZERO
 0290            AD     INFLANG +2
 0291  2         TS     GYROANG +2
 0292            CAF    ZERO
 0293            XCH    THETAZ
 0294            AD     INFLANG +5
 0295            TS     GYROANG +5
 0296            CAF    ZERO
 0297            AD     INFLANG +4
 0298  2         TS     GYROANG +4
 0299            CAF    ZERO
 0300            TS     INFLANG
 0301            TS     INFLANG +1
 0302            TS     INFLANG +2
 0303            TS     INFLANG +3
 0304            TS     INFLANG +4
 0305  2         TS     INFLANG +5
 0312            CAF    NINE
 0313  2         TS     PRELTEMP
 0314            TC     PHASCHNG
 0315  2         OCT    02603
 0316            INHINT                 SET UP TORQUING JOB
 0317            CAF    PRIO27
 0318            TC     NOVAC
 0319            CADR   SPITGYRO
 0320  2         TC     ENDOFJOB
 0321  2JUMPY    TS     PRELTEMP
 0322            TC     PHASCHNG
 0323  2         OCT    02603
 0324  4         TC     ENDOFJOB
 0327   SPITGYRO CAF    LGYROANG
 0328            TC     BANKCALL
 0329  2         CADR   GYRODPNT
 0330            TC     BANKCALL
 0331            CADR   IMUSTALL
 0332            TC     ENDOFJOB
 0333            TC     ENDOFJOB
P0334  2         VERTICAL ERECTION PROCEDURES.
 0335   NOGYROCM CCS    GYROCSW         COUNT DOWN FOR 5 MIN OF VERTICAL ERECT.
 0336            TC     MORE             IF MORE TO COME.
 0337            TC     NEWMODE         IF NOT, GO INTO GYROCOMP. (MM 02)
 0338  2         OCT    2
 0339  2         TC     +2
 0340  2MORE     TS     GYROCSW
 0341  2TJL      TC     INTPRET
 0342            ITC    0
 0343  2                EARTHRAT
 0344            DSU    1
 0345            DMP    DAD
 0346                   DELVY
 0347                   FILDELY
 0348                   VERECTC3
 0349                   FILDELY
 0350  2         STORE  FILDELY
 0351            AXC,1  1
 0352            AXC,2  ITC
 0353                   2
 0354                   0
 0355  2                VERECT
 0356            DSU    1
 0357            DMP    DAD
 0358                   DELVZ
 0359                   FILDELZ
 0360                   VERECTC3
 0361                   FILDELZ
 0362  2         STORE  FILDELZ
 0363            AXC,1  2
 0364            NOLOD  COMP
 0365            ITC
 0366                   0
 0367  2                VERECT
 0368            ITC    0
 0369                   ENDOFPR
P0370  2         CALCULATION OF EARTH RATE
 0371   EARTHRAT DSU    1
 0372            TSLT   DMPR
 0373                   PIPTIME
 0374                   PREVTIME
 0375                   11D
 0376  2                GOMEGA
 0377            DMP    1                SIN(LAMBDE).DT.LENGTH OMEGA + THETA X
 0378            TSLT   DAD
 0379                   0
 0380                   SINLAM
 0381                   1
 0382                   THETAX
 0383  2         STORE  THETAX
 0384            DMP    1               -COS(LAMBDA).DT.LENGTH OMEGA + THETA STH
 0385            TSLT   BDSU
 0386                   -
 0387                   COSLAM
 0388                   1
 0389                   THETASTH
 0390  2         STORE  THETASTH
 0391            DMP    1                COS(AZIMUTH). SOUTH COMPONENT
 0392            TSLT
 0393                   THETASTH                             TO P.D. LIST
 0394                   COSAZ
 0395  2                1
 0396            DMP    2                Y COMPONENT = SIN(AZIMUTH).EAST COMP
 0397            TSLT   DAD                              + COS(AZIMUTH). SOUTH
 0398            DAD
 0399                   THETAE                                            COMP
 0400                   SINAZ
 0401                   1
 0402                   THETAY
 0403  2         STORE  THETAY
 0404            DMP    1                SIN(AZIMUTH). SOUTH COMPONENT
 0405            TSLT
 0406                   SINAZ                                TO P.D. LIST
 0407  2                THETASTH
 0408                   1
 0409            DMP    2                Z COMPONENT = COS(AZIMUTH.EAST COMP
 0410            TSLT   DSU
 0411            DAD
 0412                   COSAZ                         -SIN(AZIMUTH).SOUTH COMP
 0413                   THETAE
 0414                   1
 0415                   -
 0416                   THETAZ
 0417  2         STORE  THETAZ
 0418            ITCQ   0
P0419  2         COMPUTATION OF GYROCOMPASS COMMAND
 0420   GYROCOM  ITA    1
 0421            DMP    TSLT
 0422                   S2
 0423                   DELVZ
 0424                   COSAZ
 0425  2                1
 0426            DMP    1                DELTA-V(EAST)= COS(AZ).DELTA-V(Z)
 0427            TSLT   DAD
 0428                   DELVY
 0429                   SINAZ
 0430                   1
 0431  2         STORE  DELE
 0432            AXC,1  2
 0433            AXC,2  NOLOD
 0434            COMP   ITC
 0435                   6
 0436                   2
 0437  2                VERECT
 0438            DMP    1                SIN(AZ).DELTA-V(Z)
 0439            TSLT
 0440                   DELVZ
 0441                   SINAZ
 0442  2                1
 0443            DMP    1                DELTA-V(SOUTH= COS(AZ.DELTA-V(Y)
 0444            TSLT   DSU
 0445                   DELVY
 0446                   COSAZ
 0447                   1
 0448  2         STORE  DELS
 0449            DMP    0
 0450                   DELS              C1. DELTA-V(SOUTH) TO P.D. LIST
 0451  2                GYRCMC1
 0452            DMP    1                FILTER = C1. DELTA-V(SOUTH)
 0453            DAD                             +C2. FILTER
 0454                   FILTER
 0455                   GYRCMC2
 0456  2         STORE  FILTER
 0457            NOLOD  2
 0458            DMP    TSLT
 0459            DAD
 0460                   GYRCMC3
 0461                   7
 0462                   THETAX
 0463  2         STORE  THETAX
 0464            DMP    1                EAST-TORQUING ANGLE = C4.FILTER
 0465            TSLT
 0466                   DELS
 0467                   GYRCMC4
 0468                   3
 0469  2         STORE  THETAE
 0470            ITCI   0
 0471                   S2
P0472  2VERTICAL ERECTION SUBROUTINE
R0473   VERECT - VERTICAL ERECTION      ENTERED IN INT. MODE WITH
R0474                     SUBROUTINE            C(X1)= 2 FOR C(MPAC)= DEL-V Y
R0475                                                = 0     C(MPAC)=-DEL-V Z
R0476                                                = 6 FOR C(MPAC)=-DEL-V E
R0477                                    FOR THESE THREE CASES OUTPUT WILL BE
R0478                                                 THETA-Z
R0479                                                 THETA-Y
R0480                                                 THETA-S RESPECTIVELY.
R0481                                    LOOP CONSTANTS ARE DETERMINED BY
R0482                                           C(X2)= 0 NO GYROCOMPASSING
R0483  4                                               2    GYROCOMPASSING
 0484  2VERECT   NOLOD  0
 0485  2         STORE  0
 0486            NOLOD  1
 0487            DAD*
 0488                   INT,1           COMPUTE INTEGRAL OF DEL-V = INT
 0489  2         STORE  INT,1
 0490            DMOVE  1
 0491            DMP*   TSLT
 0492                   0
 0493                   VERECTC1,2
 0494  2                5
 0495            DMP*   1
 0496            DAD*   DAD
 0497                   INT,1            THETA = THETA + C1 DEL-V  + C2 INT
 0498                   VERECTC2,2
 0499                   THETAY,1
 0500  2         STORE  THETAY,1
 0501            ITCQ   0
P0502  2         PRELAUNCH MANUAL REQUEST PROCESSOR.
 0503   STARTPL  CAF    PRIO20          ENTER EXECUTIVE REQUEST ON START-UP.
 0504            TC     FINDVAC
 0505            CADR   STARTPL2
 0506  2         TC     SWRETURN
 0507   PLSTCHK  CS     EIGHT           PRELAUNCH COMES HERE WHENEVER A PHASE
 0508            AD     MPAC            REFERENCE IS MADE TO SEE IF A MANUAL
 0509            CCS    A               REQUEST HAS BEEN ENTERED THROUGH MASTER
 0510            TC     Q               CONTROL. ALL SUCH PHASES ARE LESS THAN 8
 0511   PLPRIO   OCT    24000
 0512  2         TC     +1
 0513            INDEX  MPAC            SEE WHICH MANUAL MODE REQUESTED.
 0514            TC     +0
 0515            TC     TOP1            1 - INITIALIZATION 1.
 0516            TC     TOP2            2 - INITIALIZATION 2.
 0517  2         TC     OPTCHK          3 - DO OPTICAL CHECK
 0518   PLFINCHK CCS    WASKSET         SEE IF IN FINE ALIGN.
 0519            TC     3CHECK
 0520            TC     PRELEXIT        SYSTEM IN BAD SHAPE.
 0521            TC     DOPLCHNG        DO THE CHANGE ANYWAY.
 0522  2         TC     PRELEXIT        SYSTEM IN BAD SHAPE.
 0523   3CHECK   AD     -CCSFINE
 0524            CCS    A
 0525            TC     TOP1
 0526   -CCSFINE OCT    -47             WASKSET IS 50 FOR FINE ALIGN.
 0527  2         TC     TOP1
 0528   DOPLCHNG INDEX  MPAC
 0529            TC     -2
 0530  2         TC     DOPL14
 0531   DOPL15   TC     NEWMODE         SET MAJOR MODE TO GYROCOMPASSING
 0532  2         OCT    2
 0533  2         TC     DOGYROC
 0534   DOPL14   TC     NEWMODE         SET MAJOR MODE TO UNCONDITIONAL VERT-
 0535  2         OCT    6               ICAL ERECTION
 0536            TC     TJL
P0537  2         PRELAUNCH GO-SEQUENCE PROCESSOR.
R0538  2           HAS BEEN DELETED.  SEE GENERAL RESTARTS.   ...DJL
 0539  2FINECODE OCT    50              FINE ALIGN AND COMPUTER CONTROL.
R0540  2         PRELAUNCH TERMINATION.
 0541            TC     FREEDSP
 0542   PRELEXIT TC     BANKCALL        RETURN IMU TO MANUAL CONTROL.
 0543  2         CADR   IMUFINIS
 0544   ENDJ3OUT CS     ONE
 0545            TC     NEWPHASE
 0546  2         OCT    3
 0547            TC     ENDOFJOB
P0548  2PRELAUNCH BANK STORED CONSTANTS
 0549   VERECTC1 2DEC   20. B-5         VERTICAL LOOP CONSTANTS
 0550            2DEC   2 B-5
 0551   VERECTC2 2DEC    .4
 0552            2DEC   .004
 0553   VERECTC3 2DEC   .1
 0554   GYRCMC1  2DEC   0.1
 0555   GYRCMC2  2DEC   0.9
 0556   GYRCMC3  2DEC   -68 B-7
 0557   GYRCMC4  2DEC   4 B-3
 0558   LABLAT   2DEC   .117678252      LATITUDE OF IL-7
 0559   90DEGAZ  2DEC   .25             90 DEG. FROM NORTH = EAST
 0560  2PRELDT   DEC    .5 E 2          HALF SECOND PRELAUNCH CYCLE
 0561  2WAKEPRAD CADR   PRAWAKE         WAKING ADDRESS FOR PRELAUNCH
 0562  2ZEROPR   OCT    0               OUR OWN PERSONAL COPY OF ZERO
 0564   LOMEGA   2DEC   .12169524       EARTH RATE IN IRIG PULSES PER .01 SEC.
 0565   GOMEGA   2DEC   0.97356192      EARTH RATE IN IRIG PULSES/CS
 0566   PLPIPADT DEC    50 B+6
 0567   -.25SC21 DEC    -25
 0568  2NEG.5SEC DEC    -50
 0569   2SEC21   DEC    200
 0570   DP2.5SEC 2DEC   250
 0571   BITS56   DEC    48
 0572   SIDEDAYS 2DEC*  .011605763 E-5B 23* FRACTION OF T2-T1 IN SIDEREAL DAY
 0573   LOCALUP  2DEC   .738876298 B-1
 0574            2DEC   .0              VECTOR AT TIME C(T2,T1) = 0
 0575            2DEC   .673841098 B-1
 0576   LGYROANG ADRES  GYROANG
 0577   IX       DEC    9
P0578  4PRELAUNCH TERMINATION PHASE(AFTER G.R. SIGNAL)
 0579  2PRELTER1 TC     INTPRET
 0580            DAD    0
 0581                   PREVTIME
 0582                   DP2.5SEC
 0583  2         STORE  PREVTIME
 0584            ITC    0
 0585  2                EARTHRAT         CHANGED BY MR. FIXIT.
 0586  2         EXIT   0
 0587            CAF    ZERO
 0588            TS     GYROANG
 0589            TS     GYROANG +2
 0590  2         TS     GYROANG +4
 05902           XCH    THETAX
 05903           TS     GYROANG +1
 05904           XCH    THETAY
 05905           TS     GYROANG +3
 05906           XCH    THETAZ
 05907 2         TS     GYROANG +5
 0591            INHINT
 0592            CAF    PRIO31           CHANGED BY MR. FIXIT.
 0593            TC     NOVAC
 0594            CADR   SPITGYRO
 0595  2         RELINT
 0596            TC     NEWMODE
 0597  2         OCT    04              INERTIAL REFERENCE.
 0598  2         TC     INTPRET
 0599            DAD    0               FORM TIME SINCE LAUNCH VECTOR IN
 0600                   DTEPOCH         INERTIAL Z-X PLANE
 0601                   TIME2GR
 0602  2         STORE  DTEAROT
 0603            ITC    0               BRANCH TO FORCE WT TO LESS THAN 1 REV
 0604  2                EARROT2
 0605            SIN    0               FORM INERTIAL Z-X PLANE LOCAL VERTICAL
 0606  2                LATITUDE
 0607            DMOVE  0
 0608  2                ZERODP
 0609            COS    1
 0610            VDEF
 0611                   LATITUDE
 0612  2         STORE  VAC
 0613            TEST   0               TEST IF BIT IS ON. IF NOT SET IT ON
 0614                   NBSMBIT
 0615  2                NBITON
 0616   ROTXY    AXT,1  1               ROTATE PROJECTION OF LOCAL VERTICAL ON
 0617            AXT,2  ITC             INERTIAL X-Y PLANE ABOUT Z-AXIS
 0618                   2
 0619                   4
 0620  2                ACCUROT
 0621            NOLOD  0
 0622  2         STORE  REFSMMAT        PRESENT LOCAL VERTICAL VECTOR IS X-AXIS
 0623            DMOVE  0
 0624  2                ZERODP
 0625            DMOVE  0
 0626  2                VAC
 0627            COMP   1               FORM UNIT EAST VECTOR AT GRR
 0628            VDEF   UNIT
 0629  2                VAC +2
 0630            NOLOD  1               FORM UNIT SOUTH VECTOR
 0631            VXV    UNIT
 0632  2                REFSMMAT
 0633            DSU    0               FORM AZIMUTH SOUTH OF EAST AT GRR
 0634                   AZIMUTH
 0635                   90DEGAZ
 0636  2         STORE  30D
 0637            NOLOD  1
 0638            SIN    VXSC
 0639  2         STORE  REFSMMAT +12D   (TEMPORARY STORAGE)
 0640            COS    2               FORM SM Z-AXIS
 0641            VXSC   VAD
 0642            UNIT
 0643                   30D
 0644                   -
 0645                   REFSMMAT +12D
 0646  2         STORE  REFSMMAT +12D
 0647            NOLOD  1               FORM SM Y-AXIS BY CROSS PRODUCT
 0648            VXV    UNIT
 0649                   REFSMMAT
 0650  2         STORE  REFSMMAT +6
 0651            VXV    1               INITIALISE VN, GRAVITY GIVEN RN, UNITW
 0652            VXSC
 0653                   UNITW
 0654                   RN              SCALED AT 2(+25) METERS
 0655                   WIE
 0656  2         STORE  VN              SCALED AT 2(+7)M/CS
 0657            VMOVE  1
 0658            ITC
 0659                   RN
 0660  2                CALCGRAV
 0661  2         EXIT   0
 06612           CAF    PRIO31          GUESS WHAT WE:RE DOING
 06614 2         TS     1/PIPADT        GIVE UP   WOULD YOU BELEIVE 2 SECONDS
 0662  4         TC     ENDJ3OUT        TERMINATE PRELAUNCH. (PHASE = INACTIVE.)
 0663   NBITON   SWITCH 1
 0664            ITC
 0665                   NBSMBIT
 0666  2                ROTXY
 0667  8WIE      2DEC*  7.29211505 E-7 B+19*  RAD/CS SCALED AT 2(-19)
 0668   PRLSAVE  XCH    Q               SAVE CURRENT VARIABLES FOR RESTARTS
 0669  2         TS     MPAC +1
 0670            CAF    THIRTEEN
 0671   AGAIN1   TS     MPAC
 0672            INDEX  MPAC
 0673            CS     FILTER
 0674            INDEX  MPAC
 0675            TS     PTEMP
 0676            CCS    MPAC
 0677  2         TC     AGAIN1
 0678            CAF    ELEVEN
 0679   AGAIN2   TS     MPAC
 0680            INDEX  MPAC
 0681            CS     THETAY
 0682            INDEX  MPAC
 0683            TS     PTEMP +14D
 0684            CCS    MPAC
 0685  2         TC     AGAIN2
 0686            CS     PRELTEMP
 0687            TS     PTEMP +26D
 0688            CS     GYROCSW
 0689  2         TS     PTEMP +27D
 0690  2         TC     MPAC +1
 0691   PRLRSTOR XCH    Q               RESTORE OLD VALUES OF VARIABLES
 0692  2         TS     MPAC +1
 0693            CAF    THIRTEEN
 0694   AGAIN3   TS     MPAC
 0695            INDEX  MPAC
 0696            CS     PTEMP
 0697            INDEX  MPAC
 0698            TS     FILTER
 0699            CCS    MPAC
 0700  2         TC     AGAIN3
 0701            CAF    ELEVEN
 0702   AGAIN4   TS     MPAC
 0703            INDEX  MPAC
 0704            CS     PTEMP +14D
 0705            INDEX  MPAC
 0706            TS     THETAY
 0707            CCS    MPAC
 0708  2         TC     AGAIN4
 0709            CS     PTEMP +26D
 0710            TS     PRELTEMP
 0711            CS     PTEMP +27D
 0712  2         TS     GYROCSW
 0713            TC     MPAC +1
P0714  4PRELAUNCH CHECK PROCEDURE (USES THE Z-NORTH SYSTEM OF AXES)
 0715   OPTCHK   INHINT
 0716            CAF    PRIO14
 0717            TC     FINDVAC         CALL WITH PRIORITY OF TWENTY
 0718  2         CADR   CHKOPT
 0719            CAF    BIT3
 0720            TS     MPAC
 0722            TC     PLFINCHK
 0723  2         TC     DOGYROC2
 0724   CHKOPT   TC     GRABDSP
 0725  2         TC     PREGBSY
 0726            TC     NEWMODE
 0727  2         OCT    03
 0728            CAF    ZERO
 0729            TS     STARS
 0730            AD     ONE
 0731            TS     DSPTEM1 +2
 0732            CAF    V06N30P
 0733            TC     NVSUB
 0734            TC     PRENVBSY
 0735            INDEX  STARS
 0736            XCH    TAZ
 0737            TS     DSPTEM1
 0738            INDEX  STARS
 0739            XCH    TEL
 0740  2         TS     DSPTEM1 +1
 0741            TC     CHECKNV
 0742            OCT    00661
 0743            TC     CHEXIT
 0744            XCH    DSPTEM1
 0745            INDEX  STARS
 0746            TS     TAZ
 0747            XCH    DSPTEM1 +1
 0748            INDEX  STARS
 0749  2         TS     TEL
 0750            CCS    STARS
 0751            TC     +3
 0752            CAF    ONE
 0753            TC     CHKOPT +5
 0754  2         TS     DSPTEM1 +2
 0755            CAF    TWO
 0756            TS     DSPTEM1 +1
 0757            CAF    ONE
 0758  2         TS     DSPTEM1         SETS UP STAR NUMBER DISPLAY
 0759            CAF    V06N30P
 0760            TC     NVSUB
 0761            TC     PRENVBSY
 0762            CAF    TWO
 0763            TC     BANKCALL
 0764            CADR   SXTMARK
 0765            TC     BANKCALL
 0766            CADR   OPTSTALL
 0767            TC     CHEXIT
 0768  2         TC     INTPRET
 0769            ITC    0
 0770  2                PROCTARG
 0771            ITC    0
 0772  2                MAKEXSM         COMPUTE DESIRED SM ORIENTAYION IN REC
 0773            MXV    1
 0774            VSLT
 0775                   TARGET1
 0776                   XSM
 0777                   1
 0778            STORE  STARAD
 0779            MXV    1
 0780            VSLT
 0781                   TARGET1 +6
 0782                   XSM
 0783                   1
 0784  2         STORE  STARAD +6
 0785            LXC,1  2
 0786            AXT,2  XSU,2
 0787            SXA,2  ITC
 0788                   MARKSTAT
 0789                   2
 0790                   X1
 0791                   S1
 0792  2                SXTNB
 0793            ITC    0
 0794  2                NBSM
 0795            VMOVE  0
 0796                   STARM
 0797            STORE  VECTEM
 0798            LXC,1  2
 0799            INCR,1 AXT,2
 0800            XSU,2  SXA,2
 0801                   MARKSTAT
 0802           -       7
 0803                   2
 0804                   X1
 0805  2                S1
 0806            ITC    0
 0807  2                SXTNB
 0808            ITC    0
 0809  2                NBSM
 0810            VMOVE  0
 0811                   STARM
 0812  2         STORE  12D
 0813            VMOVE  0
 0814                   VECTEM
 0815  2         STORE  6               TO AVOID ERASABLE BIND
 0816            ITC    0               FIND DESIRED SM IN PRESENT SM
 0817  2                AXISGEN
 0818            ITC    0               CALCULATE REQUIRED PULSE TORQUE IN GYROD
 0819  2                CALCGTA
 0820            VSRT   0
 0821                   OGC
 0822                   8D
 0823  2         STORE  OGC             CHANGE UNITS FROM 2PI TO GYRO PULSES
 0824  4         EXIT   0
 0825            TC     BANKCALL
 0826            CADR   MKRELEAS
 0827            TC     CHECKNV
 0828            OCT    00667
 0829            TC     CHEXIT
 0830  2         TC     INTPRET
 0831            VMOVE  0
 0832                   OGC             GETS SUMMED INTO PRELAUNCH
 0833  2         STORE  INFLANG
 0834  2         EXIT   0
 0837   CHEXIT   TC     FREEDSP
 0838            TC     NEWMODE
 0839            OCT    02
 0840            TC     ENDOFJOB
P0841  4SUBROUTINE TO COMPUTE DESIRED SM AXES IN REC
 0842   MAKEXSM  EXIT   0
 0843            CAF    XVII
 0844            TS     BUF
 0845            CAF    ZERO            ZERO ALL OF XSM
 0846            INDEX  BUF
 0847            TS     XSM
 0848            CCS    BUF
 0849            TC     MAKEXSM +2
 0850            CAF    HALF
 0851  2         TS     XSM             HALF UNIT MATRIX IS COMPUTED
 0852  2         TC     INTPRET
 0853            COS    0
 0854                   AZIMUTH
 0855  2         STORE  XSM +8D
 0856            NOLOD  0
 0857  2         STORE  XSM +16D
 0858            SIN    0
 0859                   AZIMUTH
 0860  2         STORE  XSM +14D
 0861            COMP   0
 0862                   XSM +14D
 0863  2         STORE  XSM +10D
 0864            ITCQ   0
P0865  4ROUTINE TO CONVERT TARGET AZIMUTH AND ELEVATIONS TO VECTORS
 0866   PROCTARG AXT,1  1
 0867            AXT,2  AST,2
 0868                   1
 0869                   12D
 0870  2                6
 0871   PROC1    SMOVE* 1
 0872            TSRT
 0873                   TEL +1,1
 0874                   2
 0875  2         STORE  0
 0876            SIN    0
 0877                   0
 0878            STORE  TARGET1 +12D,2
 0879            COS    0
 0880  2                0               PUSH DOWN THE COSINE OF ELEVATION
 0881            SMOVE* 1
 0882            RTB
 0883                   TAZ +1,1
 0884                   CDULOGIC
 0885  2         STORE  2               THEN Y=0.5SIN(AZ)COS(EL)
 0886            SIN    1
 0887            DMP    TSLT
 0888                   2
 0889                   0
 0890                   1
 0891  2         STORE  TARGET1 +14D,2
 0892            COS    1
 0893            DMP    TSLT
 0894                   2
 0895                   -
 0896                   1
 0897            STORE  TARGET1 +16D,2
 0898            AXT,1  1
 0899            TIX,2  ITCQ
 0900                   0
 0901                   PROC1
P0902  4ROUTINE TO ROTATE COORDINATE SYSTEM BY EARTHRATE TIMES TIME
 0903  9ON
 0904   V06N30P  OCTAL  00630
 0905   XVII     DEC    17
P0906   ROUTINE TO DISPLAY STORED DATA FOR CHECKING AND MODIFICATION,VERB NOUN
R0907  4IS STORED AT L +1,RETURN IS TO L +2 FOR TERMINATE,L +3 FOR GOOD DATA OR
 0908  9PROCEDE
 0909   CHECKNV  XCH    Q
 0910            TS     CHKNVTEM
 0911            INDEX  CHKNVTEM
 0912  2         XCH    A
 0913            TC     NVSUB
 0914            TC     CHECKNV1
 0915            TC     BANKCALL
 0916  2         CADR   FLASHON
 0917            TC     ENDIDLE
 0918            TC     +3
 0919            TC     +4
 0920  2         TC     CHECKNV +2
 0921            INDEX  CHKNVTEM
 0922            TC     Q
 0923            INDEX  CHKNVTEM
 0924  2         TC     Z
 0925   CHECKNV1 CAF    CHECKNV2
 0926            TC     NVSUBUSY
 0927   CHECKNV2 CADR   CHECKNV +2
L      2INFLIGHT ALIGNMENT PROGRAM
 0001  2         SETLOC 44000
 0002   SWAYSTAT CAF    SIX             PROGRAM START AND INITIAL CONDITIONS
 0003            TS     DTCOUNT         SET DTCOUNT = 6
 0004            TS     DTCOUNT +1
 0005            CAF    ONE
 0006            TS     SWAYPULS        SET FIRST PIPA PULSE = +1
 0007            TS     SWAYPULS +1
 0008            CAF    ONE
 0009            TC     WAITLIST
 0010            CADR   SWAYROTY
 0011            CAF    ONE
 0012            AD     PHAZING
 0013            TC     WAITLIST
 0014            CADR   SWAYROTZ
 0015            RELINT
 0016  4         TC     ENDOFJOB
 0017   SWAYROTZ XCH    LP              STORE LP IN LPRUPT
 0018            XCH    LPRUPT
 0019            CAF    ONE             SET INDEX PIPSLECT FOR SELECTION OF
 0020            TS     PIPSLECT        PIPA TO BE INCREMENTED
 0021  2         TC     SWAYROTY +4
 0022   SWAYROTY XCH    LP
 0023            XCH    LPRUPT
 0024            CAF    ZERO
 0025  2         TS     PIPSLECT
 0026            CS     ZERO
 0027            INDEX  PIPSLECT
 0028            XCH    PIPAY
 0029            INDEX  PIPSLECT
 0030            AD     SWAYPULS
 0031            INDEX  PIPSLECT
 0032            XCH    PIPAY
 0033            CCS    A
 0034            AD     ONE             INCREMENT PIPA COUNTER IF PULSE
 0035            TC     ADDINC +1
 0036            TC     ADDINC
 0037  4         TC     ENDCHEC
 0038   ADDINC   CS     ONE
 0039            INDEX  PIPSLECT
 0040            AD     PIPAY
 0041            INDEX  PIPSLECT
 0042  4         XCH    PIPAY
 0043   ENDCHEC  CCS    ENDSROT         IF ENDSROT = +1 EXIT PROGRAM
 0044            TC     CDTTHREE        WHEN DTCOUNT = 6
 0045            TC     TIMCALC
 0046            TC     CDTTHREE
 0047   CDTTHREE CS     SIX
 0048            INDEX  PIPSLECT
 0049            AD     DTCOUNT
 0050            CCS    A
 0051            TC     TIMCALC         EXIT ON DTCOUNT = 6
 0052            TC     ENDSWAY
 0053            TC     TIMCALC
 0054  4         TC     ENDSWAY
 0055   TIMCALC  INDEX  PIPSLECT
 0056            CCS    DTCOUNT
 0057            TC     DIMCOUNT        ACC NOW CONTAINS DTCOUNT - 1
 0058            TC     ALTPULSS        IF DTCOUNT NORZ CHANGE
 0059            TC     ALTPULSS        SIGN OF SWAYPULSE
 0060            NOOP
 0061   ALTPULSS INDEX  PIPSLECT
 0062            CS     SWAYPULS
 0063            INDEX  PIPSLECT
 0064            TS     SWAYPULS
 0065            CAF    THIRTEEN        AND RESTART DTCOUNT AT 13
 0066   DIMCOUNT INDEX  PIPSLECT
 0067            TS     DTCOUNT         DTCOUNT NOW DIMINISHED BY ONE
A0068                                   OR RESET TO 13
 0069            INDEX  PIPSLECT
 0070            INDEX  DTCOUNT         SELECT APPROPRIATE DELTA T FROM LIST
 0071            CAF    DELTA
 0072            EXTEND
 0073            MP     TPERIOD         AND MULTIPLY BY PERIOD
 0074            AD     FIVE            ROUND RESULT
 0075            EXTEND
 0076            MP     ONETENTH
 0077            TS     RUPTSTOR +3     TIME (DT) TILL NEXT INTERRUPT 10MS
 0078   NEXTRUPT CCS    PIPSLECT
 0079            TC     ZPIPRUPT        CALL WAITLIST FOR ZPIPA
 0080            XCH    RUPTSTOR +3
 0081            TC     WAITLIST        CALL WAITLIST FOR YPIPA
 0082            CADR   SWAYROTY
 0083  2         TC     ENDSWAY
 0084   ZPIPRUPT XCH    RUPTSTOR +3
 0085            TC     WAITLIST
 0086            CADR   SWAYROTZ
 0087   ENDSWAY  XCH    LPRUPT          REPLACE LP
 0088            EXTEND
 0089            MP     BIT1
 0090  8         TC     TASKOVER        END OF SWAY ROUTINE
R0091  4MEMORY ASSIGNMENTS
 0092   DTCOUNT  EQUALS AMEMORY         YPIPA STATE COUNTER (0-7)
 0093   SWAYPULS EQUALS AMEMORY +2      NEXT YPIPA PULSE (+1,-1)
 0094   PHAZING  EQUALS AMEMORY +4      TIME DELAY FOR ZPIPA START
A0095                                   INITIALIZED BY KEYBOARD
A0096                                   +XXXXX. E-2 SEC
A0097                                   MUST BE GREATER THAN 00001
 0098   ENDSROT  EQUALS AMEMORY +5      FLAG FOR PROGRAM EXIT
A0099                                   SET BY KEYBOARD
A0100                                   = 00001. TO END SWAYROUTINE
A0101                                   = +00000. TO CONTINUE
 0102   TPERIOD  EQUALS AMEMORY +8D     PERIOD OF SWAY
A0103                                   SET BY KEYBOARD
A0104                                   = XX.XXX SEC
 0105   PIPSLECT EQUALS AMEMORY +9D     INDEX FOR PIPA SELECTION
 0106   DELTA    DEC    .05482          DELTA  T0
 0107            DEC    .03444          1
 0108            DEC    .02833          2
 0109            DEC    .02528          3
 0110            DEC    .02356          4
 0111            DEC    .02259          5
 0112            DEC    .02213          6
 0113            DEC    .02213          7
 0114            DEC    .02259          8
 0115            DEC    .02356          9
 0116            DEC    .02528          10
 0117            DEC    .02833          11
 0118            DEC    .03444          12
 0119            DEC    .1325           13
 0120   ONETENTH DEC    E-1
P0122  4VERIFICATION ASSISTANVE FOR INFLIGHT
 0123   MYTEST   TC     INTPRET                                            456
 0124            DMOVE  0                                                  356
 0125                   ZERODP          SET ANGLES TO ZERO AND TEST        256
 0126  2         STORE  IGC                                                156
 0127            NOLOD  0                                                  056
 0128  2         STORE  MGC                                                -56
 0129            NOLOD  0                                                  +56
 0130  2         STORE  OGC
 0131            ITC    0
 0132  2                DOTEST
 0133            COMP   0               SET ANGLES TO -HALF AND TEST
 0134                   HALFDP
 0135  2         STORE  IGC
 0136            NOLOD  0
 0137  2         STORE  MGC
 0138            NOLOD  0
 0139  2         STORE  OGC
 0140            ITC    0
 0141  2                DOTEST
 0142   CHGIGC   DMOVE  1               CHANGE IGC,MGC, AND OGC AND TEST
 0143            DAD
 0144                   AZIMUTH
 0145                   INCRMT
 0146  2         STORE  IGC
 0147            NOLOD  0
 0148  2         STORE  AZIMUTH
 0149            DSU    1
 0150            BPL    ITC
 0151                   IGC
 0152                   HALFDP
 0153                   OUT
 0154  2                DOTEST
 0155   CHGMGC   DMOVE  1               CHANGE MGC AND OGC AND TEST
 0156            DAD
 0157                   GYROCSW
 0158                   INCRMT
 0159  2         STORE  MGC
 0160            NOLOD  0
 0161  2         STORE  GYROCSW
 0162            DSU    1
 0163            BPL    ITC
 0164                   MGC
 0165                   HALFDP
 0166                   RESETM
 0167  2                DOTEST
 0168   CHGOGC   DMOVE  1               RESET OGC AND TEST
 0169            DAD
 0170                   PRELXGA
 0171                   INCRMT
 0172  2         STORE  OGC
 0173            NOLOD  0
 0174  2         STORE  PRELXGA
 0175            DSU    1
 0176            BPL    ITC
 0177                   OGC
 0178                   HALFDP
 0179                   RESETO
 0180  2                DOTEST
 0181            ITC    0
 0182  2                CHGOGC
 0183   RESETO   COMP   0               RESET OGC TO-HALF
 0184                   HALFDP          LOOP TO CHGMGC
 0185  2         STORE  PRELXGA
 0186            ITC    0
 0187  2                CHGMGC
 0188   RESETM   COMP   0               RESET MGC TO -HALF
 0189                   HALFDP          LOOP TO CHGIGC
 0190            STORE  GYROCSW
 0191            ITC    0
 0192  2                CHGIGC
 0193   INCRMT   2DEC   .20
 0194   OUT      EXIT   0               END OF MAIN
 0195  2LASTWORD TC     ENDOFJOB
 0196   DOTEST   ITA    1
 0197            VMOVE  ITC
 0198                   LATITUDE
 0199                   UNITX
 0200  2                MYROT
 0201            NOLOD  0
 0202  2         STORE  STARAD
 0203            VMOVE  1
 0204            ITC
 0205                   UNITY
 0206  2                MYROT
 0207            NOLOD  0
 0208  2         STORE  STARAD +6D
 0209            VMOVE  0
 0210                   UNITX
 0211  2         STORE  6D
 0212            VMOVE  0
 0213                   UNITY
 0214  2         STORE  12D
 0215            ITC    0
 0216  2                AXISGEN
 0217            ITC    0               SEND NEW VECTORS TO CALCGTA
 0218  2                CALCGTA
 0219            ITCI   0
 0220                   LATITUDE
 0221   MYROT    ITA    1               INITIALIZE
 0222            TEST   SWITCH
 0223                   S2
 0224                   NBSMBIT
 0225                   MYROT1
 0226  2                NBSMBIT
 0227   MYROT1   AXT,1  1               ROTATE X,Z  ABOUT  Y
 0228            AXT,2  DMOVE
 0229                   4
 0230                   0
 0231                   IGC
 0232  2         STORE  30D
 0233            ITC    0
 0234  2                ACCUROT
 0235            AXT,1  1               ROTATE X,Y  ABOUT  Z
 0236            AXT,2  DMOVE
 0237                   2
 0238                   4
 0239                   MGC
 0240  2         STORE  30D
 0241            ITC    0
 0242  2                ACCUROT
 0243            AXT,1  1               ROTATE  Z,Y ABOUT  X
 0244            AXT,2  DMOVE
 0245                   0
 0246                   2
 0247                   OGC
 0248  2         STORE  30D
 0249            ITC    0
 0250  2                ACCUROT
 0251            ITCI   0
 0252                   S2
L      2RTB OP CODES
 0001            BANK   30
R0002  2ROUTINE TO LOAD TIME OF DAY INTO MPAC
 0003   LOADTIME TC     READTIME
 0004            CS     RUPTSTOR
 0005            TS     MPAC
 0006            CS     RUPTSTOR +1
 0007            TS     MPAC +1
 0008            RELINT
 0009            CAF    ZERO
 0010            TS     NEWEQIND
 0011            TS     MPAC +2
 0012            TC     DPEXIT
P0013  2ROUTINE TO RESET THE PUSHDOWN POUNTER
 0014   FRESHPD  CS     FIXLOC
 0015            COM
 0016            TS     PUSHLOC
 0017            TC     RE-ENTER
P0018  2ROUTINE TO ZERO OUT THE FIRST 38 LOCS OF A VAC AREA
 0019   ZEROVAC  CAF    37DEC
 0020   ZVLOOP   TS     TEM2
 0021            AD     FIXLOC
 0022            TS     Q
 0023            CAF    ZERO
 0024            INDEX  Q
 0025            TS     0
 0026            CCS    TEM2
 0027            TC     ZVLOOP
 0028  2         TC     RE-ENTER
 0029   37DEC    DEC    37
P0030  2ROUTINE TO CONVERT IS COMP. NOS. TO 1S COMP.
 0031   CDULOGIC CCS    MPAC            THIS BASIC ROUTINE TESTS CDU ANGLES FOR
 0032            TC     CDULOG1         +OR-SIGN INCLUDING ZERO AND FORMS A DP
 0033            TC     CDULOG1         NUMBER CORRESPONDING TO ANGLE
 0034            TC     +1
 0035            CS     HALF            USE       SMOVE 1
 0036            TC     +2                        RTB
 0037   CDULOG1  CS     ZERO                            CDUXYZ
 0038            XCH    OVCTR                           CDULOGIC
 0039            XCH    MPAC
 0040            EXTEND
 0041            MP     HALF
 0042            XCH    OVCTR
 0043            AD     LP
 0044            XCH    MPAC +1
 0045            XCH    OVCTR
 0046            XCH    MPAC
 0047            TC     DPEXIT
P0048  2ROUTINE TO CONVERT 1S COMP. NOS. TO 2S COMP.
 0049   1STO2S   CAF    ZERO
 0050            XCH    MPAC +1
 0051            DOUBLE
 0052            TS     OVCTR
 0053            CAF    ZERO
 0054            AD     MPAC
 0055            AD     MPAC
 0056            CCS    A
 0057            AD     ONE
 0058            TC     +2
 0059            COM
 0060   ZYXR     TS     MPAC            AND MAYBE OVERFLOW.
 0061  2         TC     DPEXIT
 0062            INDEX  A               HANDLE OVERFLOW IN STANDARD ANGULAR WAY.
 0063            CAF    LIMITS
 0064            AD     MPAC            GUARANTEED NO OVERFLOW.
 0065  8         TC     ZYXR
 0066   READPIPS INHINT
 0067            CS     PIPAX
 0068            CS     A
 0069            INDEX  FIXLOC
 0070            TS     VAC
 0071            CS     PIPAY
 0072            CS     A
 0073            INDEX  FIXLOC
 0074            TS     VAC +2
 0075            CS     PIPAZ
 0076            CS     A
 0077            INDEX  FIXLOC
 0078            TS     VAC +4
 0079            RELINT
 0080            CAF    ZERO
 0081            INDEX  FIXLOC
 0082            TS     VAC +1
 0083            INDEX  FIXLOC
 0084            TS     VAC +3
 0085            INDEX  FIXLOC
 0086            TS     VAC +5
 0087            TS     NEWEQIND        LOAD INDICATOR OFF.
 0088   VMODE    CS     ZERO
 0089  4         TC     DPEXIT +1
 0090   PULSEIMU INDEX  FIXLOC          ADDRESS OF GYRO COMMANDS SHOULD BE IN X1
 0091            CS     X1
 0092            COM
 0093            TC     BANKCALL
 0094  2         CADR   GYRODPNT
 0095  8         TC     RE-ENTER
 0096   SGNAGREE TC     BANKCALL
 0097            CADR   TPAGREE
 0098  4         TC     DPEXIT
R0099   ROUTINE TO COMPLETE OPTICS TRUNNION ANGLE CONVERSION FROM COUNTER
R0100   READING TO DP REVOLUTIONS. CALLS TO TRUNLOG SHOULD BE IMMEDIATELY
R0101   PRECEDED BY A CALL TO CDULOGIC.  (NO NEED TO CHECK SXT POWER-ON BIT.)
 0106   TRUNLOG  CAF    10DEGS          CORRECT FOR 20 DEG OFFSET (CDULOGIC
 0107            AD     MPAC             ALREADY SHIFTED IT RIGHT ONE) AND SHIFT
 0108            TS     MPAC             RIGHT TWO ADDITIONAL PLACES.
 0109            CAF    QUARTER
 0110            TC     SHORTMP
 01105 2         TC     DANZIG          WITH PD IF AT END W/ NO ADDRESSES.
 0111  810DEGS   DEC    3600            HALF OF SXT TRUNION OFFSET
 0112   INCRCDUS CAF    LOCTHETA
 0113            TS     BUF
 0114            CAF    TWO
 0115   INCRCDU2 TS     BUF +1
 0116            DOUBLE
 0117            AD     VACLOC
 0118            INDEX  A
 0119            CS     0
 0120            COM
 0121            TC     BANKCALL
 0122  2         CADR   CDUINC
 0123            CCS    BUF
 0124            TS     BUF
 0125            CCS    BUF +1
 0126            TC     INCRCDU2
 0127  2         TC     VMODE
 0128   LOCTHETA ADRES  THETAD +2
P0129  2   LOG FUNCTION SUBROUTINE
R0130      INPUT... X  (IN IMPAC)
R0131  2  OUTPUT... -LN(X)/32    ( IN MPAC.  SCALED BY 32TO FIT LOG OF 2EXP-28.
 0132    LOG     TC     SWAPLOC          CALLED BY     RTB   LOG
 0133  2         TC     INTPRET
 0134            NOLOD  2               GENERATES LOG BY SHIFTING ARG UNTIL
 0135            TSLC   BDSU            IT LIES BETWEEN .5 AND1.  THE LOG OF
 0136            EXIT                   THIS PART IS FOUND AND THE LOG OF THE
A0137                                   SHIFTED PART IS COMPUTED AND ADDED IN.
 0138                   31D             SHIFT COUNT STORED IN LOC 31 OF VAC AREA
 0139  2                NEARONE
 0140            TC     POLY            GETS LOG OF PRINCIPLE PART.
 0141            DEC    6
 0142            2DEC   0
 0143            2DEC   .031335467
 0144            2DEC   .0130145859
 0145            2DEC   .0215738898
 0146            CAF    ZERO
 0147            TS     MPAC + 2
 0148            CAF    CLOG1/2 +1
 0149            XCH    MPAC +1
 0150            TS     LOGTEM +1
 0151            CAF    CLOG1/2
 0152            XCH    MPAC
 0153            XCH    LOGTEM
 0154            INDEX  FIXLOC
 0155            CS     31D             LOAD POSITIVE SHIFT COUNT IN A.
 0156  2         TC     SHORTMP2        MULTIPLY BY SHIFT COUNT.
 0157            XCH    MPAC +2
 0158            XCH    MPAC +1
 0159            XCH    MPAC            RESULT WAS IN MPAC +1 AND MPAC +2.
 0160            TC     DAD             ADD IN PREVIOUS RESULT. LEFT IN LOGTEM.
 0161            ADRES  LOGTEM
 0162            TC        SWAPLOC
 0163  2         TC     DPEXIT
 0164   CLOG1/2  2DEC   .0216608494
P0165  2         SUBROUTINE TO COMPUTE THE ARCTAN OF THE RATIO OF TWO FUNCTIONS.
R0166  2         CALLED AS THOUGH A BASIC SUBR...    RTB       ARCTAN
 0167   ARCTAN   TC     SWAPLOC          ARCTAN COMPUTES ARCTAN(VACZ/VACX)
 0168            TC     INTPRET                                ---------
 0169   INATAN   DSQ    0                RESULTHAS VALUE BETWEEN + AND - 1/2
 0170  2                VACZ             (180 DEG. SCALED) IS LEFT IN MPAC.
 0171            DSQ    4
 0172            DAD    BOV
 0173            BZE    SQRT
 0174            BDDV   BOV
 0175            TSRT   ASIN
 0176                   VACX
 0177                   -
 0178                   2BIG
 0179                   ATAN0/0
 0180                   VACZ
 0181                   ATAN=90
 0182  2                1                AND PUSH IT DOWN
 0183            BMN    2
 0184            LODON  DMOVE
 0185            EXIT
 0186                   VACX
 0187                   NEGVX
 0188  2                -               (INACTIVE NEEDED FOR PUSH-UP).
 0189   ATANDUN  TC     SWAPLOC
 0190  4         TC     DPEXIT
 0191   NEGVX    COMP   2               IF VACX NEGATIVE, CHNAGE RESULT.
 0192            BPL    DAD
 0193            RTB
 0194                   -
 0195                   NEGOUT
 0196                   HALVE
 0197                   ATANDUN
 0198   NEGOUT   NOLOD  1
 0199            DSU    RTB
 0200                   HALVE
 0201  2                ATANDUN
 0202    2BIG    NOLOD  1
 0203            VSRT   ITC
 0204                   1
 0205  2                INATAN
 0206   ATAN0/0  DMOVE  1
 0207            RTB
 0208                   3ZEROS          WHAT SHOULD ARCTAN(0/0) =
 0209  2                ATANDUN
 0210   ATAN=90  SIGN   1
 0211            RTB
 0212                   FOURTH
 0213                   VACZ
 0214                   ATANDUN
P0215  2    BASIC SUBROUTINE TO SAVE INTERPRETER REGISTERS  (SAME BANK AS RTBS).
 0216   SWAPLOC  XCH    LOC              SUBROUTINE TO SWAP LOC, ADRLOC, AND
 0217            INDEX  FIXLOC           ORDER REGISTERS WITH LOCATIONS 28,
 0218            XCH    28D              29, AND 30 IN TEMP AREA.
 0219            TS     LOC
 0220            XCH    ADRLOC           USEFUL FOR USING INTERPRETER IN SUBROUT
 0221            INDEX  FIXLOC           AND THEN ABLE TO CONTINUE IN MIDDLE OF
 0222            XCH    29D             CURRENT EQUATIONS.
 0223            TS     ADRLOC           USE...     TC   SWAPLOC
 0224            CS     BANKSET         PACK INTERPRETIVE BANK AND ORDER IN 30D.
 0225            AD     ORDER
 0226            INDEX  FIXLOC                      .........
 0227            XCH    30D                         TC   SWAPLOC
 0228            TS     ORDER                       TC   DANZIG
 0229            MASK   LOW7
 0230            XCH    ORDER
 0231            MASK   BANKMASK
 0232            COM
 0233            TS     BANKSET
 0234            TC     Q
P0235         SUBROUTINE TO SET MPACS TO POS OR NEG MAX DEPENDING ON SIGN MPAC
 0236   SIGNMPAC CCS    MPAC
 0237            TC     SETPOS
 0238            TC     SETPOS
 0239            TC     +1
 0240            CAF    NEGSIGN
 0241            TS     MPAC
 0242            TS     MPAC + 1
 0243            TS     MPAC + 2
 0244            CAF    ZERO
 0245            TS     NEWEQIND
 0246  2         TC     DPEXIT
 0247   SETPOS   CAF    POSMAX
 0248  8         TC     -7
 0249   V1STO2S  CAF    TWO             THIS ROUTINE TAKES GIMBAL ANGLES SCALED
 0250            TS     VBUF            2PI IN THE VAC AND LEAVES 2S COMPLIMENT
 0251            DOUBLE                 ANSWERS IN MPAC.....MPAC +2
 0252            AD     VACLOC          BASE ADDRESS OF VECTOR ACCUMULATOR
 0253            TS     VBUF +1
 0254            INDEX  VBUF +1
 0255            CS     Q
 0256            COM
 0257            DOUBLE
 0258            TS     OVCTR           SKIPS ON OVERFLOW
 0259            CAF    ZERO
 0260            INDEX  VBUF +1
 0261            AD     A
 0262            INDEX  VBUF +1
 0263            AD     A
 0264            CCS    A               TEZT FOR NEGATIVE MAJOR PART
 0265            AD     ONE
 0266            TC     +2
 0267            COM
 0268   ZYXW     INDEX  VBUF
 0269            TS     MPAC
 0270            TC     ZYXWV
 0271            INDEX  A
 0272            CAF    LIMITS          NORMAL PROCEDURE FOR ANGLE OVERFLOW
 0273            INDEX  VBUF
 0274            AD     MPAC
 0275  2         TC     ZYXW
 0276   ZYXWV    CCS    VBUF
 0277            TC     V1STO2S +1
 0278            TS     NEWEQIND
 0279            CS     TWO
 0280            TC     DPEXIT +1
 0281   V2STOD1S CAF    TWO             THIS ROUTINE TAKES CDU ANGLES IN MPAC...
 0282            TS     VBUF            MPAC +2 AND CONVERTS TO ANGLES SCALED
 0283            DOUBLE                 2PI IN THE VAC LOCATIONS
 0284            AD     VACLOC
 0285  4         TS     VBUF +1
 0286            INDEX  VBUF
 0287            CS     MPAC
 0288            EXTEND
 0289            MP     NEG1/2
 0290            TS     VBUF +2         UNCORRECTED UPPER PARTS
 0291            CCS    LP              TEST SIGN OF LOWER WORD
 0292            CAF    ZERO
 0293            TC     +3              POSITIVE CASE OK
 0294            TC     +1
 0295            CS     HALF            NEGATIVE CASE
 0296            AD     LP              CORRECT LOWER WORD
 0297            INDEX  VBUF +1
 0298            TS     Q               STORE  LOWER WORD
 0299            CAF    ZERO            DEAL WITH OVERFLOW STANDARD WAY
 0300            AD     VBUF +2
 0301            INDEX  VBUF +1
 0302  2         TS     A               STORE UPPER WORD
 0303            CCS    VBUF
 0304  2         TC     V2STOD1S +1
 0305            CS     ZERO
 0306            TS     MODE
 0307            TC     DANZIG
P0308  4ROUTINE TO FREE DSKY
 0309   DSPFREE  TC     FREEDSP
 0310            TC     RE-ENTER
P0311  2      FINAGLE TO GET OGC CORRECTED TO NEAREST POINT ON 16 SPEED.
 0312   CDUXFIX  CS     OGC             INTERPRETIVE SCALING.   (REVS)
 0313            EXTEND
 0314            MP     BIT12           MULTIPLY BY 1/8 TH.
 0315  2         TS     MPAC + 1        SAVE RESULT.
 0316            CAF    BIT11           1/16 TH.
 0317            AD     THETAD          TO FIND NEAREST ZERO POINT.
 0318            MASK   HI4             DROPS BACK TO LOWER (MORE NEG) 1/8TH.
 0319            TS     K1ROLL
 0320            TC     +3              SKIPS THIS IF ADDITION OVERFLEW.
 0321            CAF    POSMAX          IN THAT CASE, USE POSMAX.
 0322  2         TS     K1ROLL
 0323            CS     K1ROLL          THE CURRENT NEAREST ZERO POINT ON 16 SPD
 0324            AD     THETAD          DELTA FROM ZERO POINT.
 0325            AD     MPAC + 1        MINUS NEW COMMAND
A0326                                     A = DELTHETAD -DELNEWCOMMAND
 0327            AD     BIT11           PLUS 1/16 TH.  (180 DEG SCALED.)
 0328            CCS    A               IF NEG, CHANGE IS MORE THAN + 180 DEG.
 0329            TC     CHECKNEG        OK, CHECK OTHER WAY.
 0330   NEG1/8+1 OCT    74000
 0331            CS     BIT12           CHANGE TOO BIG, MOVE TO NEXT LOWER 0-PT.
 0332   NEWBIAS  AD     K1ROLL          (NEG ZERO OF CCS COMES HERE ALSO, SO..)
 0333            TS     K1ROLL
 0334  2         TC     GETNUOGC        SKIPPING ON OVERFLOW.
 0335            INDEX  A
 0336            CS     LIMITS
 0337  2         TC     NEWBIAS  + 1    AND SET PROPER LIMIT VALUE.
 0338   CHECKNEG AD     NEG1/8+1
 0339            CCS    A               CHECK OTHER SIDE.
 0340            CAF    BIT12           ADD 108 TH TO K1ROLL.
 0341            TC     NEWBIAS         (+ 0 IMPOSSIBLE.)
 0342  2         TC     +1              NO NEED TO CHANGE BIAS.
 0343   GETNUOGC CS     MPAC + 1        NEW DELTA.
 0345            AD     K1ROLL          AS MODIFIES IF IT WAS NEC.
 0346            TS     MPAC
 0347  2         TC     +4              DETECT OVERFLOW.
 0348            INDEX  A
 0349            CAF    LIMITS          GO TO POSMAX FROM NEGMAX. (AND VICEVERSA
 0350  2         AD     MPAC            AND GET NEW ANGLE.
 0351            EXTEND
 0352            MP     BIT14           RESCALE TO REVS.
 0353            TS     OGC
 0354  4         TC     RE-ENTER        TO NEXT EQUATION WITHOUT PUSHING DOWN.
 0355   HI4      OCT    74000
L       IMU PERFORMANCE TESTS 1
 0001  2         SETLOC 24000
 0002   ALGNTST  CS     ZERO            SXT-NB-IMU FINE ALIGNMENT TEST
 0003            TS     CDUIND
 0004            TC     BANKCALL
 0005  2         CADR   IMUZERO
 0006   OPTDATA  CAF    ZERO            CHECK TARGET AZIMUTH AND ELEVATION
 0007            TS     STARS
 0008            AD     ONE
 0009            TS     DSPTEM1 +2
 0010            CAF    V05N30E
 0011            TC     NVSUB
 0012            TC     PRENVBSY
 0013            INDEX  STARS
 0014            XCH    TAZ
 0015            TS     DSPTEM1
 0016            INDEX  STARS
 0017            XCH    TEL
 0018            TS     DSPTEM1 +1
 0019            TC     CHECKLD         R1 = AZIMUTH = +XXX.XX
 0020            OCT    00661           R2 = ELEVATION = +XX.XXX
 0021            TC     ENDTEST
 0022            XCH    DSPTEM1
 0023            INDEX  STARS
 0024            TS     TAZ
 0025            XCH    DSPTEM1 +1
 0026            INDEX  STARS
 0027            TS     TEL
 0028            CCS    STARS
 0029            TC     +3
 0030            CAF    ONE
 0031  2         TC     OPTDATA +1
 0032            TS     COARSAGN
 0033            TS     EROPTN
 0034            TS     TIME2
 0035            TS     NDXCTR
 0036            AD     72DEC
 0037  2         TS     MAXPTS2
 0038            TC     BANKCALL
 0039  2         CADR   LATAZCHK
 0040            TC     BANKCALL
 0041  2         CADR   TARGSM
 0042   POSLOAD  CAF    V21N30E         R1 POSITION 1,2,3
 0043            TC     NVSUB
 0044            TC     PRENVBSY
 0045            TC     ENDIDLE
 0046            TC     ENDTEST
 0047            TC     -5
 0048            XCH    DSPTEM1
 0049            TS     POSITON
 0050            COM
 0051            MASK   BIT3
 0052            CCS    A
 0053            TC     +2
 0054            TC     DSPYLOAD
 0055            CAF    ONE
 0056            TS     COAROFIN
 0057            TC     BANKCALL
 0058            CADR   FINDNAVB        COARSE ALIGN MARKS
 0059            TC     BANKCALL
 0060            CADR   IMUSTALL        WAIT FOR IMUZERO COMPLETION
 0061  4         TC     ENDTEST
 0062            TC     BANKCALL
 0063  2         CADR   POSNJUMP
 0064   POSNRETN TC     BANKCALL
 0065  2         CADR   PUTPOSX
 0066            CCS    COARSAGN
 0067            TC     +2
 0068            TC     +4
 0069            CCS    NEWJOB
 0070            TC     CHANG1
 0071            TC     -5
 0072  2         TC     OGCZERO
 0073            TC     BANKCALL
 0074            CADR   IMUFINE         INITIATE FINE ALIGN MODE
 0075            TC     BANKCALL
 0076            CADR   IMUSTALL        WAIT FOR IMUFINE COMPLETION
 0077  2         TC     ENDTEST
 0078            CAF    ZERO
 0079            TS     COAROFIN
 0080            TC     BANKCALL
 0081            CADR   FINDNAVB        FINE ALIGN MARKS
 0082            TC     FREEDSP
 0083            TC     BANKCALL
 0084            CADR   SMDCALC         FINE ALIGN TORQUING
 0085            TC     BANKCALL
 0086            CADR   IMUSTALL        WAIT FOR PULSING COMPLETION
 0087  8         TC     ENDTEST
 0088   ERFINAL  TC     BANKCALL
 0089            CADR   STOPHOR
 0090   ERRETN   CCS    EROPTN
 0091            TC     ERFINAL
 0092            TC     +2
 0093            TC     ENDTEST
 0094            INHINT
 0095            TC     TPTIME
 0096            RELINT
 0097            CAF    ZERO
 0098            TS     PIPAX
 0099            TS     PIPAY
 0100            TS     PIPAZ
 0101            TS     STOREPL
 0102            TS     NDXCTR          UPDATE STORAGE LOCATION
 0103            TC     BANKCALL
 0104            CADR   STORRSLT
 0105            INHINT
 0106            CAF    60SEC
 0107            TC     WAITLIST
 0108            CADR   PIP1
 0109            CAF    PIP2ADR
 0110  2         TC     JOBSLEEP
 0111   PIP1     CAF    PIP2ADR
 0112            TC     JOBWAKE
 0113  2         TC     TASKOVER
 0114   PIP2     CS     PIPNDX
 0115            TS     PIPINDEX
 0116            TC     CHECKG
 0117            RELINT
 0118            TC     BANKCALL
 0119            CADR   STORRSLT
 0120            CS     PIPNDX +1
 0121            TS     PIPINDEX
 0122            TC     CHECKG
 0123            RELINT
 0124            TC     BANKCALL
 0125            CADR   STORRSLT
 0126            INHINT
 0127            CAF    30SEC
 0128            TC     WAITLIST
 0129            CADR   PIP1
 0130            CAF    PIP2ADR
 0131            TC     JOBSLEEP
 0132  8PIP2ADR  CADR   PIP2
 0133   GYROTORK CAF    V21N30E
 0134            TC     NVSUB
 0135            TC     PRENVBSY
 0136            TC     ENDIDLE
 0137            TC     ENDTEST
 0138            TC     +1
 0139            XCH    DSPTEM1
 0140            TS     TESTNO
 0141            TS     CALCDIR
 0142            TC     FREEDSP
 0143            CAF    QUARTER
 0144            TS     AZIMUTH
 0145            TS     GENPL +76D
 0146            CAF    SIX
 0147            TS     NBPOS
 0148            CCS    TESTNO
 0149            TS     TESTNO
 0150            TC     +5
 0151            TS     TESTNO
 0152            CS     BURSTPOS
 0153            TS     SAVE
 0154            TC     +3
 0155            CAF    BURSTPOS
 0156            TS     SAVE
 0157            CS     TESTNO
 0158            AD     TWO
 0159            TS     NEGCDU2
 0160            CCS    A
 0161            CAF    ONE
 0162            TC     +3
 0163            TC     +1
 0164            CAF    THREE
 0165            TS     POSITON
 0166  4         TC     STEVEIN
 0167   TORK     CS     NEGCDU2
 0168            COM
 0169            CCS    A
 0170            INDEX  TESTNO
 0171            CS     CDUX
 0172            TC     +2
 0173            CS     CDUX
 0174            TS     NEGCDU1
 0175            CS     TESTNO
 0176            COM
 0177            AD     TESTNO
 0178            TS     LOCNO
 0179  2         CAF    ITERNO
 0180   BLOGS    TS     BUBBLE
 0181            INHINT
 0182            CAF    TIMEINCR
 0183            TC     WAITLIST
 0184            CADR   WAKEUP
 0185            RELINT
 0186            CAF    FIVE
 0187            TS     PLOW
 0188            CAF    ZERO
 0189            INDEX  PLOW
 0190            TS     GYROD
 0191            CCS    PLOW
 0192            TC     -5
 0193            CS     SAVE
 0194            COM
 0195            INDEX  LOCNO
 0196            TS     GYROD +1
 0197            CAF    LLGYROD
 0198            TC     BANKCALL
 0199            CADR   GYROSPNT
 0200            TC     BANKCALL
 0201            CADR   IMUSTALL
 0202            TC     ENDTEST
 0203            CAF    WAKECADR
 0204            TC     JOBSLEEP
 0205   WAKEUP   CAF    WAKECADR
 0206            TC     JOBWAKE
 0207            TC     TASKOVER
 0208   WAKE     CCS    BUBBLE
 0209            TC     BLOGS
 0210            CS     NEGCDU2
 0211            COM
 0212            CCS    A
 0213            INDEX  TESTNO
 0214            CS     CDUX
 0215            TC     +2
 0216            CS     CDUX
 0217            TS     NEGCDU2
 0218            CCS    CALCDIR           DONE TO INSURE PROPER SIGN
 0219            CS     NEGCDU1
 0220            TC     +4
 0221            CS     NEGCDU2
 0222            TS     NEGCDU2
 0223            TC     +2
 0224            TS     NEGCDU1
 0225            INHINT
 0226            CS     NEGCDU2
 0227            CS     A
 0228            TS     ITEMP2
 0229            CS     NEGCDU1
 0230            TC     BANKCALL
 0231            CADR   2SCOMDIF
 0232            RELINT
 0233            TS     CUSSANG
 0234            EXTEND
 0235            MP     FIVE
 0236            CS     LP
 0237            TS     DSPTEM1
 0238            TC     GRABDSP
 0239            TC     PREGBSY
 0240            TC     BANKCALL
 0241            CADR   FLASHON
 0242            CAF    V07N30E
 0243            TC     NVSUB
 0244            TC     PRENVBSY
 0245            TC     ENDIDLE
 0246  4         TC     ENDTEST
 0247   BURSTPOS DEC    256
 0248   ITERNO   DEC    4095
 0249   TIMEINCR DEC    24
 0250   LLGYROD  ADRES  GYROD +1
 0251  8WAKECADR CADR   WAKE
R0252  2THIS IS A ROUGH CHECK PROGRAM FOR THE IMU GYROS AND ACCELEROMETERS
 0253   IMUCHK   CAF    QUARTER
 0254            TS     AZIMUTH
 0255            TC     FREEDSP
 0256            CAF    ZERO
 0257            TS     AZIMUTH +1
 0258            CAF    SIX
 0259            TS     NBPOS
 0260            CAF    BIT4
 0261            TS     POSITON
 0262            CS     A
 0263            TS     GENPL +76D
 0264  2         TC     STEVEIN
 0265   IMUCHKR  TC     BANKCALL        CHECKS COARSE ALIGN AND GYRO TORQUING
 0266            CADR   IMULOCK         CHECKS ALL MODE SWITCHING
 0267            TC     BANKCALL
 0268            CADR   IMUSTALL
 0269  2         TC     ENDTEST
 0270            TC     BANKCALL
 0271            CADR   IMUREENT
 0272            TC     BANKCALL
 0273            CADR   IMUSTALL
 0274  2         TC     ENDTEST
 0275            TC     BANKCALL
 0276            CADR   IMUFINE
 0277            CAF    ZERO
 0278            TS     PIPAX
 0279            TS     PIPAY
 0280            TS     PIPAZ
 0281            TC     BANKCALL
 0282            CADR   IMUSTALL
 0283  2         TC     ENDTEST
 0284            CAF    ONE
 0285            TS     RESULTCT
 0286  2         TS     POSITON
 0287   IMUCHK1  CAF    TWO             MEASURE TIME OF OCCURRENCE OF EACH
 0288   IMUCHK2  TS     PIPINDEX        PIP PULSE. ALSO STORE VELOCITY
 0289            INHINT
 0290            TC     CHECKG
 0291            CS     PIPAY
 0292            CS     A
 0293            INDEX  POSITON
 0294            TS     DATAPL +30D
 0295            CS     PIPAZ
 0296            CS     A
 0297            INDEX  POSITON
 0298            TS     DATAPL +32D
 0299            RELINT
 0300            TC     DATALD1
 0301            XCH    RESULTCT
 0302            AD     FIVE
 0303            TS     RESULTCT
 0304            CCS    PIPINDEX
 0305            TC     IMUCHK2
 0306            CCS    POSITON
 0307            TC     +2
 0308            TC     COMPUT
 0309            TS     POSITON
 0310            CAF    BIT6
 0311            TC     WARTMAL
 0312            CCS    COUNTPL
 0313            TC     WARTMAL2
 0314  4         TC     IMUCHK1
 0315   COMPUT   CAF    ZERO            CALC V1XV2 ANDROOT(GX)2+(GY)2+(GZ)2
 0316            TS     DATAPL
 0317            TS     DATAPL +5
 0318            TS     DATAPL +10D
 0319            XCH    DATAPL +30D
 0320            TS     DATAPL +35D
 0321            CAF    ZERO
 0322            XCH    DATAPL +32D
 0323            TS     DATAPL +37D
 0324            CAF    TWO
 0325            TS     DATAPL +15D
 0326            TS     DATAPL +20D
 0327            TS     DATAPL +25D
 0328            TS     DATAPL +34D
 0329  2         TS     DATAPL +36D
 0330            TC     BANKCALL
 0331  8         CADR   CHKCALC
 0332   GYDRFT   CAF    ZERO
 0333  2         TS     TESTNDX
 0334   SFTSTIN  CAF    BIT6            PIP SCALE FACTOR TEST ENTRY
 0335            TS     NBPOS
 0336            CAF    ZERO
 0337            TS     GENPL +76D
 0338            CAF    ONE
 0339  2         TS     POSITON
 0340   GYRDRFT1 TC     BANKCALL
 0341  2         CADR   LATAZCHK
 0342   GYRDRFT2 TC     SHOWLD          LOAD NAVBASE TILT ANGLE IN DEGREES
 0343            TC     BANKCALL
 0344            CADR   SHOW
 0345            TC     FREEDSP
 0346            CCS    NBPOS           NUMBER IN POSITON.FOR VERTICAL DRIFT
 0347            TC     LTNDX+          TEST IN LAB LOAD + NUMBER IN TESTNDX
 0348            TC     LTNDX0
 0349            CAF    TEN
 0350            TC     +4
 0351   LTNDX0   CAF    SIX
 0352            TC     +2
 0353   LTNDX+   CAF    ZERO
 0354  2         TS     NBPOS
 0355   STEVEIN  CS     ZERO
 0356            TS     CDUIND
 0357            CS     A
 0358            TS     LTSTNDX
 0359            TC     BANKCALL
 0360            CADR   IMUZERO
 0361            TC     BANKCALL
 0362            CADR   IMUSTALL
 0363  2         TC     ENDTEST
 0364            TC     BANKCALL
 0365  2         CADR   NBPOSPL
 0366   POSGMBL  TC     BANKCALL
 0367  2         CADR   PUTPOSX
 0368            TC     BANKCALL
 0369            CADR   IMUFINE
 0370            TC     BANKCALL
 0371            CADR   IMUSTALL
 0372            TC     ENDTEST
 0373            CS     CDUX
 0374            CS     A
 0375            INDEX  FLNDX12         FIXED BY *UNEEDA* DEBUGGING SERVICE
 0376            TS     6
 0377            CS     CDUY
 0378            CS     A
 0379            INDEX  FLNDX12         FIXED BY *UNEEDA* DEBUGGING SERVICE
 0380            TS     2
 0381            CS     CDUZ
 0382            CS     A
 0383            INDEX  FLNDX12         FIXED BY *UNEEDA* DEBUGGING SERVICE
 0384            TS     4
 0385            TC     BANKCALL        READ CDU ANGLES AND COMPLETE
 0386  4         CADR   FALNE1
 0387   FALNED   CCS    GENPL +76D
 0388            TC     TORK
 0389            TC     +2
 0390            TC     IMUCHKR
 0391            TC     BANKCALL
 0392  8         CADR   FALNED1
 0393   ACCELTST CAF    NINTHOU
 0394            TS     TESTTIME        ACCELEROMETER OUTPUT TO GRAVITY
 0395            CS     ZERO
 0396            TS     TESTNDX
 0397  8         TC     SFTSTIN
 0398   CHECKG   XCH    Q               PIP PULSE CATCH ROUTINE
 0399  2         XCH    QPLACE
 0400   CHECKG1  RELINT
 0401            CCS    NEWJOB
 0402            TC     CHANG1
 0403            INHINT
 0404            CAF    ZERO
 0405            INDEX  PIPINDEX
 0406            XCH    PIPAX
 0407            TS     STOREPL
 0408            CCS    STOREPL
 0409            TC     CHECKP
 0410            TC     RESTORE1
 0411            TC     CHECKM
 0412  2         TC     RESTORE1
 0413   CHECKP   CAF    BIT6            LOOKS FOR ONE MORE   PULSE
 0414   CHECKP1  TS     PIPANO
 0415            INDEX  PIPINDEX
 0416            CCS    PIPAX
 0417            TC     CHECKG3
 0418            TC     +3
 0419            TC     RESTORE1
 0420            TC     +1
 0421            CCS    PIPANO
 0422            TC     CHECKP1
 0423            TC     RESTORE1
 0424   CHECKM   CAF    BIT6            LOOKS FOR ONE MORE  INUS
 0425   CHECKM1  TS     PIPANO
 0426            INDEX  PIPINDEX
 0427            CCS    PIPAX
 0428            TC     RESTORE1
 0429            TC     +3
 0430            TC     CHECKG3
 0431            TC     +1
 0432            CCS    PIPANO
 0433            TC     CHECKM1
 0434  2         TC     RESTORE1
 0435  2CHECKG3  TC     TPTIME
 0436            CAF    BIT4
 0437   CHECKG5  TS     PIPANO
 0438            INDEX  PIPINDEX
 0439            CCS    PIPAX
 0440            TC     +4
 0441            TC     RESTORE1
 0442            TC     +2
 0443            TC     RESTORE1
 0444            CCS    PIPANO
 0445            TC     CHECKG5
 0446   NREAD    TC     RESTORE
 0447            TS     STOREPL
 0448  2         TC     QPLACE
 0449   RESTORE1 TC     RESTORE
 0450  2         TC     CHECKG1
 0451   RESTORE  XCH    STOREPL
 0452            INDEX  PIPINDEX
 0453            AD     PIPAX
 0454            INDEX  PIPINDEX
 0455            TS     PIPAX
 0456  8         TC     Q
 0457   WEIKPL   INHINT
 0458            TC     CHECKG
 0459            RELINT
 0460            CAF    FOUR
 0461            AD     RESULTCT
 0462            TS     RESULTCT
 0463            TC     DATALD1
 0464            CCS    COUNTPL
 0465            TC     DOSCTEST
 0466            TC     BANKCALL
 0467  8         CADR   RESULTS
 0468   TSTJUMP  CCS    TESTNDX
 0469            TC     LABTEST
 0470            TC     SCRTEST
 0471            TC     LABTEST
 0472   PIPTST   CAF    ONE             MEASURE PIP PULSE RATE FOR 90 SEC.
 0473            TS     COUNTPL
 0474            CAF    ZERO
 0475            INDEX  PIPINDEX
 0476            TS     PIPAX
 0477            TS     RESULTCT
 0478  2         TC     WEIKPL
 0479   DOSCTEST TS     COUNTPL         HORIZ DRIFT TEST SET UP TO
 0480            INHINT                 READ EAST PIP FOUR TIMES
 0481            CS     TESTTIME
 0482            CS     A
 0483            TC     WAITLIST
 0484            CADR   CARRYON
 0485            RELINT
 0486            CAF    CONCADR
 0487  2         TC     JOBSLEEP
 0488   CARRYON  CAF    CONCADR
 0489            TC     JOBWAKE
 0490  2         TC     TASKOVER
 0491  8CONCADR  CADR   WEIKPL
 0492   LABTEST  CCS    LTSTNDX         SET UP TO MEASURE VERTICAL DRIFT
 0493            TC     CDUD
 0494            CAF    ZERO
 0495            TS     XSM
 0496            TS     XSM +6
 0497            TS     XSM +12D
 0498   CDUCK    CAF    BIT6
 0499   CDUCK1   TS     STOREPL
 0500  2         TC     STOPHOR1
 0501            CCS    STOREPL
 0502            TC     CDUCK1
 0503            CAF    ZERO
 0504            INDEX  CDUNDX
 0505            TS     CDUX
 0506   CDUCK2   CAF    BIT6
 0507   CDUCK3   TS     STOREPL
 0508            INDEX  CDUNDX
 0509            CCS    CDUX
 0510            TC     CDUCK4
 0511            TC     +3
 0512            TC     CDUCK1
 0513            TC     CDUCK4
 0514            CCS    STOREPL
 0515            TC     CDUCK3
 0516            TC     STOPHOR1
 0517            TC     CDUCK2
 0518   CDUCK4   TC     READTIME
 0519            RELINT
 0520            CS     RUPTSTOR
 0521            TS     DATAPL
 0522            CS     RUPTSTOR +1
 0523            TS     DATAPL +1
 0524            CAF    THREE
 0525   CDUCK5   TS     STOREPL
 0526  2         TC     STOPHOR1
 0527            CCS    STOREPL
 0528            TC     CDUCK5
 0529            INDEX  CDUNDX
 0530            CCS    CDUX
 0531            TC     POSPLS
 0532            TC     CDUCK1
 0533            TC     CDUCK1
 0534  2         TC     NEGPLS
 0535   POSPLS   CS     TESTNDX         INITIALIZES VERTICAL DRIFT TEST
 0536            CCS    A
 0537            TC     LONGTST
 0538            NOOP
 0539            CS     SXTTR
 0540            TC     +6
 0541   NEGPLS   CS     TESTNDX
 0542            CCS    A
 0543            TC     LONGTST
 0544            NOOP
 0545            CAF    SXTTR
 0546            NDX    CDUNDX
 0547  2         TS     CDUX
 0548   CDUCK6   TC     STOPHOR1
 0549            CAF    BIT6
 0550   CDUCK7   TS     STOREPL
 0551            INDEX  CDUNDX
 0552            CCS    CDUX
 0553            TC     +4
 0554            TC     CDUD1
 0555            TC     +2
 0556            TC     CDUD1
 0557            CCS    STOREPL
 0558            TC     CDUCK7
 0559  2         TC     CDUCK6
 0560   CDUD1    CAF    BIT7
 0561            INDEX  CDUNDX
 0562            TS     CDUX
 0563  4         TC     CDUD
 0564   STOPHOR1 XCH    Q
 0565            TS     QPLACE
 0566            TC     BANKCALL
 0567            CADR   STOPHOR
 0568  8         TC     QPLACE
 0569   CDUD     INDEX  CDUNDX
 0570            XCH    CDUX
 0571            TS     GENPL +77D
 0572            TC     READTIME
 0573            RELINT
 0574            CS     RUPTSTOR
 0575            TS     DATAPL +2
 0576            CS     RUPTSTOR +1
 0577            TS     DATAPL +3
 0578            TC     BANKCALL
 0579  4         CADR   CDUCALC
 0580   LONGTST  CAF    DECX             CHANGED BY MR. FIXIT.
 0581            TS     STOREPL         VERTICAL ERECTION FOR 14480 SECONDS
 0582            CAF    ONE
 0583            TS     LTSTNDX
 0584            TC     BANKCALL
 0585            CADR   FRECT +2
 0586   DSPYLOAD XCH    Q
 0587            TS     QPLACE
 0588            TC     +2
 0589            TS     NDXCTR
 0590            INDEX  NDXCTR
 0591            CS     YSM
 0592            COM
 0593            TS     DSPTEM1
 0594            INDEX  NDXCTR
 0595            CS     YSM +1
 0596            COM
 0597            TS     DSPTEM1 +1
 0598            CS     NDXCTR
 0599            COM
 0600            AD     YSMCADR
 0601            TS     DSPTEM1 +2
 0602            TC     BANKCALL
 0603            CADR   FLASHON
 0604            CAF    V05N30E
 0605            TC     NVSUB
 0606            TC     PRENVBSY
 0607            CAF    V07N30E
 0608            TC     NVSUB
 0609            TC     PRENVBSY
 0610            TC     ENDIDLE         WAIT FOR DATA OR PROCEED
 0611            TC     ENDTEST
 0612            TC     +2
 0613            TC     DSPYLOAD +4     RE-DISPLAY IF DATA LOADED
 0614            CS     NDXCTR
 0615            AD     TEN
 0616            CCS    A
 0617            CAF    TWO
 0618            AD     NDXCTR
 0619            TC     DSPYLOAD +3
 0620            TC     QPLACE
 0621  8YSMCADR  CADR   YSM
 0622   LATAZCK1 TC     MAKECADR
 0623            TS     RETBB
 0624            TC     CHECKLD
 0625            OCT    00661
 0626            TC     ENDTEST
 0627            XCH    RETBB
 0628  4         TC     BANKJUMP
 0629   CHECKLD  XCH    Q
 0630            TS     QPLAC
 0631            INDEX  QPLAC
 0632            XCH    A
 0633            TC     NVSUB
 0634            TC     CHECKLD1
 0635            TC     BANKCALL
 0636            CADR   FLASHON
 0637            TC     ENDIDLE
 0638            TC     +3
 0639            TC     +4
 0640            TC     CHECKLD +2
 0641            INDEX  QPLAC
 0642            TC     Q
 0643            INDEX  QPLAC
 0644            TC     2
 0645   CHECKLD1 CAF    CHECKLD2
 0646            TC     NVSUBUSY
 0647  8CHECKLD2 CADR   CHECKLD +2
 0648   SHOW     TC     MAKECADR
 0649            TS     RETAA
 0650   SHOW1    CS     POSITON
 0651            CS     A
 0652            TS     DSPTEM2 +2
 0653            TC     BANKCALL
 0654            CADR   FLASHON
 0655            CAF    VB06N66
 0656            TC     NVSUB
 0657            TC     PRENVBSY
 0658            TC     ENDIDLE
 0659            TC     ENDTEST
 0660            TC     +3
 0661            TC     SHOWLD
 0662            TC     SHOW1
 0663            XCH    RETAA
 0664  6         TC     BANKJUMP
 0665   SHOWLD   CS     NBPOS
 0666            CS     A
 0667            TS     DSPTEM2
 0668            CS     TESTNDX
 0669            CS     A
 0670            TS     DSPTEM2 +1
 0671  6         TC     Q
 0672   DATALD1  CS     STOREPL
 0673            CS     A
 0674            INDEX  RESULTCT
 0675            TS     DATAPL
 0676            CS     MPAC
 0677            CS     A
 0678            INDEX  RESULTCT
 0679            TS     DATAPL +1
 0680            CS     MPAC +1
 0681            CS     A
 0682            INDEX  RESULTCT
 0683            TS     DATAPL +2
 0684            CS     MPAC +2
 0685            CS     A
 0686            INDEX  RESULTCT
 0687            TS     DATAPL +3
 0688  8         TC     Q
 0689   FINISH   TC     BANKCALL
 0690            CADR   SHOW
 0691            CAF    BIT6
 0692            TS     NBPOS
 0693            CAF    ONE
 0694            AD     POSITON
 0695            TS     POSITON
 0696            CS     POSITON
 0697            AD     DEC11
 0698            CCS    A
 0699            TC     +2
 0700            TC     ENDTEST
 0701            INHINT
 0702            CAF    PRIO20
 0703            TC     FINDVAC
 0704            CADR   GYRDRFT2
 0705  8         TC     ENDOFJOB
 0706   TPTIME   XCH    Q
 0707            TS     QPLAC
 0708            CS     TIME2
 0709            CS     A
 0710            TS     MPAC
 0711            CS     TIME1
 0712            CS     A
 0713            TS     MPAC +1
 0714            INHINT
 0715            TC     FINETIME
 0716            RELINT
 0717            TS     MPAC +2
 0718            CCS    A
 0719            TC     +7
 0720            CS     TIME2
 0721            CS     A
 0722            TS     MPAC
 0723            CS     TIME1
 0724            CS     A
 0725            TS     MPAC +1
 0726            XCH    MPAC +2
 0727            EXTEND
 0728            MP     BIT11
 0729            XCH    LP
 0730            TS     MPAC +2
 0731  8         TC     QPLAC
 0732   OGCZERO  XCH    Q               ZERO RESIDUAL TORQUING
 0733            TS     QPLACE
 0734            CAF    FIVE
 0735            TS     OVCTR
 0736            CAF    ZERO
 0737            INDEX  OVCTR
 0738            TS     OGC
 0739            CCS    OVCTR
 0740            TC     OGCZERO +3
 0741  4         TC     QPLACE
 0742   FLTRZERO XCH    Q
 0743            TS     QPLACE
 0744            CAF    FIVE
 0745            TS     OVCTR
 0746            CAF    ZERO
 0747            INDEX  OVCTR
 0748            TS     FILDELX
 0749            CCS    OVCTR
 0750            TC     FLTRZERO +3
 0751  8         TC     QPLACE
 0752   WARTMAL  XCH    Q
 0753            TS     QPLACE
 0754            CS     Q
 0755            TS     COUNTPL
 0756   WARTMAL4 CCS    COUNTPL
 0757            TC     +4
 0758            TC     QPLACE
 0759            TC     +2
 0760            TC     WARTMAL4 -1
 0761            INHINT
 0762            CAF    BIT11
 0763            TC     WAITLIST
 0764            CADR   WARTMAL3
 0765            RELINT
 0766            CCS    COUNTPL
 0767            TC     QPLACE
 0768            TC     QPLACE
 0769            NOOP
 0770   WARTMAL2 TS     COUNTPL
 0771            CAF    WTMLCADR
 0772            TC     JOBSLEEP
 0773   WTMLCADR CADR   WARTMAL4
 0774   WARTMAL3 CAF    WTMLCADR
 0775            TC     JOBWAKE
 0776  8         TC     TASKOVER
 0777   ENDTEST  TC     FREEDSP
 0778            TC     NEWMODE
 0779            OCT    00000
 0780            CS     ZERO
 0781            TS     CDUIND
 0782            TC     BANKCALL
 0783            CADR   MKRELEAS
 0784  8         TC     ENDOFJOB
 0785   SCRTEST  CAF    ZERO
 0786            TS     DATAPL
 0787            TS     GENPL +1
 0788            TS     GENPL +2
 0789            TS     GENPL +3
 0790            TS     GENPL +4
 0791            CAF    TWO
 0792            TS     CDUNDX
 0793            INHINT
 0794            CAF    NINTHOU
 0795            TC     WAITLIST
 0796            CADR   CARYON
 0797            RELINT
 0798            CAF    CONTCADR
 0799  2         TC     JOBSLEEP
 0800   CARYON   CAF    CONTCADR
 0801            TC     JOBWAKE
 0802  2         TC     TASKOVER
 0803  4CONTCADR CADR   ULES
 0804   ULES     INHINT
 0805            TC     CHECKG
 0806            RELINT
 0807            TC     DATALD1
 0808            CAF    FOUR
 0809            TS     RESULTCT
 0810            TC     DATALD1
 0811            TC     +5
 0812   REPEET   TS     CDUNDX          CDUNDX USED FOR CONV
 0813            CAF    FIVE
 0814            AD     RESULTCT
 0815            TS     RESULTCT
 0816            CAF    DEC1500          LENGTH OF TEST SELECTED IN LAB
 0817   SUMSUM   TS     COUNTPL
 0818            INHINT
 0819            CAF    TEN              LENGTH OF SAMPLE SELECTED BY LAB TEST
 0820            TC     WAITLIST
 0821            CADR   REPMAL
 0822            RELINT
 0823            CAF    REPCADR
 0824  2         TC     JOBSLEEP
 0825  2REPCADR  CADR   RETPLS
 0826   REPMAL   CAF    REPCADR
 0827            TC     JOBWAKE
 0828  2         TC     TASKOVER
 0829  2RETADR   ADRES  RETHERE
 0830   RETPLS   CAF    RETADR
 0831            TS     QPLACE
 0832            INHINT
 0833            CAF    ZERO
 0834            TS     STOREPL
 0835            TC     CHECKG3
 0836   RETHERE  RELINT
 0837            CS     DATAPL
 0838            AD     STOREPL
 0839            TS     GENPL
 0840            TC     BANKCALL
 0841  2         CADR   SCRINTP
 0842            CCS    CDUNDX
 0843            TC     REPEET
 0844            TC     BANKCALL
 0845  8         CADR   RESULTS
 0846   POSSET   CAF    ZERO
 0847            TS     RESULTCT
 0848            CAF    MTRXLD1
 0849            TS     OVCTR
 0850            CAF    ZERO
 0851            INDEX  OVCTR
 0852            TS     XSM
 0853            CCS    OVCTR
 0854            TC     -5
 0855            INDEX  POSITON
 0856            TC     +1
 0857            TC     ENDTEST
 0858            TC     POSN1
 0859            TC     POSN2
 0860            TC     POSN3
 0861            TC     POSN4
 0862            TC     POSN5
 0863            TC     POSN6
 0864            TC     POSN7
 0865            TC     POSN8
 0866            TC     POSN9
 0867            TC     POSN10
 0868            TC     POSN11
 0869   POSN1    CAF    HALF            X UP Y SOUTH Z EAST
 0870            TS     XSM
 0871            TS     YSM +2
 0872            TS     ZSM +4
 0873            CCS    TESTNDX
 0874            TC     +2
 0875            TC     LPNDX1
 0876            NOOP
 0877            CAF    ZERO
 0878            TS     PIPINDEX
 0879            TS     CDUNDX
 0880            TC     POSGMBL
 0881   LPNDX1   CAF    TWO
 0882            TS     PIPINDEX
 0883            TC     POSGMBL
 0884   POSN2    CAF    HALF            X DOWN Y WEST ZNORTH
 0885            COM
 0886            TS     XSM
 0887            TS     YSM +4
 0888            TS     ZSM +2
 0889            CCS    TESTNDX
 0890            TC     +2
 0891            TC     LPNDX2
 0892            NOOP
 0893            CAF    ZERO
 0894            TS     CDUNDX
 0895            TS     PIPINDEX
 0896            TC     POSGMBL
 0897   LPNDX2   CAF    ONE
 0898            TS     PIPINDEX
 0899            TC     POSGMBL
 0900   POSN3    CAF    HALF            Z UP Y WEST X NORTH
 0901            TS     ZSM
 0902            COM
 0903            TS     XSM +2
 0904            TS     YSM +4
 0905            CCS    TESTNDX
 0906            TC     LCNDX3
 0907            TC     LPNDX2
 0908            NOOP
 0909  2         TC     LPNDX1
 0910   LCNDX3   CAF    ZERO
 0911            TS     CDUNDX
 0912            TC     POSGMBL
 0913   POSN4    CAF    HALF            Z DOWN Y SOUTH X EAST
 0914            TS     XSM +4
 0915            TS     YSM +2
 0916            COM
 0917            TS     ZSM
 0918            CCS    TESTNDX
 0919            TC     LCNDX3
 0920            TC     LPNDX4
 0921            NOOP
 0922  2         TC     LPNDX1
 0923   LPNDX4   TS     PIPINDEX
 0924            TC     POSGMBL
 0925   POSN5    CAF    HALF            Y UP Z NORTH X WEST
 0926            TS     YSM
 0927            COM
 0928            TS     XSM +4
 0929            TS     ZSM +2
 0930            CCS    TESTNDX
 0931            TC     LCNDX5
 0932            TC     LPNDX4
 0933            TC     LCNDX5
 0934  2         TC     LPNDX2
 0935   LCNDX5   CAF    ONE
 0936            TS     CDUNDX
 0937            TC     POSGMBL
 0938   POSN6    CAF    HALF            Y DOWN Z EAST X SOUTH
 0939            TS     XSM +2
 0940            TS     ZSM +4
 0941            COM
 0942            TS     YSM
 0943            CCS    TESTNDX
 0944            TC     LCNDX5
 0945            TC     LPNDX1
 0946            TC     LCNDX5
 0947  2         TC     LPNDX2
 0948   POSN7    CAF    ROOT 2/4
 0949            TS     ZSM
 0950            TS     ZSM +2
 0951            TS     YSM
 0952            COM
 0953            TS     YSM +2
 0954            CAF    HALF
 0955            TS     XSM +4
 0956            CAF    ZERO
 0957            TS     PIPINDEX
 0958            CCS    NBPOS
 0959            TC     GYRDRFT2
 0960            TS     TESTNDX
 0961            TC     POSGMBL
 0962   POSN8    CAF    ROOT 2/4
 0963            TS     YSM
 0964            TS     YSM +2
 0965            TS     XSM
 0966            COM
 0967            TS     XSM +2
 0968            CAF    HALF
 0969            TS     ZSM +4
 0970            CAF    TWO
 0971            TS     PIPINDEX
 0972            CAF    ZERO
 0973            TS     TESTNDX
 0974            TC     POSGMBL
 0975   POSN9    CAF    ROOT 2/4
 0976            TS     XSM
 0977            TS     XSM +2
 0978            TS     ZSM
 0979            COM
 0980            TS     ZSM +2
 0981            CAF    HALF
 0982            TS     YSM +4
 0983            CAF    ONE
 0984            TS     PIPINDEX
 0985            CCS    NBPOS
 0986            TC     GYRDRFT2
 0987            TS     TESTNDX
 0988            TC     POSGMBL
 0989   POSN10   CS     ONE             POSITION FOR LONG TEST FOR ADIAY
 0990            TS     TESTNDX
 0991            TC     POSN5
 0992   POSN11   CS     ONE
 0993            TS     TESTNDX
 0994  8         TC     POSN6
 0995   V05N30E  OCT    00530
 0996   72DEC    DEC    72
 0997   V21N30E  OCT    02130
 0998   60SEC    DEC    6000
 0999   30SEC    DEC    3000
 1000   V07N30E  OCT    00730
 1001   NINTHOU  DEC    9000
 1002   SXTTR    DEC    64                 THIS FIXES  INACCURACY DUE TO ENCODER
 1003   DEC180   DEC    180
 1004   VB06N66  OCT    00666
 1005   DEC11    DEC    11
 1006   MTRXLD1  DEC    17
 1007   ROOT 2/4 DEC    .35355339
 1008   FLNDX12  ADRES  GENPL           FIXED BY *UNEEDA* DEBUGGING SERVICE
 1009   DEC1500  DEC    1500
 1010   DECX     DEC    1448
L       IMU PERFORMANCE TESTS 2
 0001  2         SETLOC 70000
 0002   MISALIGN TC     BANKCALL
 0003            CADR   OGCZERO
 0004            TC     GRABDSP
 0005            TC     PREGBSY
 0006            CAF    11DEC
 0007            TS     PTS
 0008            CAF    ZERO
 0009            TS     PTS +1
 0010   BBB      TS     NDXCTR
 0011            INDEX  NDXCTR
 0012            CS     GENPL +68D
 0013            INDEX  NDXCTR
 0014            AD     GENPL +74D
 0015            INDEX  NDXCTR
 0016            TS     GENPL +74D
 0017            CAF    63DEC
 0018            AD     NDXCTR
 0019            CCS    A
 0020            CS     THREE
 0021            AD     NDXCTR
 0022            TC     BBB
 0023   CCCC     TS     NDXCTR
 0024            TC     INTPRET
 0025            LXA,1  0
 0026                   NDXCTR
 0027            DMOVE* 1
 0028            DSU
 0029                   GENPL +72D,1
 0030                   GENPL
 0031            STORE  GENPL +72D,1
 0032            EXIT   0
 0033            CS     NDXCTR
 0034            AD     69DEC
 0035            CCS    A
 0036            CAF    THREE
 0037            AD     NDXCTR
 0038            TC     CCCC
 0039            TS     GENPL
 0040            TS     GENPL +1
 0041            TS     RUN
 0042            CAF    THREE
 0043   DDDD     TS     NDXCTR
 0044            TC     INTPRET
 0045            LXA,1  0
 0046                   NDXCTR
 0047            DSU*   0
 0048                   GENPL +72D,1
 0049                   GENPL +66D,1
 0050            NOLOD  1
 0051            TSRT   DAD*
 0052                   1
 0053                   GENPL +66D,1
 0054            STORE  GENPL +72D,1
 0055            NOLOD  1
 0056            TSLT   DAD
 0057                   2
 0058                   OGC
 0059            STORE  OGC
 0060            DMOVE* 2
 0061            TSLT   DSQ
 0062            DAD
 0063                   GENPL +72D,1
 0064                   4
 0065                   MGC
 0066            STORE  MGC
 0067            EXIT   0
 0068            CS     RUN
 0069            COM
 0070            AD     NDXCTR
 0071            COM
 0072            AD     63DEC
 0073            CCS    A
 0074            CAF    SIX
 0075            AD     NDXCTR
 0076            TC     DDDD
 0077            AD     RUN
 0078   EEEE     TS     NDXCTR
 0079            INDEX  NDXCTR
 0080            CS     GENPL +11D
 0081            COM
 0082            TS     TEMDELV
 0083            CAF    ZERO
 0084            TS     TEMDELV +1
 0085            TC     INTPRET
 0086            LXC,1  0
 0087                   NDXCTR
 0088            DMOVE  0
 0089                   -
 0090            NOLOD  2
 0091            TSLT   BDDV
 0092            DAD
 0093                   5
 0094                   TEMDELV
 0095                   IGC
 0096            STORE  IGC
 0097            TSLT   1
 0098            BDDV
 0099                   -
 0100                   3
 0101                   TEMDELV
 0102            DMOVE* 2
 0103            TSLT   DMP
 0104            DAD
 0105                   GENPL +9D,1
 0106                   4
 0107                   -
 0108                   GENPL
 0109            STORE  GENPL
 0110            EXIT   0
 0111            CS     NDXCTR
 0112            AD     63DEC
 0113            AD     RUN
 0114            AD     NEG3
 0115            CCS    A
 0116            CAF    SIX
 0117            AD     NDXCTR
 0118            TC     EEEE
 0119            TC     INTPRET
 0120            DMP    0
 0121                   OGC
 0122                   GENPL
 0123            DMP    1
 0124            DSU
 0125                   MGC
 0126                   IGC
 0127            DSQ    1
 0128            TSRT
 0129                   OGC
 0130                   1
 0131            TSLT   2
 0132            DMP    DSU
 0133            BDDV   DMP
 0134                   PTS
 0135                   11
 0136                   MGC
 0137                   -
 0138                   -
 0139                   K
 0140            STORE  DSPTEM2
 0141            EXIT   0
 0142            TC     BANKCALL
 0143            CADR   FLASHON
 0144            CAF    V06N66E
 0145            TC     NVSUB
 0146            TC     PRENVBSY
 0147            TC     ENDIDLE
 0148            TC     ENDTEST1
 0149            CAF    THREE
 0150            TS     RUN
 0151            TC     BANKCALL
 0152            CADR   OGCZERO
 0153            CAF    ZERO
 0154            TS     GENPL
 0155            TS     GENPL +1
 0156  4         TC     DDDD
 0157   K        2DEC   1.233 E3 B-14
 0159   63DEC    DEC    63
 0160  469DEC    DEC    69
 0161   ENDTEST1 TC     BANKCALL
 0162  8         CADR   ENDTEST
 0163   FINDNAVB TC     MAKECADR
 0164            TS     RETAA
 0165            TC     BANKCALL
 0166            CADR   MKRELEAS
 0167            CAF    ONE
 0168            TS     DSPTEM1
 0169            CAF    V01N30E         MARK ON TARGET 1
 0170            TC     NVSUB
 0171            TC     PRENVBSY
 0172            CAF    ONE
 0173            TC     BANKCALL
 0174            CADR   SXTMARK
 0175            TC     BANKCALL
 0176            CADR   OPTSTALL
 0177            TC     ENDTEST1
 0178            INDEX  MARKSTAT
 0179            CS     0
 0180            CS     A
 0181            TS     VACADR          TIME OF MARK
 0182            INDEX  MARKSTAT
 0183            CS     1
 0184            CS     A
 0185            TS     VACADR +1
 0186            CS     MARKSTAT
 0187            TS     MKSTAT1
 0188            TC     BANKCALL
 0189            CADR   MKRELEAS
 0190            CAF    TWO
 0191            TS     DSPTEM1
 0192            CAF    V01N30E         MARK ON TARGET 4
 0193            TC     NVSUB
 0194            TC     PRENVBSY
 0195            CAF    ONE
 0196            TC     BANKCALL
 0197            CADR   SXTMARK
 0198            CCS    COAROFIN        COARSE ALIGN OR FINE ALIGN MARKS
 0199            TC     CLGNMARK
 0200            CS     MKSTAT1
 0201            AD     TWO
 0202            INDEX  FIXLOC
 0203            TS     S1              BASE ADDRESS GIMBAL ANGLES
 0204            TC     INTPRET         OPT-NB-SM    TARGET 1
 0205            LXA,1  0
 0206                   MKSTAT1
 0207            ITC    0
 0208                   SXTNB
 0209            VSLT   1
 0210            ITC
 0211                   STARM
 0212                   0
 0213                   NBSM
 0214            NOLOD  0
 0215            STORE  STARAD
 0216            DMOVE  0
 0217                   VACADR
 0218            STORE  TMARK
 0219  2         EXIT   0
 0220   EARRTCOM TC     INTPRET         COMPENSATE BETWEEN FINE ALIGN MARKS
 0221            ITC    0
 0222                   EARTHR
 0223            ITC    0
 0224                   OUTGYR
 0225            EXIT   0
 0226            TC     BANKCALL
 0227            CADR   IMUSTALL
 0228            TC     ENDTEST1
 0229            CCS    OPTCADR
 0230            TC     +3
 0231            TC     EARRTCOM
 0232            TC     +1
 0233            TC     BANKCALL
 0234            CADR   OPTSTALL
 0235            TC     ENDTEST1
 0236            CAF    TWO
 0237            AD     MARKSTAT
 0238            INDEX  FIXLOC
 0239            TS     S1              BASE ADDRESS GIMBAL ANGLES
 0240            TC     INTPRET         OPT-NB-SM    TARGET 4
 0241            LXC,1  0
 0242                   MARKSTAT
 0243            ITC    0
 0244                   SXTNB
 0245            VSLT   1
 0246            ITC
 0247                   STARM
 0248                   0
 0249                   NBSM
 0250            NOLOD  0
 0251            STORE  STARAD +6
 0252            ITC    0
 0253  2                MATXDET
 0254   CLGNMARK TC     INTPRET         OPT-NB       TARGET 1
 0255            LXA,1  0
 0256                   MKSTAT1
 0257            ITC    0
 0258                   SXTNB
 0259            VMOVE  0
 0260                   STARM
 0261            STORE  STARAD
 0262            EXIT   0
 0263            TC     BANKCALL
 0264            CADR   OPTSTALL
 0265            TC     ENDTEST1
 0266            TC     INTPRET         OPT-NB       TARGET 4
 0267            LXC,1  0
 0268                   MARKSTAT
 0269            ITC    0
 0270                   SXTNB
 0271            VMOVE  0
 0272                   STARM
 0273  2         STORE  STARAD +6
 0274   MATXDET  VMOVE  0               CALCULATE TRANSFORMATION MATRIX
 0275                   TAR1POS
 0276            STORE  6
 0277            VMOVE  0
 0278                   TAR1POS +6
 0279            STORE  12D
 0280            ITC    0
 0281                   AXISGEN
 0282            VMOVE  0
 0283                   XDC
 0284            STORE  STARAD
 0285            VMOVE  0
 0286                   YDC
 0287            STORE  STARAD +6
 0288            VMOVE  0
 0289                   ZDC
 0290            STORE  STARAD +12D
 0291            EXIT   0
 0292            XCH    RETAA
 0293  8         TC     BANKJUMP
 0294   PUTPOSX  TC     MAKECADR
 0295            TS     RETAA
 0296            TC     INTPRET
 0297            ITC    0
 0298                   CALCGA
 0299            EXIT   0
 0300            TC     BANKCALL
 0301            CADR   IMUCOARS        INITIATE COARSE ALIGN MODE
 0302            TC     BANKCALL
 0303            CADR   IMUSTALL        WAIT FOR IMUCOARS COMPLETION
 0304            TC     ENDTEST1
 0305            XCH    RETAA
 0306  4         TC     BANKJUMP
 0307   SMDCALC  TC     MAKECADR
 0308            TS     RETAA
 0309            TC     INTPRET
 0310            MXV    1
 0311            VSLT
 0312                   XSM
 0313                   STARAD
 0314                   1
 0315            STORE  XDC
 0316            MXV    1
 0317            VSLT
 0318                   YSM
 0319                   STARAD
 0320                   1
 0321            STORE  YDC
 0322            VXV    1
 0323            VSLT
 0324                   XDC
 0325                   YDC
 0326                   1
 0327            STORE  ZDC
 0328            ITC    0
 0329                   CALCGTA
 0330            ITC    0
 0331                   OUTGYR
 0332            EXIT   0
 0333            XCH    RETAA
 0334  8         TC     BANKJUMP
 0335   LATAZCHK TC     MAKECADR
 0336            TS     RETAA
 0337            TC     INTPRET         CHECK LATITUDE AND NAVBASE AZIMUTH
 0338            TSLT   0
 0339                   LATITUDE
 0340                   2
 0341            STORE  DSPTEM1 +1
 0342            DMOVE  1
 0343            RTB    EXIT
 0344                   AZIMUTH
 0345                   1STO2S
 0346            XCH    MPAC
 0347            TS     DSPTEM1
 0348            TC     BANKCALL
 0349  2         CADR   LATAZCK1
 0350            TC     INTPRET
 0351            SMOVE  1
 0352            RTB
 0353                   DSPTEM1
 0354                   CDULOGIC
 0355            STORE  AZIMUTH
 0356            SMOVE  1
 0357            TSRT
 0358                   DSPTEM1 +1
 0359                   2
 0360            STORE  LATITUDE
 0361            EXIT   0
 0362            XCH    RETAA
 0363  8         TC     BANKJUMP
 0364   TARGSM   TC     INTPRET
 0365            ITC    0
 0366                   ERTHRVEN
 0367            ITC    0
 0368                   PROCTARG
 0369            VMOVE  0
 0370                   TARGET1
 0371            STORE  TAR1POS
 0372            VMOVE  0
 0373                   TARGET1 +6
 0374            STORE  TAR1POS +6
 0375            ITC    0
 0376                   MAKEXSM
 0377            EXIT   0
 0378            TC     BANKCALL
 0379  8         CADR   POSLOAD
 0380   ALGNINIT RTB    0
 0381                   ZEROVAC
 0382            DMOVE  0
 0383                   ZERODP
 0384            COS    1
 0385            COMP
 0386                   LATITUDE
 0387            SIN    1
 0388            VDEF   VXSC            (SIN,-COS,0)
 0389                   LATITUDE
 0390                   OMEG/MS
 0391            STORE  VMARK
 0392            RTB    0
 0393                   LOADTIME
 0394            STORE  TMARK
 0395  8         ITCQ   0
 0396   EARTHR   RTB    0
 0397                   LOADTIME
 0398            STORE  S1
 0399            NOLOD  3
 0400            DSU    TSLT
 0401            VXSC   MXV
 0402            VAD
 0403                   TMARK
 0404                   10D
 0405                   VMARK
 0406                   XSM
 0407                   OGC
 0408            STORE  OGC
 0409            DMOVE  0
 0410                   S1
 0411            STORE  TMARK
 0412  8         ITCQ   0
 0413   OUTGYR   AXT,1  1
 0414            AST,1  AXT,2
 0415                   6
 0416                   2
 0417                   0
 0418   OUTGYR1  TSRT*  0
 0419                   OGC +6,1
 0420                   8D,2
 0421            STORE  GYROD +6,1
 0422            TSLT*  1
 0423            BDSU*
 0424                   GYROD +6,1
 0425                   8D,2
 0426                   OGC +6,1
 0427            STORE  OGC +6,1
 0428            TIX,1  0
 0429                   OUTGYR1
 0430            AXT,1  1
 0431            RTB    ITCQ
 0432                   GYROD
 0433  7                PULSEIMU
 0434   STORRSLT TC     MAKECADR
 0435            TS     RETAA
 0436            TC     INTPRET
 0437            LXC,1  0
 0438                   NDXCTR
 0439            NOLOD  2
 0440            TSLT   DMP
 0441            RTB
 0442                   8D
 0443                   SCALFTR
 0444                   SGNAGREE
 0445            STORE  GENPL,1
 0446            EXIT   0
 0447            XCH    STOREPL
 0448            INDEX  NDXCTR
 0449            TS     GENPL +2
 0450            CS     NDXCTR
 0451            AD     MAXPTS2
 0452            CCS    A
 0453            CAF    THREE
 0454            AD     NDXCTR
 0455            TC     +4
 0456            CCS    EROPTN
 0457            TC     ENDTEST1
 0458  8         TC     MISALIGN
 0459            TS     NDXCTR
 0460            XCH    RETAA
 0461  8         TC     BANKJUMP
 0462   TJLAL    AXT,1  1
 0463            AST,1
 0464                   6
 0465                   2
 0466   TJLAL1   DSU*   1
 0467            DMP    DAD*
 0468                   DELVX +6,1
 0469                   FILDELX +6,1
 0470                   VRECTC3
 0471                   FILDELX +6,1
 0472            STORE  FILDELX +6,1
 0473            TIX,1  0
 0474                   TJLAL1
 0475  8         ITCQ   0
 0476   FALNE1   CAF    TWO
 0477            AD     FLNDX
 0478            INDEX  FIXLOC
 0479            TS     S1
 0480            TC     INTPRET
 0481            MXV    1
 0482            VSLT   ITC
 0483                   XSM
 0484                   STARAD
 0485                   1
 0486                   NBSM
 0487            NOLOD  0
 0488            STORE  XDC
 0489            MXV    1
 0490            VSLT   ITC
 0491                   YSM
 0492                   STARAD
 0493                   1
 0494                   NBSM
 0495            NOLOD  0
 0496            STORE  YDC
 0497            VXV    1
 0498            VSLT
 0499                   XDC
 0500                   YDC
 0501                   1
 0502            STORE  ZDC
 0503            ITC    0
 0504                   CALCGTA
 0505            ITC    0
 0506                   OUTGYR
 0507            EXIT   0
 0508            TC     BANKCALL
 0509            CADR   IMUSTALL
 0510            TC     ENDTEST1
 0511            TC     BANKCALL
 0512  8         CADR   FALNED
 0513   VERTRECT NOLOD  1
 0514            VXM    VSLT
 0515                   XSM
 0516                   1
 0517            STORE  0
 0518            DMOVE  0
 0519                   VAC +2
 0520            COMP   0
 0521                   VAC +4
 0522            SMOVE  1
 0523            VDEF
 0524                   ZERODP
 0525            NOLOD  1
 0526            VXSC   VSLT
 0527                   INTCON1
 0528                   1
 0529            VSU    3
 0530            BOV    VXSC
 0531            VSLT   VAD
 0532            MXV    VAD
 0533                   0
 0534                   18D
 0535                   ERECTND
 0536                   INTCON1
 0537                   1
 0538                   -
 0539                   XSM
 0540                   OGC
 0541            STORE  OGC
 0542            VMOVE  0
 0543            STORE  18D
 0544  8ERECTND  ITCQ   0
 0545   POSNJUMP INDEX  POSITON
 0546            TC     +1
 0547            TC     ENDTEST1
 0548            TC     POS1
 0549            TC     POS2
 0550            TC     POS3
 0551            TC     POS4
 0552            TC     BANKCALL
 0553  2         CADR   POSNRETN
 0554   POS1     CS     ONE
 0555            TS     PIPNDX
 0556            CS     TWO
 0557            TS     PIPNDX +1
 0558  4         TC     POS1 -2
 0559   POS2     TC     INTPRET
 0560            VMOVE  1
 0561            COMP
 0562                   XSM
 0563            VMOVE  0
 0564                   ZSM
 0565            STORE  XSM
 0566            VMOVE  0
 0567                   -
 0568            STORE  ZSM
 0569            EXIT   0
 0570            CS     ZERO
 0571            TS     PIPNDX
 0572            CS     ONE
 0573            TS     PIPNDX +1
 0574  4         TC     POS1 -2
 0575   POS3     TC     INTPRET
 0576            VMOVE  0
 0577                   XSM
 0578            VMOVE  0
 0579                   ZSM
 0580            VMOVE  0
 0581                   YSM
 0582            STORE  ZSM
 0583            VMOVE  0
 0584                   -
 0585            STORE  XSM
 0586            VMOVE  0
 0587                   -
 0588            STORE  YSM
 0589            EXIT   0
 0590            CS     ZERO
 0591            TS     PIPNDX
 0592            CS     TWO
 0593            TS     PIPNDX +1
 0594  8         TC     POS1 -2
 0595   POS4     TC     INTPRET
 0596            VXV    1
 0597            UNIT
 0598                   YSM
 0599                   ZSM
 0600            STORE  XSM
 0601            EXIT   0
 0602  4         TC     POS1 -2
 0603   NBPOSPL  CAF    MTRXLD
 0604            TS     OVCTR           ZERO STARAD
 0605            CAF    ZERO
 0606            INDEX  OVCTR
 0607            TS     STARAD
 0608            CCS    OVCTR
 0609  2         TC     NBPOSPL +1
 0610            TC     INTPRET         SETS UP AZIMUTH AND VERTICAL VECTORS
 0611            RTB    0               FOR AXISGEN,RESULTS TO BE USED IN CALCGA
 0612                   ZEROVAC         TO COMPUTE COARSE ALIGN ANGLES
 0613            AXC,1  1
 0614            XSU,1  VMOVE*
 0615                   SCNBAZ
 0616                   NBPOS
 0617                   0,1
 0618            STORE  STARAD          AZIMUTH IN NB COORDS
 0619            AXC,1  1
 0620            XSU,1  VMOVE*
 0621                   SCNBVER
 0622                   NBPOS
 0623                   0,1
 0624            STORE  STARAD +6       VERTICAL IN NB COORDS
 0625            COS    1
 0626            COMP
 0627                   AZIMUTH
 0628  2         STORE  8D
 0629            SIN    0
 0630                   AZIMUTH
 0631            STORE  10D             AZIMUTH IN CER
 0632            VMOVE  0
 0633                   LABNBVER
 0634            STORE  12D              VERTICAL IN CER
 0635            ITC    0
 0636  2                AXISGEN
 0637            VMOVE  0
 0638                   XDC
 0639  2         STORE  STARAD
 0640            VMOVE  0
 0641                   YDC
 0642  2         STORE  STARAD +6
 0643            VMOVE  0
 0644                   ZDC
 0645            STORE  STARAD +12D
 0646            EXIT   0
 0647            TC     BANKCALL
 0648  8         CADR   POSSET
 0649   RESULTS  CCS    TESTNDX
 0650            TC     CDUCALC
 0651            TC     PIPCALC
 0652            TC     CDUCALC
 0653   SFCALC   CS     DATAPL +4
 0654            AD     DATAPL +8D
 0655  2         TS     DATAPL
 0656            TC     INTPRET
 0657            TSU    1
 0658            TSLT   ROUND
 0659                   DATAPL +9D
 0660                   DATAPL +5
 0661                   14D
 0662            SMOVE  2
 0663            DMP    DDV
 0664            RTB
 0665                   DATAPL
 0666                   DC585
 0667                   0
 0668                   SGNAGREE
 0669            STORE  DSPTEM2
 0670            EXIT   0
 0671            TC     GRABDSP
 0672            TC     PREGBSY
 0673            TC     BANKCALL
 0674  8         CADR   FINISH
 0675   CDUCALC  TC     INTPRET
 0676            DSU    2
 0677            BDDV   DMP
 0678            RTB
 0679                   DATAPL +2
 0680                   DATAPL
 0681                   GENPL +76D
 0682                   ERUNITS         2DEC.66666
 0683                   SGNAGREE
 0684            STORE  DSPTEM2
 0685  2         EXIT   0
 0686            TC     GRABDSP
 0687            TC     PREGBSY
 0688            TC     BANKCALL
 0689  8         CADR   FINISH
 0690   PIPCALC  TC     INTPRET
 0691            RTB    0
 0692                   FRESHPD
 0693            TSU    1
 0694            TSLT   ROUND
 0695                   GENPL +4
 0696                   DATAPL +1
 0697                   11D
 0698            DSQ    0
 0699                   0               T1(2) IN 2,3
 0700            DMP    1
 0701            VDEF
 0702                   0
 0703                   2
 0704            STORE  GENPL +25D
 0705            TSU    1
 0706            TSLT   ROUND
 0707                   GENPL +9D
 0708                   DATAPL +1
 0709                   11D
 0710            DSQ    0
 0711                   0
 0712            DMP    1               T2(2) IN 6
 0713            VDEF
 0714                   0
 0715                   2
 0716            STORE  GENPL +31D
 0717            TSU    1
 0718            TSLT   ROUND
 0719                   GENPL +14D
 0720                   DATAPL +1D
 0721                   11D
 0722            DSQ    0
 0723                   0
 0724            DMP    1
 0725            VDEF
 0726                   0
 0727                   2
 0728            STORE  GENPL +37D
 0729            VXV    1
 0730            DOT
 0731                   GENPL +31D
 0732                   GENPL +37D
 0733                   GENPL +25D
 0734            STORE  GENPL +45D      D2
 0735            DMOVE  0
 0736                   GENPL +7
 0737            STORE  GENPL +25D
 0738            DMOVE  0
 0739                   GENPL +12D
 0740            STORE  GENPL +31D
 0741            DMOVE  0
 0742                   GENPL +17D
 0743            STORE  GENPL +37D
 0744            VXV    2
 0745            DOT    DDV
 0746            DMP    RTB
 0747                   GENPL +31D
 0748                   GENPL +37D
 0749                   GENPL +25D
 0750                   GENPL +45D
 0751                   ERUNITS2
 0752                   SGNAGREE
 0753            STORE  DSPTEM2
 0754            EXIT   0
 0755            TC     GRABDSP
 0756            TC     PREGBSY
 0757            TC     BANKCALL
 0758  8         CADR   FINISH
 0759   CHKCALC  TC     INTPRET
 0760            RTB    1
 0761            RTB
 0762                   ZEROVAC
 0763                   FRESHPD
 0764            TSU    1
 0765            TSLT   ROUND
 0766                   DATAPL +17D
 0767                   DATAPL +2
 0768                   12D
 0769            DSU    2
 0770            TSLT   DMP
 0771            DDV
 0772                   DATAPL +15D
 0773                   DATAPL
 0774                   12D
 0775                   DC585           GZ IN 0,1
 0776            TSU    1
 0777            TSLT   ROUND
 0778                   DATAPL +22D
 0779                   DATAPL +7
 0780                   12D
 0781            DSU    2
 0782            TSLT   DMP
 0783            DDV
 0784                   DATAPL +20D
 0785                   DATAPL +5
 0786                   12D
 0787                   DC585           GY IN 2,3
 0788            TSU    1
 0789            TSLT   ROUND
 0790                   DATAPL +27D
 0791                   DATAPL +12D
 0792                   12D
 0793            STORE  TESTTIME
 0794            DSU    2
 0795            TSLT   DMP
 0796            DDV    VDEF
 0797                   DATAPL +25D
 0798                   DATAPL +10D
 0799                   12D
 0800                   DC585
 0801                   TESTTIME        G IN 0,1,2,3,4,5
 0802            ABVAL  1
 0803            TSLT   RTB
 0804                   0
 0805                   1
 0806                   SGNAGREE
 0807            STORE  DSPTEM2
 0808            EXIT   0
 0809            TC     GRABDSP
 0810            TC     PREGBSY
 0811            TC     BANKCALL
 0812  2         CADR   SHOW
 0813            TC     INTPRET
 0814            DMOVE  0
 0815                   DATAPL +32D
 0816            DMOVE  0
 0817                   DATAPL +30D
 0818            DMOVE  2
 0819            VDEF   UNIT
 0820            VSLT
 0821                   DATAPL +10D
 0822                   1               V1 IN 6,7,8,9,10,11
 0823            DMOVE  0
 0824                   DATAPL +36D
 0825            DMOVE  0
 0826                   DATAPL +34D
 0827            DMOVE  2
 0828            VDEF   UNIT
 0829            VSLT
 0830                   DATAPL +25D
 0831  2                1               V2 IN 12,13,14,15,1 ,17
 0832            VXV    3
 0833            ABVAL  TSLT
 0834            DDV    DMP
 0835            RTB
 0836                   6
 0837                   12D
 0838                   1
 0839                   TESTTIME
 0840                   ERUNITS1
 0841                   SGNAGREE
 0842            STORE  DSPTEM2
 0843  2         EXIT   0
 0844            TC     BANKCALL
 0845            CADR   SHOW
 0846  8         TC     ENDTEST1
 0847   STOPHOR  TC     MAKECADR
 0848            TS     RETAA
 0849            TC     INTPRET
 0850            ITC    0
 0851                   EARTHR
 0852            ITC    0
 0853                   OUTGYR
 0854            EXIT   0
 0855            TC     BANKCALL
 0856            CADR   IMUSTALL
 0857            TC     ENDTEST1
 0858            XCH    RETAA
 0859  8         TC     BANKJUMP
 0860   SCRINTP  TC     MAKECADR
 0861            TS     RETAA
 0862            TC     INTPRET
 0863            NOLOD  1
 0864            TSU
 0865                   DATAPL +5
 0866  2         STORE  0               T1:T0
 0867            NOLOD  1
 0868            TAD
 0869                   DATAPL +5
 0870  2         STORE  DATAPL +5       TN
 0871            TMOVE  2
 0872            TSLT   ROUND
 0873            DMP    DAD
 0874                   0
 0875                   12D
 0876                   GENPL
 0877                   GENPL +2
 0878            STORE  GENPL +2
 0879  2         EXIT   0
 0880            CCS    COUNTPL
 0881  2         TC     SUMSUM1
 0882            TC     INTPRET
 0883            LXC,1  0
 0884                   RESULTCT        FIRST=4
 0885            TMOVE  0               SECOND=9
 0886                   DATAPL +5
 0887            STORE  GENPL,1
 0888            DMOVE  0
 0889                   GENPL +2
 0890            STORE  GENPL +3,1
 0891            EXIT   0
 0892            XCH    RETAA
 0893  4         TC     BANKJUMP
 0894   SUMSUM1  TC     BANKCALL
 0895  8         CADR   SUMSUM
 0896   FALNED1  TC     INTPRET
 0897            ITC    0
 0898                   ALGNINIT
 0899            EXIT   0
 0900            CCS    TESTNDX
 0901            TC     LABTEST1
 0902            TC     +2
 0903            TC     +1
 0904            TC     BANKCALL
 0905            CADR   OGCZERO
 0906            TC     BANKCALL
 0907            CADR   FLTRZERO
 0908   FRECT    CAF    BIT7
 0909            TS     STOREPL
 0910            CAF    ZERO            VERTICAL ERECTION BY NULLING PIPAS
 0911            TS     PIPAX
 0912            TS     PIPAY
 0913            TS     PIPAZ
 0914   WARTNEW  CAF    TEN             CALL A SPADE A SPADE...HOMER
 0915            TS     COUNTPL
 0916            INHINT
 0917            CAF    50DEC
 0918            TC     WAITLIST
 0919            CADR   WARTNEW1
 0920            CAF    WART2ADR
 0921            TC     JOBSLEEP
 0922   WART2ADR CADR   WART2NEW
 0923   WARTNEW1 CAF    WART2ADR
 0924            TC     JOBWAKE
 0925            TC     TASKOVER
 0926   WART2NEW TC     INTPRET
 0927            RTB    0
 0928                   READPIPS
 0929            STORE  DELVX
 0930            ITC    0
 0931                   TJLAL
 0932            EXIT   0
 0933            CCS    COUNTPL
 0934            TC     WARTNEW +1
 0935            TC     INTPRET
 0936            VMOVE  1
 0937            ITC
 0938                   FILDELX
 0939                   VERTRECT
 0940            ITC    0
 0941                   EARTHR
 0942            ITC    0
 0943                   OUTGYR
 0944            EXIT   0
 0945            TC     BANKCALL
 0946            CADR   IMUSTALL
 0947  2         TC     ENDTEST1
 0948            CCS    STOREPL
 0949            TC     FRECT +1
 0950            TC     BANKCALL
 0951  4         CADR   TSTJUMP
 0952   LABTEST1 TC     BANKCALL
 0953  8         CADR   LABTEST
 0954   SCNBAZ   2DEC   -.27232         AZIMUTH OF NB IS ERAD IN AS Z AXIS EAST
 0955            2DEC   0
 0956            2DEC   .4194335
 0957   LABNBAZ  2DEC   0
 0958            2DEC   0
 0959            2DEC   .5
 0960   LABNBAZ1 2DEC   0
 0961            2DEC   0
 0962   SCNBVER  2DEC   .4194335
 0963            2DEC   0
 0964            2DEC   .27232
 0965   LABNBVER 2DEC   .5
 0966            2DEC   0
 0967            2DEC   0
 0968   LBNBVER1 2DEC   0
 0969            2DEC   -.5
 0970   V06N66E  OCT    00666
 0971   V01N30E  OCT    00130
 0972   OMEG/MS  2DEC   .12169524
 0973   SCALFTR  2DEC   .64
 0974   INTCON1  DEC    40 B+8
 0975            DEC    0
 0976   FLNDX    ADRES  GENPL
 0977   MTRXLD   DEC    17
 0978   DC585    2DEC   585 B+14
 0979   ERUNITS  2DEC   4308205 B-28     CONSTANT CORRECTED FOR SIDEREAL RATE
 0980   ERUNITS2 2DEC   38357 B-28
 0983   VRECTC3  2DEC   .1
 0984  8ERUNITS1 2DEC   685683 B-28
 0985   ERTHRVEN RTB    0
 0986                   ZEROVAC
 0987            COS    0
 0988                   LATITUDE
 0989            DMOVE  0
 0990                   ZERODP
 0991            SIN    1
 0992            VDEF   VXSC
 0993                   LATITUDE
 0994                   OMEG/MS
 0995            STORE  VMARK
 0996            ITCQ   0
L      2INFLIGHT ALIGNMENT SUBROUTINES
R0001   CALGTA          GIVEN THE DESIRED XD,YD AND ZD UNIT VECTORS REFERED TO
R0002   --------        PRESENT STABLE MEMBER ORIENTATION, THIS SUBROUTINE FINDS
R0003                   THETAY, THETAZ, AND THETAX, THE REQUIRED GYRO TORQUE
R0004                   ANGLES IN THE ORDER TO BE APPLIED TO BRING THE STABLE
R0005  4                MEMBER INTO THE DESIRED ORIENTATION.
 0006            BANK   22
 0007   CALCGTA  ITA    1               DEFINE THE VECTOR ZPRIME WHICH IS THE
 0008            DMOVE
 0009                   S2              IMAGE OF Z UNDER THE ROTATION ABOUT Y
 0010  2                XDSMPR
 0011            DMOVE  0               ZPRIME =(-XD  ,0 , XD )
 0012  2                ZERODP                      2        0
 0013            COMP   1
 0014            VDEF   UNIT
 0015                   XDSMPR +4
 0016  2         STORE  ZPRIME
 0017            TSRT   0               SET UP COSTH AND SINTH TO ENTER
 0018                   ZPRIME              ARCTRIG FOR COMPUTATION OF THETA-Y
 0019                   1
 0020  2         STORE  SINTH
 0021            TSRT   0
 0022                   ZPRIME +4D
 0023                   1
 0024  2         STORE  COSTH
 0025            ITC    0
 0026  2                ARCTRIG
 0027            NOLOD  0
 0028  2         STORE  IGC
 0029            TSRT   0
 0030                   XDSMPR +2
 0031                   1
 0032  2         STORE  SINTH
 0033            DMP    0
 0034                   ZPRIME
 0035  2                XDSMPR +4
 0036            DMP    1
 0037            DSU
 0038                   ZPRIME +4
 0039                   XDSMPR
 0040  2         STORE  COSTH
 0041            ITC    0
 0042  2                ARCTRIG
 0043            NOLOD  0
 0044  2         STORE  MGC
 0045            DOT    0
 0046                   ZPRIME
 0047                   ZDSMPR
 0048  2         STORE  COSTH
 0049            DOT    0
 0050                   ZPRIME
 0051                   YDSMPR
 0052  2         STORE  SINTH
 0053            ITC    0
 0054  2                ARCTRIG
 0055            NOLOD  0
 0056  2         STORE  OGC
 0057            ITCI   0
 0058  8                S2
 0059   ARCTRIG  ABS    1               GIVEN SINTH AND COSTH SCALED X1/4 FIND
 0060            DSU    BMN             THETA IN THE RANGE -PI TO +PI SCALED-
 0061                   SINTH           TEMPORARY FOR SINTH               XPI/2
 0062                   QTSN45          CONSTANT=0.1768
 0063  2                TRIG1
 0064            TSLT   1
 0065            ACOS   SIGN
 0066                   COSTH           TEMPORARY FOR COSTH
 0067                   1
 0068                   SINTH           TEMPORARY FOR SINTH
 0069  2         STORE  THETA
 0070  2         ITCQ   0               RETURN TO MAIN PROGRAM
 0071   TRIG1    TSLT   1               SINTH LESS THAN QTSN45
 0072            ASIN
 0073                   SINTH           TEMPORARY FOR SINTH
 0074                   1
 0075  2         STORE  THETA
 0076            BMN    0
 0077                   COSTH
 0078  2                TRIG2
 0079            DMOVE  1
 0080            ITCQ
 0081                   THETA
 0082   TRIG2    SIGN   1               COSTH NEGATIVE
 0083            DSU
 0084                   HALFDP
 0085                   SINTH           WITH ASIN
 0086                   THETA
 0087  2         STORE  THETA
 0088  8         ITCQ   0               RETURN
R0089                                   THIS PROGRAM COMPUTES SXT ANGLES SAC AND
R0090                                   PAC IN HALF AND EIGHT REVOLUTIONS RESPEC
R0091  2                                GO IN WITH S1=BASE ADDRESS OF CDU:S
 0092   SMNB     ITA    1               CHECK THAT NBSMBIT IS OFF,IF IT ISGO TO
 0093            TEST   SWITCH          NBSM1,OTHERWISE SWITCH IT OFF
 0094                   S2
 0095                   NBSMBIT
 0096                   SMNB1
 0097  2                NBSMBIT
 0098   SMNB1    AXT,1  1               NBSMBIT IS OFF
 0099            AXT,2  ITC             SET INDECES TO ROTATE X,Z ABOUT Y
 0100                   4
 0101                   0
 0102  2                AXISROT         DO AXIS ROTATION
 0103            AXT,1  1               SET INDECES TO ROTATE Y,X ABOUT Z
 0104            AXT,2  ITC
 0105                   2
 0106                   4
 0107  2                AXISROT         DO AXIS ROTATION
 0108            AXT,1  1               SET INDECES TO ROTATE Z,Y ABOUT X
 0109            AXT,2  ITC
 0110                   0
 0111                   2
 0112  2                AXISROT         DO AXIS ROTATION
 0113            ITCI   0               RETURN
 0114  8                S2
 0115   NBSM     ITA    1               CHECK THAT NBSMBIT IS ON,IF IT IS NOT GO
 0116            TEST                   TO NBSM1 AND SWITCH IT ON
 0117                   S2
 0118                   NBSMBIT
 0119  2                NBSM1
 0120   NBSM2    AXT,1  1               ROTATE Z,Y ABOUT X
 0121            AXT,2  ITC
 0122                   0
 0123                   2
 0124  2                AXISROT
 0125            AXT,1  1               ROTATE Y,X ABOUT Z
 0126            AXT,2  ITC
 0127                   2
 0128                   4
 0129  2                AXISROT
 0130            AXT,1  1               ROTATE X,Z ABOUT Y
 0131            AXT,2  ITC
 0132                   4
 0133                   0
 0134  2                AXISROT
 0135            ITCI   0               RETURN
 0136  2                S2
 0137   NBSM1    SWITCH 1
 0138            ITC
 0139                   NBSMBIT
 0140  8                NBSM2
 0141   AXISROT  XSU,1  2               ROUTINE FOR SINGLE AXIS ROTATIONS
 0142            SMOVE* RTB
 0143            XAD,1                  REMARKS ARE FOR ROTATING Z,Y ABOUT X
 0144                   S1
 0145                   4,1             INDEX1=0,INDEX2=2
 0146                   CDULOGIC        ANGLES ARE STORED IN THE ORDER IGA,MGA,
 0147                   S1
 0148  2         STORE  30D             OGA,SO WE PICK UP OGA
 0149   ACCUROT  COS    0
 0150                   30D
 0151  2         STORE  8D,1            STORE COS(OGA) IN 8
 0152            SIN    0
 0153                   30D
 0154  2         STORE  10D,1           STORE SIN(OGA) IN 10D
 0155            DMP*   1
 0156            TSLT
 0157                   10D,1
 0158                   VAC +4,2        PUSH DOWN (VAC +2)SIN(OGA)
 0159  2                1
 0160            DMP*   1
 0161            TSLT
 0162                   8D,1
 0163                   VAC +4,2        PUSH DOWN (VAC +2)COS(OGA)
 0164  2                1
 0165            DMP*   2
 0166            TSLT   TEST
 0167            BDSU
 0168                   10D,1
 0169                   VAC +4,1
 0170                   1
 0171                   NBSMBIT
 0172                   AXISROT1
 0173  2         STORE  VAC +4,2        VAC+2=(VAC+2)COS(OGA)-(VAC+4)SIN(OGA)
 0174            DMP*   1
 0175            TSLT   DAD
 0176                   8D,1
 0177                   VAC +4,1
 0178                   1
 0179  2         STORE  VAC +4,1        VAC+4=(VAC+2)SIN(OGA)+(VAC+4)COS(OGA)
 0180            VMOVE  1
 0181            ITCQ
 0182  2                VAC
 0183   AXISROT1 NOLOD  1               TEST WAS 0 FOR SMNB
 0184            DAD
 0185  2         STORE  VAC +4,2        VAC+2=(VAC+2)COS(OGA)+(VAC+4)SIN(OGA)
 0186            DMP*   1
 0187            TSLT   DSU
 0188                   8D,1
 0189                   VAC +4,1
 0190                   1
 0191  2         STORE  VAC +4,1        VAC+4=-(VAC+2)SIN(OGA)+(VAC+4)COS(OGA)
 0192            VMOVE  1
 0193            ITCQ
 0194  8                VAC
 0195   CALCGA   VXV    1               CALCULATE GIMBAL ANGLES GIVEN THE X,Y,Z-
 0196            UNIT
 0197                   XNB
 0198  2                YSM
 0199            NOLOD  1
 0200            DOT    ITA
 0201                   ZNB
 0202                   S2
 0203  2         STORE  COSTH           TEMPORARY FOR COSTH
 0204            NOLOD  1
 0205            DOT
 0206                   YNB
 0207  2         STORE  SINTH
 0208            ITC    0
 0209  2                ARCTRIG
 0210            NOLOD  0
 0211  2         STORE  OGC
 0212            DOT    2
 0213            TSLT   BOV
 0214            TSRT   ASIN
 0215                   YSM
 0216                   XNB
 0217                   2
 0218                   GIMLOCK1        LOOK FOR EXCESSIVE MGC
 0219                   1
 0220  2         STORE  MGC
 0221            ABS    1
 0222            DSU    BPL
 0223                   MGC
 0224                   .333...
 0225  2                GIMLOCK1
 0226   CALCGA1  DOT    0
 0227                   ZSM
 0228                   0               CONTAINS AMG
 0229  2         STORE  COSTH
 0230            DOT    0
 0231                   XSM
 0232  2         STORE  SINTH
 0233            ITC    0
 0234  2                ARCTRIG
 0235            NOLOD  0
 0236  2         STORE  IGC
 0237            VMOVE  1               OP COUNT BY UNEEDA DEBUGGING SERVICE INC
 0238            RTB
 0239                   OGC
 0240                   V1STO2S
 0241  2         STORE  THETAD          *** BEWARE *** MODE IS NOW DP ***
 0242            ITCI   0
 0243  2                S2
 0244  2GIMLOCK1 EXIT   0
 0245            TC     ALARM
 0246            OCT    00401
 0247  2         TC     INTPRET         RESUME ROUTINE.
 0248            ITC    0
 0249  8                CALCGA1
 0250   SXTNB    SMOVE* 1               THIS PROGRAM COMPUTES COMPONENTS OF
 0251            RTB    RTB             THE STAR HALF UNIT VECTOR,STARM, GIVEN
 0252                   5,1             THE MEASURED SXT ANGLES PAM AND SAM.
 0253                   CDULOGIC
 0254  2                TRUNLOG
 0255            NOLOD  1
 0256            SIN    TSLT
 0257  2                1               STORE A=SIN(PAM.PI/4)
 0258            SMOVE* 1
 0259            RTB
 0260                   3,1
 0261  2                CDULOGIC        STORE  SAM/2 IN PD 4,RESOLVES +/- ZERO
 0262            NOLOD  1
 0263            COS    DMP
 0264                   2
 0265  2         STORE  STARM           STARM +0=(A.COS(PI.SAM))/2
 0266            SIN    1               SIN(2PI.PD4).PD2
 0267            DMP
 0268  2         STORE  STARM +2        STARM +2=(A.SIN(PI.SAM))/2
 0269            COS    0
 0270  2         STORE  STARM +4        STARM +4=0.5.COS(PAM.PI/4)
 0271  8         ITCQ   0
R0272   AXISGEN         GIVEN TWO STAR VECTORS     -         -
R0273   -------                                STARA AND STARB WRITTEN IN TWO
R0274                     COORDINATE SYSTEMS, THE D AND C SYSTEMS SO THAT WE
R0275                     HAVE       -       -           -       -
R0276                            STARA   STARB   AND STARB , STARA
R0277                                 D       D           C       C
R0278                     THIS PROGRAM COMPUTES THE HALF UNIT AXES
R0279                             -   -   -
R0280                            XD  YD  ZD
R0281                              C   C   C
R0282                     THAT IS THE D COORDINATE SYSTEM AXES REFERRED TO THE C
R0283                     COORDINATE SYSTEM
R0284                   THE INPUTS ARE STORED AS FOLLOWS
R0285                                                           -
R0286                            C(STARAD) - C(STARAD +5) = STARA
R0287                                                            D
R0288                                                           -
R0289                            C(STARAD+6)-C(STARAD+11D)= STARB
R0290                                                            D
R0291                                                           -
R0292                            C(6D) - C(11D)           = STARA
R0293                                                            C
R0294                                                           -
R0295                            C(12D) - C(17D)          = STARB
R0296                                                            C
R0297                   RESULTS ARE LEFT IN XDC TO XDC +17D
R0298                     THE RETUTINE DESTROYS THE INPUTS AND USES LOCATIONS
R0299                        STARAD+12D TO STARAD+17D AND 18D - 23D +30D
 0300   AXISGEN  AXT,1  1
 0301            AST,1
 0302                   STARAD +6
 0303                   STARAD -6
 0304   AXISGEN1 VXV*   1
 0305            UNIT
 0306                   STARAD +12D,1
 0307                   STARAD +18D,1
 0308  2         STORE  STARAD +18D,1
 0309            VXV*   1
 0310            VSLT
 0311                   STARAD +12D,1
 0312                   STARAD +18D,1
 0313                   1
 0314  2         STORE  STARAD +24D,1
 0315            TIX,1  0
 0316  2                AXISGEN1
 0317            AXC,1  3
 0318            SXA,1  AXT,1
 0319            AST,1  AXT,2
 0320            AST,2
 0321                   6
 0322                   30D
 0323                   18D
 0324                   6
 0325                   6
 0326  2                2
 0327   AXISGEN2 XCHX,1 0
 0328  2                30D
 0329            VXSC*  0
 0330                   0,1
 0331  2                STARAD +6,2
 0332            VXSC*  0
 0333                   6,1
 0334                   STARAD +12D,2
 0335  2         STORE  24D
 0336            VXSC*  2
 0337            VAD    VAD
 0338            VSLT   XCHX,1
 0339                   12D,1
 0340                   STARAD +18D,2
 0341                   -
 0342                   24D
 0343                   1
 0344                   30D
 0345            STORE  XDC +18D,1
 0346            TIX,1  0
 0347  2                AXISGEN3
 0348   AXISGEN3 TIX,2  0
 0349  2                AXISGEN2
 0350  8         ITCQ   0
 0351   CALCSXA  VMOVE  1               THIS PROGRAM COMPUTES THE SXT ANGLES SAC
 0352            ITA    ITC             AND PAC GIVEN THE STAR VECTOR IN SM AXES
 0353                   STAR
 0354                   S2              HALF UNIT VECTOR
 0355  2                SMNB
 0356            NOLOD  0
 0357  2         STORE  6               STORE (STARM0,STARM1,STARM2)
 0358            DMOVE  0
 0359                   ZERODP
 0360  2         STORE  VAC +4          SET VAC TO (STARM0,STARM1,0)
 0361            NOLOD  1               UNIT VAC TO (S0,S1,0)
 0362            UNIT   TSRT
 0363                   2
 0364  2         STORE  0               STORE  COS/4 =S0/4 , SIN/4 = S1/4 ,0
 0365            DMOVE  0
 0366                   0
 0367  2                COSTH
 0368            DMOVE  0
 0369                   2
 0370  2                SINTH
 0371            ITC    0
 0372  2                ARCTRIG         USES THE COS/SIN STORED ABOVE
 0373            RTB    0
 0374                   1STO2S
 0375  2         STORE  SAC
 0376            DOT    3
 0377            TSLT   ASIN
 0378            TSLT   BOV
 0379            BMN    RTB
 0380                   0               1/4 UNIT (STARM0,STARM1,0)
 0381                   6               STARM-1/2 UNIT VECTOR
 0382                   3
 0383                   3
 0384                   CALCSXA1
 0385                   CALCSXA1
 0386                   1STO2S
 0387  2         STORE  PAC
 0388            ITCI   0
 0389  2                S2
 0390  2CALCSXA1 EXIT   0               PROGRAM ERROR,STAR OUT OF FIELD OF VIEW
 0391            TC     ALARM
 0392            OCT    00402
 0393  8         TC     ENDOFJOB
 0394   SXTANG   VXV    1               TIVELY FROM INPUTS STAR AND XNB,YNB,ZNB
 0395            UNIT   VSRT            THE HALF UNIT STAR VECTOR AND THE NAV
 0396                   ZNB             BASE HALF AXES.
 0397                   STAR
 0398                   1
 0399  2         STORE  PDA             DEFINES PROJECTION OF STAR IN XY PLANE
 0400            DOT    1
 0401            COMP   ITA             COMPUTE  SIN(PI.SAC)/4
 0402                   PDA
 0403                   XNB
 0404                   S2
 0405  2         STORE  SINTH
 0406            DOT    0               COMPUTE  COS(PI.SAC)/4
 0407                   PDA
 0408                   YNB
 0409  2         STORE  COSTH
 0410            ITC    0               COMPUTE  SAC
 0411  2                ARCTRIG
 0412            RTB    0
 0413                   1STO2S
 0414  2         STORE  SAC
 0415            VXV    4
 0416            DOT    TSLT
 0417            ASIN   TSLT            COMPUTE PAC
 0418            BOV    BMN
 0419            RTB
 0420                   PDA
 0421                   ZNB
 0422                   STAR
 0423                   2
 0424                   3
 0425                   SXTALARM
 0426                   SXTALARM        WE NOW HAVE PRECISION ANGLE
 0427                   1STO2S
 0428  2         STORE  PAC
 0429            ITCI   0               JOB IS DONE
 0430  2                S2
 0431  2SXTALARM EXIT   0               BRANCH TO RESTART SEQUENCE
 0432            TC     ALARM
 0433            OCT    00403
 0434  2         TC     ENDOFJOB
 0435   QTSN45   2DEC   .1768
 0436   THIRD    2DEC   .167
 0437   ZPRIME   =      22D
 0438   PDA      =      22D
 0439   COSTH    =      16D
 0440   SINTH    =      18D
 0441   THETA    =      20D
 0442   STARM    =      VAC
 0443   ZERODP   2DEC   0
 0444   POSMAXDP OCT    37777
 0445            OCT    37777
 0446   HALFDP   2DEC   .5
 0447   .333...  2DEC   .3333333333
L      2KEYRUPT, UPRUPT, FRESH START
 0001            BANK   4
 0002   KEYRUPT1 MASK   LOW5            C(IN0) IN A
 0003            TS     RUPTREG4
 0004            TC     LODSAMPT        TIME IS SNATCHED IN RUPT FOR NOUN 65
 0005            CAF    PRIO33
 0006            TC     NOVAC
 0007            CADR   CHARIN
 0014   NOKEYBUF XCH    RUPTREG4
 0015            INDEX  LOCCTR
 0016            TS     MPAC            LEAVE 5 BIT KEY CDE IN MPAC FOR CHARIN
 0017  8         TC     RESUME
 0018   UPRUPTB  TS     BANKRUPT
 0019            TC     READTIME +1     TIME IS SNATCHED IN RUPT FOR NOUN 65
 0020            CAF    ZERO
 0021            XCH    UPLINK          ZERO UPLINK
 0022            TS     KEYTEMP1
 0023            CCS    DSPTAB  +7      TURN ON UPACT LIGHT
 0024            TC     +2              UPACT = BIT 11 OF DSPTAB +7
 0025            CAF    B12-1           SAFETY PLAY
 0026            AD     ONE
 0027            TS     KEYTEMP2        MAG OF DSPTAB +7 INTO KEYTEMP2
 0028            MASK   BIT11
 0029            CCS    A
 0030            TC     UPRPT1          BIT 11 ALREADY ONE
 0031            XCH    KEYTEMP2        BIT 11 = 0
 0032            AD     BIT11
 0033            CS     A               STORE NEGATIVELY
 0034            XCH    DSPTAB  +7
 0035            CCS    A
 0036            TC     INCNOUTU        PREVIOUS CONTENTS WAS +
 0037            NOOP                   SAFETY PLAY
 0038   UPRPT1   CAF    LOW5            TEST FOR TRIPLE CHAR REDUNDANCY
 0039            MASK   KEYTEMP1        LOW5 OF WORD
 0040            XCH    KEYTEMP1        LOW5 INTO KEYTEMP1
 0041            XCH    SR              WHOLE WORD INTO SR
 0042            TS     KEYTEMP2        ORIGINAL SR INTO KEYTEMP2
 0043            TC     SRGHT5
 0044            MASK   LOW5            MID 5
 0045            AD     HI10
 0046            TC     UPTEST
 0047            TC     SRGHT5
 0048            MASK   LOW5            HIGH 5
 0049            COM
 0050            TC     UPTEST
 0051   UPOK     TC     RESTORSR        CODE IS GOOD
 0052            CS     ELRCODE         IF CODE = ERROR LIGHT RESET, PUT +0
 0053            AD     KEYTEMP1        INTO UPLOCK(BIT2 OF STATE)
 0054            CCS    A               IF CODE NOT= ELR, PASS CODE ONLY IF
 0055            TC     TSTUPLOK        UPLOCK=0 (BIT2 OF STATE)
 0056   ELRCODE  OCT    22
 0057            TC     TSTUPLOK
 0058            CS     BIT2            0 INTO UPLOCK( BIT2 OF STATE)
 0059            MASK   UPLOCK
 0060            TS     UPLOCK
 0061            TC     ACCEPTUP
 0062   TSTUPLOK CAF    BIT2
 0063            MASK   UPLOCK
 0064            CCS    A
 0065            TC     RESUME          UPLOCK = 1 (BIT2 OF STATE)
 0066   ACCEPTUP XCH    KEYTEMP1        UPLOCK = 0 (BIT2 OF STATE)
 0067            TC     KEYRUPT1 +1
 0068   TMFAIL2  TC     RESTORSR        CODE IS BAD
 0069            CS     BIT2            LOCK OUT FURTHER UPLINK ACTIVITY (BY
 0070            MASK   UPLOCK          PUTTING 1 INTO UPLOCK,BIT2 OF STATE)
 0071            AD     BIT2            UNTIL ERROR LIGHT RESET IS SENT UP
 0072            TS     UPLOCK          UPLINK.
 0073   TMFAIL1  TC     TMALM
 0074  2         TC     RESUME
 0075   RESTORSR XCH    KEYTEMP2
 0076            DOUBLE
 0077            TS     SR
 0078  2         TC     Q
 0079  2TMALM    EQUALS TMFAIL          TM FAIL LIGHT ON (IN DOWNRUPT).
 0080   SRGHT5   CS     SR
 0081            CS     SR
 0082            CS     SR
 0083            CS     SR
 0084            CS     SR
 0085            CS     A
 0086  2         TC     Q               DELIVERS WORD UNCOMPLEMENTED
 0087   UPTEST   AD     KEYTEMP1
 0088            CCS    A
 0089            TC     TMFAIL2
 0090            TC     CCSHOLE
 0091            TC     TMFAIL2
 0092  2         TC     Q
 0093   HI10     OCT    77740
 0094  2UPBANK   EQUALS EXECBANK        IN SAME BANK AS EXEC.
 0095  2B12-1    OCT    3777
 0096   INCNOUTU XCH    NOUT
 0097            AD     ONE
 0098            TS     NOUT
 0099            INDEX  Q
 0100   UPLAST   TC     1
R0101  8UPACT IS TURNED OFF BY VBRELDSP, ALSO BY ERROR LIGHT RESET.
R0102   THE RECEPTION OF A BAD CODE BY UPLINK LOCKS OUT FURTHER UPLINK ACTIVITY
R0103   BY PLACING A 1 INTO UPLOCK(BIT2 OF STATE). BIT9 (AND BIT11. OF TMKEYBUF
R0104   IS SET TO 1 TO SEND AN INDICATION OF THIS SITUATION DOWN THE DOWNLINK.
R0105   THE UPLINK INTERLOCK IS ALLOWED WHEN AN ERROR LIGHT RESET CODE IS SENT
R0106   UP THE UPLINK, OR WHEN A FRESH START IS PERFORMED.
L      2PINBALL GAME  BUTTONS AND LIGHTS
R0001  4KEYBOARD AND DISPLAY PROGRAM
R0002  2THE FOLLOWING QUOTATION IS PROVIDED THROUGH THE COUTESY OF THE AUTHORS.
R0003         ::IT WILL BE PROVED TO THY FACE THAT THOU HAST MEN ABOUT THEE THAT
R0004   USUALLY TALK OF A NOUN AND A VERB, AND SUCH ABOMINABLE WORDS AS NO
R0005  2CHRISTIAN EAR CAN ENDURE TO HEAR.::
R0006  4                     HENRY 6, ACT 2, SCENE 4
R0007   SUMMARY OF ERASABLE ASSIGNMENTS FOR KEYBOARD AND DISPLAY PROGRAM
R0008  4WHICH ARE ALL DEFINED ELSEWHERE.
R0009  2         SETLOC 627
R0010   BUFFER STORAGE AREAS FOR ROUTINES USING DISPLAY OR LOAD ROUTINES.
R0011   DSPTEM1  ERASE  +2              BUFFER STORAGE AREA 1 (MOSTLY FOR TIME)
R0012   DSPTEM2  ERASE  +2              BUFFER STORAGE AREA 2 (MOSTLY FOR DEG)
R0013  4ERASABLE ASSIGNMENTS SPECIFIC TO PINBALL
R0014  2ERASABLES RESERVED FOR EXECUTIVE ACTION
R0015   DSPCOUNT ERASE                  DISPLAY POSITION INDICATOR
R0016   DECBRNCH ERASE                  +DEC, - DEC, OCT INDICATOR
R0017   VERBREG  ERASE                  VERB CODE
R0018   NOUNREG  ERASE                  NOUN CODE
R0019   XREG     ERASE                  R1 INPUT BUFFER
R0020   YREG     ERASE                  R2 INPUT BUFFER
R0021   ZREG     ERASE                  R3 INPUT BUFFER
R0022   XREGLP   ERASE                  LO PART OF XREG (FOR DEC CONV ONLY)
R0023   YREGLP   ERASE                  LO PART OF YREG (FOR DEC CONV ONLY)
R0024   ZREGLP   ERASE                  LO PART OF ZREG (FOR DEC CONV ONLY)
R0025   MODREG   ERASE                  MODE CODE
R0026   DSPLOCK  =      STATE (BIT4)    KEYBOARD/SUBROUTINE CALL INTERLOCK
R0027   REQRET   ERASE                  RETURN REGISTER FOR LOAD
R0028   LOADSTAT ERASE                  STATUS INDICATOR FOR LOADTST
R0029   CLPASS   ERASE                  PASS INDICATOR CLEAR
R0030   NOUT     ERASE                  ACTIVITY COUNTER FOR DSPTAB
R0031   NOUNADD  ERASE                  MACHINE ADDRESS FOR NOUN
R0032   MONSAVE  ERASE                  N/V CODE FOR MONITOR. ALSO ACTIVITY
R0033   MONSAVE1 ERASE                  NOUNADD STORAGE FOR MONITOR WITH MATBS
R0034   DSPTAB   ERASE  +13D            0-10,DISPLAY PANEL BUFFER.11-13,C RELAYS
R0035   CADRSTOR ERASE                  ENDIDLE STORAGE
R0036   GRABLOCK ERASE                  INTERNAL INTERLOCK FOR DISPLAY SYSTEM
R0037   NVSBCADR ERASE                  NVSUB STORAGE FOR CALLING CADR
R0038   DSPLIST  ERASE  +2              WAITING LIST FOR DSP SYST INTERNAL USE
R0039  4END OF ERASABLES RESERVED FOR EXECUTIVE ACTION
R0040  2ERASABLES RESERVED FOR INTERRUPT ACTION
R0041   IN0WORD  ERASE                  INPUT CODE STORAGE(KEYRUPT OR UPRUPT)
R0042  4DSPCNT   ERASE                  COUNTER FOR DSPOUT
R0043  2TEMPORARY ERASABLES FOR EXECUTIVE ACTION
R0044   DSEXIT   =      COMPON          RETURN FOR DSPIN
R0045   EXITEM   =      COMPON          RETURN FOR SCALE FACTOR ROUTINE SELECT
R0046  2BLANKRET =      COMPON          RETURN FOR 2BLANK
R0047   WRDRET   =      TEM9            RETURN FOR 5BLANK
R0048   WDRET    =      TEM9            RETURN FOR DSPWD
R0049   DECRET   =      TEM9            RETURN FOR PUTCOM(DEC LOAD)
R0050  221/22REG =      TEM9            TEMP FOR CHARIN
R0051   UPDATRET =      ORDER           RETURN FOR UPDATNN, UPDATVB
R0052   CHAR     =      ORDER           TEMP FOR CHARIN
R0053   ERCNT    =      ORDER           COUNTER FOR ERROR LIGHT RESET
R0054  2DECOUNT  =      ORDER           COUNTER FOR SCALING AND DISPLAY (DEC)
R0055   SGNON    =      TEM11           TEMP FOR +,- ON
R0056   NOUNTEM  =      TEM11           COUNTER FOR MIXNOUN FETCH
R0057   DISTEM   =      TEM11           COUNTER FOR OCTAL DISPLAY VERBS
R0058   DECTEM   =      TEM11           COUNTER FOR FETCH (DEC DISPLAY VERBS)
R0059  2DECTEM1  =      TEM11           TEMP FOR NUM
R0060   SGNOFF   =      DVSW            TEMP FOR +,- ON
R0061   NVTEMP   =      DVSW            TEMP FOR NVSUB
R0062   SFTEMP1  =      DVSW            STORAGE FOR SF CONST HI PART(=SFTEMP2-1)
R0063  2DECTEM2  =      DVSW            TEMP FOR NUM
R0064   CODE     =      BRANCHQ         FOR DSPIN
R0065  2SFTEMP2  =      BRANCHQ         STORAGE FOR SF CONST LO PART(=SFTEMP1+1)
R0066  2ENTRET   =      MODE            EXIT FROM ENTER
R0067   PROGREG  =      VBUF    +2      FOR GO EXEC PROGRAM
R0068   MIXTEMP  =      VBUF    +2      FOR MIXNOUN DATA
R0069   SIGNRET  =      VBUF    +2      RETURN FOR +,- ON
R0070  2ALSO PROGREG+1 ,PROGREG+2.  MIXTEMP+1, MIXTEMP+2.
R0071   WDCNT    =      VBUF    +5      CHAR COUNTER FOR DSPWD
R0072  2INREL    =      VBUF    +5      INPUT BUFFER SELECTOR ( X,Y,Z, REG )
R0073   MIXBR    =      TEM10           INDICATOR FOR MIXED OR NORMAL NOUN
R0074  2DSPMMTEM =      TEM10           DSPCOUNT SAVE FOR DSPMM
R0075   MONTEM   =      NEWEQIND        TEMP RETURN FOR MONITOR
R0076  2DSREL    =      TEM2            REL ADDRESS FOR DSPIN(TEM2 USED BY DAD1)
R0077   DSMAG    =      TEM4            MAGNITUDE STORE FOR DSPIN
R0078  2IDADDTEM =      TEM4            MIXNOUN INDIRECT ADDRESS STORAGE
R0079   COUNT    =      TEM5            FOR DSPIN  (TEM5 IS USED BY DAD)
R0080   LSTPTR   =      ARETURN         LIST POINTER FOR GRABUSY
R0081   RELRET   =      ARETURN         RETURN FOR RELDSP
R0082  2FREERET  =      ARETURN         RETURN FOR FREEDSP
R0083  2CADRTEM  =      ESCAPE          TEMP STORAGE FOR GRAB ROUTINES
R0084   NNADTEM  ERASE                  TEMP FOR NOUN ADDRESS TABLE ENTRY
R0085   NNTYPTEM ERASE                  TEMP FOR NOUN TYPE TABLE ENTRY
R0086   IDAD1TEM ERASE                  TEMP FOR INDIR ADRES TABLE ENTRY(MIXNN)
R0087                                   MUST = IDAD2TEM-1, = IDAD3TEM-2.
R0088   IDAD2TEM ERASE                  TEMP FOR INDIR ADRES TABLE ENTRY(MIXNN)
R0089                                   MUST = IDAD1TEM+1, = IDAD3TEM-1.
R0090   IDAD3TEM ERASE                  TEMP FOR INDIR ADRES TABLE ENTRY(MIXNN)
R0091  4                                MUST = IDAD1TEM+2, = IDAD2TEM+1.
R0092  2TEMPORARY ERASABLES FOR INTERRUPT ACTION
R0093   KEYTEMP1 =      WTEXIT          TEMP FOR KEYRUPT, UPRUPT
R0094   DSRUPTEM =      WTEXIT          TEMP FOR DSPOUT
R0095  8KEYTEMP2 =      RUPTAGN         TEMP FOR KEYRUPT, UPRUPT
R0096   THE INPUT CODES ASSUMED FOR THE KEYBOARD ARE,
R0097   0        10000
R0098   1        00001
R0099   9        01001
R0100   VERB     10001
R0101   ERROR RES10010
R0102   KEY RLSE 11001
R0103   +        11010
R0104   -        11011
R0105   ENTER    11100
R0106   CLEAR    11110
R0107  4NOUN     11111
R0108   OUTPUT FORMAT FOR DISPLAY PANEL. SET OUT0 TO  AAAABCCCCCDDDDD.
R0109   A-S SELECT A RELAYWORD. THIS DETERMINES WHICH PAIR OF CHARACTERS ARE
R0110   ENERGIZED.
R0111   B FOR SPECIAL RELAYS SUCH AS SIGNS ETC.
R0112   C-S  5 BIT RELAY CODE FOR LEFT CHAR OF PAIR SELECTED BY RELAYWORD
R0113  2D-S  5 BIT RELAY CODE FOR RIGHTCHAR OF PAIR SELECTED BY RELAYWORD.
R0114   THE PANEL APPEARS AS FOLLOWS,
R0115   MD1    MD2                         (MAJOR MODE)
R0116   VD1    VD2 (VERB)    ND1    ND2    (NOUN)
R0117   R1D1   R1D2   R1D3   R1D4   R1D5   (R1)
R0118   R2D1   R2D2   R2D3   R2D4   R2D5   (R2)
R0119  2R3D1   R3D2   R3D3   R3D4   R3D5   (R3)
R0120   EACH OF THESE IS GIVEN A DSPCOUNT NUMBER FOR USE WITHIN COMPUTATION ONLY
R0121   MD1   25     R2D1  11         ALL ARE OCTAL
R0122   MD2   24     R2D2  10
R0123   VD1   23     R2D3   7
R0124   VD2   22     R2D4   6
R0125   ND1   21     R2D5   5
R0126   ND2   20     R3D1   4
R0127   R1D1  16     R3D2   3
R0128   R1D2  15     R3D3   2
R0129   R1D3  14     R3D4   1
R0130   R1D4  13     R3D5   0
R0131  4R1D5  12
R0132  2THERE IS AN 11 REGISTER TABLE (DSPTAB) FOR THE DISPLAY PANEL.
R0133   DSPTAB RELAYWD       BIT11     BITS 10-6     BITS 5-1
R0134   RELADD
R0135   10     1011                    MD1  (25)     MD2  (24)
R0136   9      1010          FLASH     VD1  (23)     VD2  (22)
R0137   8      1001                    ND1  (21)     ND2  (20)
R0138   7      1000          UPACT                   R1D1 (16)
R0139   6      0111          +R1       R1D2 (15)     R1D3 (14)
R0140   5      0110          -R1       R1D4 (13)     R1D5 (12)
R0141   4      0101          +R2       R2D1 (11)     R2D2 (10)
R0142   3      0100          -R2       R2D3 (7)      R2D4 (6)
R0143   2      0011                    R2D5 (5)      R3D1 (4)
R0144   1      0010          +R3       R3D2 (3)      R3D3 (2)
R0145   0      0001          -R3       R3D4 (1)      R3D5 (0)
R0146  4       0000   NO RELAYWORD
R0147   THE 5 BIT RELAY CODES ARE,
R0148   BLANK      00000
R0149   0          10101
R0150   1          00011
R0151   2          11001
R0152   3          11011
R0153   4          01111
R0154   5          11110
R0155   6          11100
R0156   7          10011
R0157   8          11101
R0158  89          11111
 0159  2         SETLOC 14000
 0160   FLASHON  XCH    Q
 0161            TS     DSEXIT
 0162  2         TC     FLASHON1
 0163   FLASHOFF XCH    Q
 0164            TS     DSEXIT
 0165            TC     FLASHOF1
A0166  4                                END OF STANDARD LEAD INS.
 0167   CHARIN   TC     DSPLOCK1        BLOCK DISPLAY SYST BUT SAVE OLD
 0168            MASK   BIT4            C(DSPLOCK) FOR ERROR LIGHT RESET.
 0169            TS     21/22REG
 0170            XCH    MPAC
 0171            TS     CHAR
 0172            INDEX  A
 0173            TC     +1              INPUT CODE     FUNCTION
 0174            TC     CHARALRM        0
 0175            TC     NUM             1
 0176            TC     NUM             2
 0177            TC     NUM             3
 0178            TC     NUM             4
 0179            TC     NUM             5
 0180            TC     NUM             6
 0181            TC     NUM             7
 0182            TC     89TEST          10                 8
 0183            TC     89TEST          11                 9
 0184            TC     CHARALRM        12
 0185            TC     CHARALRM        13
 0186            TC     CHARALRM        14
 0187            TC     CHARALRM        15
 0188            TC     CHARALRM        16
 0189            TC     CHARALRM        17
 0190            TC     NUM     -2      20                 0
 0191            TC     VERB            21                 VERB
 0192            TC     ERROR           22                 ERROR LIGHT RESET
 0193            TC     ABORTCAL        23                 ABORT
 0194            TC     CHARALRM        24
 0195            TC     CHARALRM        25
 0196            TC     CHARALRM        26
 0197            TC     CHARALRM        27
 0198            TC     CHARALRM        30
 0199            TC     VBRELDSP        31                 KEY RELEASE
 0200            TC     POSGN           32                 +
 0201            TC     NEGSGN          33                 -
 0202            TC     ENTERJMP        34                 ENTER
 0203            TC     CHARALRM        35
 0204            TC     CLEAR           36                 CLEAR
 0205  4         TC     NOUN            37                 NOUN
 0206   ENTERJMP TC     POSTJUMP
 0207  2         CADR   ENTER
 0208   ABORTCAL CAF    OCT32
 0209            TC     POSTJUMP        FORCE DECODING OF VERB 72 AND DO RELDSP.
 0210  2         CADR   JAMEXTVB
 02101 4OCT32    OCT    32
 0211   89TEST   CAF    THREE
 0212            MASK   DECBRNCH
 0213            CCS    A
 0214            TC     NUM             IF DECBRNCH IS +, 8 OR 9 OK
 0215  4         TC     CHARALRM        IF DECBRNCH IS +0, REJECT 8 OR 9
R0216   NUM ASSEMBLES OCTAL 3 BITS AT A TIME. FOR DECIMAL IT CONVERTS INCOMING
R0217   WORD AS A FRACTION, KEEPING RESULTS TO DP.
R0218   OCTAL RESULTS ARE LEFT IN XREG, YREG, OR ZREG. HI PART OF DEC IN XREG,
R0219   YREG, ZREG. THE LOW PARTS IN XREGLP, YREGLP, OR ZREGLP)
R0220   DECBRNCH IS LEFT AT +0 FOR OCT, +1 FOR + DEC, +2 FOR - DEC.
R0221  2IF DSPCOUNT WAS LEFT -, NO MORE DATA IS ACCEPTED.
 0222            CAF    ZERO
 0223            TS     CHAR
 0224   NUM      CCS    DSPCOUNT
 0225            TC     +4              +
 0226            TC     +3              +0
 0227            TC     +1              -BLOCK DATA IN IF DSPCOUNT IS -
 0228            TC     ENDOFJOB        -0
 0229            TC     GETINREL
 0230            CCS    CLPASS          IF CLPASS IS + OR +0, MAKE IT +0.
 0231            CAF    ZERO
 0232            TS     CLPASS
 0233            TC     +1
 0234            INDEX  CHAR
 0235            CAF    RELTAB
 0236            MASK   LOW5
 0237            TS     CODE
 0238            XCH    DSPCOUNT
 0239            TS     COUNT
 0240            TS     DSPCOUNT
 0241            TC     DSPIN
 0242            CAF    THREE
 0243            MASK   DECBRNCH
 0244            CCS    A               +0, OCTAL.  +1, + DEC.  +2, - DEC.
 0245            TC     DECTOBIN        +
 0246            INDEX  INREL           +0 OCTAL
 0247            XCH    VERBREG
 0248            TS     CYL
 0249            CS     CYL
 0250            CS     CYL
 0251            XCH    CYL
 0252            AD     CHAR
 0253            TC     ENDNMTST
 0254   DECTOBIN INDEX  INREL
 0255            XCH    VERBREG
 0256            TS     MPAC            SUM X 2EXP-14 IN MPAC
 0257            CAF    ZERO
 0258            TS     MPAC    +1
 0259            CAF    TEN             10 X 2EXP-14
 0260            TC     SHORTMP         10SUM X 2EXP-28 IN MPAC, MPAC+1
 0261            XCH    MPAC    +1
 0262            AD     CHAR
 0263            TS     MPAC    +1
 0264            TC     ENDNMTST        NO OF
 0265            AD     MPAC            OF MUST BE 5TH CHAR
 0266            TS     MPAC
 0267            TC     DECEND
 0268   ENDNMTST INDEX  INREL
 0269            TS     VERBREG
 0270            CS     DSPCOUNT
 0271            INDEX  INREL
 0272            AD     CRITCON
 0273            CCS    A
 0274            TC     CHARALRM        +     PATHOLOGICAL CASE
 0275            TC     CHARALRM        +0   IMPOSSIBLE
 0276            TC     MORNUM          -
 0277   ENDNUM   CAF    THREE
 0278            MASK   DECBRNCH
 0279            CCS    A
 0280            TC     DECEND
 0281   ENDALL   CS     DSPCOUNT        BLOCK NUMIN BY PLACING DSPCOUNT
 0282            TC     MORNUM  +1      NEGATIVELY
 0283   DECEND   CAF    THREE
 0284            MASK   DECBRNCH
 0285            INDEX  A
 0286            TC     +0
 0287            TC     +DECSGN         + DEC
 0288            TC     DMP             - DEC
 0289            XCADR  NEGDECON
 0290            TC     ENDECOM         MULT SUM X 2EXP-28 IN MPAC, MPAC+1 BY
 0291   +DECSGN  TC     DMP             2EXP14/10EXP5. GIVES(SUM/10EXP5)X2EXP-14
 0292            XCADR  DECON           IN MPAC, +1, +2.
 0293   ENDECOM  XCH    MPAC    +2
 0294            INDEX  INREL
 0295            TS     XREGLP  -2
 0296            XCH    MPAC    +1
 0297            INDEX  INREL
 0298            TS     VERBREG
 0299            TC     ENDALL
 0300   MORNUM   CCS    DSPCOUNT        DECREMENT DSPCOUNT
 0301            TS     DSPCOUNT
 0302  2         TC     ENDOFJOB
 0303   CRITCON  OCT    22              (DEC 18)
 0304            OCT    20              (DEC 16)
 0305            OCT    12              (DEC 10)
 0306            OCT    5
 0307  2         OCT    0
 0308   DECON    2DEC   E-5 B14         2EXP14/10EXP5 = .16384 DEC
 0309   NEGDECON OCT    72603
 0310  4         OCT    64516
R0311   GETINREL GETS PROPER DATA REG REL ADDRESS FOR CURRENT C(DSPCOUNT) AND
R0312  2PUTS IN INTO INREL. +0 VERBREG, 1 NOUNREG, 2 XREG, 3 YREG, 4 ZREG.
 0313   GETINREL INDEX  DSPCOUNT
 0314            CAF    INRELTAB
 0315            TS     INREL           (A TEMP, REG)
 0316  2         TC     Q
 0317   INRELTAB OCT    4               R3D5 (DSPCOUNT = 0)
 0318            OCT    4               R3D4           =(1)
 0319            OCT    4               R3D3           =(2)
 0320            OCT    4               R3D2           =(3)
 0321            OCT    4               R3D1           =(4)
 0322            OCT    3               R2D5           =(5)
 0323            OCT    3               R2D4           =(6)
 0324            OCT    3               R2D3           =(7)
 0325            OCT    3               R2D2           =(8D)
 0326            OCT    3               R2D1           =(9D)
 0327            OCT    2               R1D5           =(10D)
 0328            OCT    2               R1D4           =(11D)
 0329            OCT    2               R1D3           =(12D)
 0330            OCT    2               R1D2           =(13D)
 0331            OCT    2               R1D1           =(14D)
 0332            TC     CCSHOLE         NO DSPCOUNT NUMBER = 15D
 0333            OCT    1               ND2            =(16D)
 0334            OCT    1               ND1            =(17D)
 0335            OCT    0               VD2            =(18D)
 0336  4         OCT    0               VD1            =(19D)
 0337   VERB     CAF    ZERO
 0338            TS     VERBREG
 0339            TS     CODE            VERB CANT USE 2BLANK SINCE THAT TURNS
 0340            CAF    VD1             THE FLASH OFF
 0341            TS     DSPCOUNT
 0342            TS     COUNT
 0343            TC     DSPIN
 0344            CAF    VD2
 0345            TS     COUNT
 0346            CAF    ZERO
 0347            TS     CODE
 0348            TC     DSPIN
 0349   N/VCOM   CAF    ZERO
 0350            TS     DECBRNCH
 0351            TS     REQRET          SET FOR ENTPAS0
 0352            CAF    ENDINST         IF DSPALARM OCCURS BEFORE FIRST ENTPAS0
 0353            TS     ENTRET          OR NVSUB, ENTRET MUST ALREADY BE SET
A0354                                   TO TC ENDOFJOB
 0355            TC     ENDOFJOB
 0356   NOUN     CAF    ZERO
 0357            TS     NOUNREG
 0358            CAF    ND1             ND1, OCT 21 (DEC 17)
 0359            TS     DSPCOUNT
 0360            TC     2BLANK
 0361  4         TC     N/VCOM
 0362  4VD2      =      CRITCON         OCT 22
 0363   NEGSGN   TC     SIGNTEST
 0364            TC     -ON
 0365            CAF    TWO
 0366   BOTHSGN  AD     DECBRNCH        SET DEC COMP BIT TO 1 (IN DECBRNCH)
 0367            INDEX  INREL           BIT 5 FOR R1
 0368            AD     BIT7            BIT 4 FOR R2
 0369            TS     DECBRNCH        BIT 3 FOR R3
 0370   FIXCLPAS CCS    CLPASS          IF CLPASS IS + OR +0, MAKE IT +0.
 0371            CAF    ZERO
 0372            TS     CLPASS
 0373            TC     +1
 0374  2         TC     ENDOFJOB
 0375   POSGN    TC     SIGNTEST
 0376            TC     +ON
 0377            CAF    ONE
 0378  2         TC     BOTHSGN
 0379   +ON      XCH    Q
 0380            TS     SIGNRET
 0381            TC     GETINREL
 0382            INDEX  INREL
 0383            CAF    SGNTAB  -2
 0384            TS     SGNOFF
 0385            AD     ONE
 0386            TS     SGNON
 0387   SGNCOM   CAF    ZERO
 0388            TS     CODE
 0389            XCH    SGNOFF
 0390            TC     11DSPIN
 0391            CAF    BIT11
 0392            TS     CODE
 0393            XCH    SGNON
 0394            TC     11DSPIN
 0395            TC     SIGNRET
 0396   -ON      XCH    Q
 0397            TS     SIGNRET
 0398            TC     GETINREL
 0399            INDEX  INREL
 0400            CAF    SGNTAB  -2
 0401            TS     SGNON
 0402            AD     ONE
 0403            TS     SGNOFF
 0404  2         TC     SGNCOM
 0405   SGNTAB   OCT    5               -R1
 0406            OCT    3               -R2
 0407  4         OCT    0               -R3
 0408   SIGNTEST XCH    Q               ALLOWS +,- ONLY WHEN DSPCOUNT=R1D1,
 0409            TS     SIGNRET         R2D1, OR R3D1. ALLOWS ONLY FIRST OF
 04091           CAF    THREE           CONSECUTIVE +/- CHARACTERS
 04092           MASK   DECBRNCH
 04093           CCS    A               IF LOW 2 BITS OF DECBRNCH NOT = 0, SIGN
 04094           TC     ENDOFJOB        FOR THIS WORD ALREADY IN. REJECT.
 0410            CS     R1D1
 0411            TC     SGNTST1
 0412            CS     R2D1
 0413            TC     SGNTST1
 0414            CS     R3D1
 0415            TC     SGNTST1
 0416            TC     ENDOFJOB        NO MATCH FOUND. SIGN ILLEGAL
 0417   SGNTST1  AD     DSPCOUNT
 0418            CCS    A
 0419            TC     Q
 0420            TC     CCSHOLE
 0421            TC     Q
 0422  4         TC     SIGNRET         SIGN LEGAL
R0423   ERROR LIGHT RESET RESETS TMALM, DSPALARM (CHECK FAIL), PROGALM, UNBLOCKS
R0424   ENDPULSES, RESETS ERRUPT TRAP. IT ALSO FORCES BIT 12 OF ALL DSPTAB
R0425  2ENTRIES TO ONE. RESETS UPACT LIGHT.
 0426   ERROR    CS     BIT4            RESTORE ORIGINAL C(DSPLOCK) BIT4 OF
 0427            INHINT                 STATE. THUS ERROR LIGHT RESET LEAVES
 0428            MASK   DSPLOCK         DSPLOCK UNCHANGED.
 0429            AD     21/22REG
 0430            TS     DSPLOCK
 0431            CS     BIT7            RESET ERRUPT TRAP
 0432            MASK   OUT1
 0433            AD     BIT7
 0434            TS     OUT1
 0435            CS     CFAILCON        RESET THE C RELAYS FOR IMU FAIL, CDUFAIL
 0436            MASK   DSPTAB  +11D    PIPA FAIL.
 0437            AD     BIT15
 0438            TS     DSPTAB  +11D
 0439            CS     ERCON
 0440            MASK   OUT1
 0441            TS     OUT1
 0442   TSTAB    CAF    BINCON          (DEC 10)
 0443            TS     ERCNT           ERCNT = COUNT
 0444            INHINT
 0445            INDEX  ERCNT
 0446            CCS    DSPTAB
 0447            AD     ONE
 0448            TC     ERPLUS
 0449            AD     ONE
 0450   ERMINUS  CS     A
 0451            MASK   NOTBIT12
 0452            TC     ERCOM
 0453   ERPLUS   CS     A
 0454            MASK   NOTBIT12
 0455            CS     A               MIGHT WANT TO RESET CLPASS, DECBRNCH,
 0456   ERCOM    INDEX  ERCNT           ETC.
 0457            TS     DSPTAB
 0458            RELINT
 0459            CCS    ERCNT
 0460            TC     TSTAB   +1
 0461            CCS    WASKSET
 0462            TC     ERROPT
 0463            TC     ERROPT
 0464            TC     ERROPT
 0465            XCH    IN3
 0466            XCH    IN3
 0467            MASK   LOW7
 0468  2         TS     WASKSET
 0469   ERROPT   CCS    WASOPSET
 0470            TC     ERROR1
 0471            TC     ERROR1
 0472            TC     ERROR1
 0473            XCH    IN3
 0474            XCH    IN3
 0475            MASK   OPTICSB
 0476  2         TS     WASOPSET
 0477   ERROR1   CAF    ZERO
 0478            TS     FAILREG
 0479            TS     OLDERR
 0480            TS     SFAIL
 0481            TS     CODE
 0482            CAF    SEVEN
 0483            TC     11DSPIN         TURN OFF UPACT LIGHT
 0484            TC     ENDOFJOB
 0485   OPTICSB  OCT    35000
 0486   ERCON    OCT    01131           BITS 1, 4, 5, 7, 10.
A0487                                   PROGALM, TMFAIL, CHECK FAIL, ERRUPT TRAP
A0488  2                                END PULSES.
 0489   NOTBIT12 OCT    73777
 0490  4CFAILCON OCT    40340
R0491   CLEAR BLANKS WHICH R1, R2, R3 IS CURRENT OR LAST TO BE DISPLAYED(PERTINE
R0492   NT XREG,YREG,ZREG IS CLEARED). SUCCESSIVE CLEARS TAKE CARE OF EACH RX
R0493  2L/ RC UNTIL R1 IS DONE. THEN NO FURTHER ACTION
R0494   THE SINGLE COMPONENT LOAD VERBS ALLOW ONLY THE SINGLE RC THAT IS
R0495  2APPROPRIATE TO BE CLEARED.
R0496   CLPASS   +0  PASS0, CAN BE BACKED UP
R0497            +NZ  HIPASS, CAN BE BACKED UP
R0498  2         -NZ  PASS0, CANNOT BE BACKED UP
 0499   CLEAR    CCS    DSPCOUNT
 0500            AD     ONE
 0501            TC     +2
 0502            AD     ONE
 0503            INDEX  A               DO NOT CHANGE DSPCOUNT BECAUSE MAY
 0504            CAF    INRELTAB        FAIL LEGALTST.
 05041           TS     INREL           MUST SET INREL, EVEN FOR HIPASS.
 0505            CCS    CLPASS
 0506            TC     CLPASHI         +
 0507            TC     +2              +0    IF CLPASS IS +0 OR -, IT IS PASS0
 0508            TC     +1              -
 0509            TC     LEGALTST
 0510            TC     CLEAR1
 0511   CLPASHI  CCS    INREL
 0512            TS     INREL
 0513            TC     LEGALTST
 0514            XCH    REQRET
 0515            AD     DOUBLK  +2      +3 TO - NUMBER. BACKS UP DATA REQUESTS
 0516            TS     REQRET
 0517            XCH    INREL
 0518            TS     MIXTEMP         TEMP STORAGE FOR INREL
 0519            XCH    VERBREG         DECREMENT VERB AND RE-DISPLAY
 0520            AD     NEG1
 0521            TS     VERBREG
 0522            TC     BANKCALL
 0523            CADR   UPDATVB
 0524            XCH    MIXTEMP
 0525            TS     INREL           RESTORE INREL
 0526   CLEAR1   TC     CLR5
 0527            CAF    ONE
 0528            AD     CLPASS          ONLY IF CLPASS IS + OR +0,
 0529            TS     CLPASS          SET FOR HIGHER PASS.
 0530            TC     ENDOFJOB
 0531   CLR5     XCH    Q
 0532            TS     WRDRET          USES 5BLANK  BUT AVOIDS ITS TC GETINREL
 0533            TC     5BLANK  +3
 0534   LEGALTST CS     TWO
 0535            AD     INREL
 0536            CCS    A
 0537            TC     Q               LEGAL  INREL G/ 2
 0538            TC     CCSHOLE
 0539            TC     ENDOFJOB        ILLEGAL   INREL= 0,1
 0540  4         TC     Q               LEGAL    INREL = 2
R0541   5BLANK BLANKS 5 CHAR DISPLAY WORD IN R1, R2, OR R3. IT ALSO ZEROES XREG,
R0542   YREG, OR ZREG.PLACE ANY + DSPCOUNT NUMBER FOR PERTINENT RC INTO DSPCOUNT
R0543  2DSPCOUNT IS LEFT SET TO LEFT MOST DSP NUMB FOR RC JUST BLANKED.
 0544   5BLANK   XCH    Q
 0545            TS     WRDRET
 0546            TC     GETINREL
 0547            CAF    ZERO
 0548            INDEX  INREL
 0549            TS     VERBREG         ZERO X, Y, Z REG.
 0550            INDEX  INREL
 0551            TS     XREGLP  -2
 0552            TS     CODE
 0553            INDEX  INREL           ZERO PERTINENT DEC COMP BIT.
 0554            CS     BIT7            PROTECT OTHERS
 0555            MASK   DECBRNCH
 0556            MASK   BRNCHCON        ZERO LOW 2 BITS.
 0557            TS     DECBRNCH
 0558            INDEX  INREL
 0559            CAF    SINBLANK -2     BLANK ISOLATED CHAR SEPARATELY
 0560            TS     COUNT
 0561            TC     DSPIN
 0562   5BLANK1  INDEX  INREL
 0563            CAF    DOUBLK  -2
 0564            TS     DSPCOUNT
 0565            TC     2BLANK
 0566            CS     TWO
 0567            AD     DSPCOUNT
 0568            TS     DSPCOUNT
 0569            TC     2BLANK
 0570            INDEX  INREL
 0571            CAF    R1D1    -2
 0572            TS     DSPCOUNT        SET DSPCOUNT TO LEFT MOST DSP NUMBER
 0573  2         TC     WRDRET          OF REG. JUST BLANKED
 0574   SINBLANK OCT    16              DEC 14
 0575            OCT    5
 0576            OCT    4
 0577   DOUBLK   OCT    15              DEC 13
 0578            OCT    11              DEC 9
 0579  2         OCT    3
 0580  2BRNCHCON OCT    77774
R0581   2BLANK BLANKS TWO CHAR. PLACE DSP NUMBER OF LEFT CHAR  OF THE PAIR INTO
R0582  2DSPCOUNT. THIS NUMBER IS LEFT IN DSPCOUNT
 0583   2BLANK   XCH    Q
 0584            TS     BLANKRET
 0585            CS     DSPCOUNT
 0586            CS     A
 0587            TS     SR
 0588            CS     BLANKCON
 0589            INHINT
 0590            INDEX  SR
 0591            XCH    DSPTAB
 0592            CCS    A
 0593            TC     INCNOUT         IF OLD CONTENTS +,+1 TO NOUT
 0594            TC     CCSHOLE
 0595            RELINT                 IF -,NOUT OK
 0596            TC     BLANKRET
 0597  2BLANKCON OCT    4000
 0598   INCNOUT  XCH    NOUT
 0599            AD     ONE
 0600            TS     NOUT
 0601            INDEX  Q
 0602  8         TC     1               RETURN TO 2+ L(CALLING TC)
R0603   ENTER PASS 0 IS THE EXECUTE FUNCTION. HIGHER ORDER ENTERS ARE TO LOAD
R0604   DATA. THE SIGN OF REQRET DETERMINES THE PASS, + FOR PASS 0,- FOR HIGHER
R0605  2PASSES.
 0606  2         SETLOC 16000
 0607   NVSUBB   TC     NVSUB1          STANDARD LEAD INS. DONT MOVE.
 0608   GRABUSYB TC     GRABUSY1
 0609   NVSUBSYB TC     NVSUBSY1
 0610   DSPMM    XCH    Q
 0611            TS     UPDATRET
 0612            TC     DSPMM1
 0613   LOADLV1  TC     LOADLV
A0614  4                                END OF STANDARD LEAD INS.
 0615   ENTER    CAF    ZERO
 0616            TS     CLPASS
 0617            CAF    ENDINST
 0618            TS     ENTRET
 0619            CCS    REQRET
 0620            TC     ENTPAS0         IF +, PASS 0
 0621            TC     ENTPAS0         IF +, PASS 0
 0622            TC     +1              IF -, NOT PASS 0
 0623            CAF    THREE           IF DEC, ALARM IF LESS THAN 5 CHAR IN,
 0624            MASK   DECBRNCH        BUT LEAVE REQRET - AND FLASH ON, SO
 0625            CCS    A               OPERATOR CAN SUPPLY MISSING NUMERICAL
 0626            TC     +2              CHARACTERS AND CONTINUE.
 0627            TC     ACCEPTWD        OCTAL. ANY NUMBER OF CHAR OK.
 0628            CCS    DSPCOUNT
 0629            TC     GODSPALM        LESS THAN 5 CHAR DEC(DSPCOUNT IS +)
 0630            TC     GODSPALM        LESS THAN 5 CHAR DEC(DSPCOUNT IS +)
 0631            TC     +1              5 CHAR IN (DSPCOUNT IS -)
 0632   ACCEPTWD CS     REQRET          5 CHAR IN (DSPCOUNT IS -)
 0633            TS     REQRET          SET REQRET +.
 0634            TC     BANKCALL
 0635            CADR   FLASHOFF
 0636  2         TC     REQRET
 0637  2ENTEXIT  =      ENTRET
 0638   ENTPAS0  CAF    ZERO             NOUN VERB SUB ENTERS HERE
 0639            TS     DECBRNCH
 0640   TESTVB   CS     VERBREG         IF VERB IS 32-77, SKIP NOUN TEST
 0641            AD     LOWVERB         32-VB
 0642            CCS    A
 0643            TC     TESTNN          VERB L/ 32
 0644   LOWVERB  OCT    32              LOWER VERB THAT AVOIDS NOUN TEST
 0645            TC     +1              VERB G/ 32
 0646            TC     VERBFAN         VERB=32
 0647   TESTNN   CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 0648            TC     SWCALL          ROUTINE.
 0649            INDEX  MIXBR
 0650            TC     +0
 0651            TC     +2              NORMAL
 0652            TC     MIXNOUN         MIXED
 0653            CCS    NNADTEM         NORMAL
 0654            TC     VERBFAN -2           NORMAL IF +
 0655            TC     GODSPALM        NOT IN USE   IF +0
 0656            TC     REQADD          SPECIFY MACHINE ADDRESS IF -
 0657            CAF    R3D1            AUGMENT MACHINE ADDRESS IF -0
 0658            TS     DSPCOUNT
 0659            XCH    NOUNADD
 0660            AD     ONE
 0661            TS     NOUNADD
 0662            TC     DSPOCTWD
 0663            TC     VERBFAN
 0664   REQADD   CAF    BIT15           SET CLPASS FOR PASS0 ONLY
 0665            TS     CLPASS
 0666            CS     ENDINST
 0667            AD     ENTEXIT
 0668            CCS    A               TEST IF REACHED HERE FROM INTERNAL OR
 0669            TC     INTMATBS                    FROM EXTERNAL
 0670            TC     CCSHOLE
 0671            TC     INTMATBS
 0672            TC     REQDATZ         EXTERNAL MACH ADDR TO BE SPECIFIED
 0673            CCS    DECBRNCH
 0674            TC     GODSPALM        ALARM IF DECIMAL USED FOR MATBS
 0675            XCH    ZREG            OCTAL USED    OK
 0676            TS     NOUNADD
 0677            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 0678            TC     SWCALL          ROUTINE.
 0679  2         TC     VERBFAN
 0680  2LODNNLOC CADR   LODNNTAB
 0681   INTMATBS CS     BIT4
 0682            MASK   VERBREG         MAKES VB 15 LOOK LIKE VB 05.
 0683            AD     NEG5
 0684            CCS    A
 0685            TC     DSPADD          VB NOT = 05 OR 15, DISPLAY ADDRESS.
 0686   NEG5     OCT    77772
 0687            TC     DSPADD          VB NOT = 05 OR 15, DISPLAY ADDRESS.
 0688            TC     VERBFAN         VB = 05 OR 15, DO NOT DISPLAY ADDRESS.
 0689   DSPADD   CAF    R3D1
 0690            TS     DSPCOUNT
 0691            CS     NOUNADD
 0692            CS     A
 0693            TC     DSPOCTWD
 0694  2         TC     VERBFAN
 0695            AD     ONE
 0696            TS     NOUNADD
 0697   VERBFAN  CS     LST2CON
 0698            AD     VERBREG         VERB-LST2CON
 0699            CCS    A
 0700            AD     ONE             VERB G/ LST2CON
 0701            TC     +2
 0702            TC     VBFANDIR        VERB L/ LST2CON
 0703   JAMEXTVB TS     MPAC            SPECIAL ENTRY FOR FORCING EXTENDED VERB.
 0704            TC     RELDSP          RELEASE DISPLAY SYST
 0705            XCH    MPAC            ALSO TURN OFF RELEASE DISPLAY SYST LIGHT
 0706            AD     LST2CADR
 0707            TC     BANKJUMP
 0708   LST2CON  OCT    40              FIRST LST2 VERB
 0709  2LST2CADR CADR   LST2FAN         THE LIST2 FAN IS LOCATED IN BANK 05
 0710   VBFANDIR INDEX  VERBREG
 0711            CAF    VERBTAB
 0712  2         TC     BANKJUMP
 0713   VERBTAB  CADR   GODSPALM        VB00 ILLEGAL
 0714            CADR   DSPA            VB01 DISPLAY OCT COMP 1 (R1)
 0715            CADR   DSPB            VB02 DISPLAY OCT COMP 2 (R1)
 0716            CADR   DSPC            VB03 DISPLAY OCT COMP 3 (R1)
 0717            CADR   DSPAB           VB04 DISPLAY OCT COMP 1,2 (R1,R2)
 0718            CADR   DSPABC          VB05 DISPLAY OCT COMP 1,2,3 (R1,R2,R3)
 0719            CADR   DECDSP          VB06 DECIMAL DISPLAY
 0720            CADR   DSPDPDEC        VB07 DP DECIMAL DISPLAY (R1,R2)
 0721            CADR   VBRQWAIT        VB10 REQUEST WAITLIST
 0722            CADR   MONITOR         VB11 MONITOR OCT COMP 1 (R1)
 0723            CADR   MONITOR         VB12 MONITOR OCT COMP 2 (R1)
 0724            CADR   MONITOR         VB13 MONITOR OCT COMP 3 (R1)
 0725            CADR   MONITOR         VB14 MONITOR OCT COMP 1,2 (R1,R2)
 0726            CADR   MONITOR         VB15 MONITOR OCT COMP 1,2,3 (R1,R2,R3)
 0727            CADR   MONITOR         VB16 MONITOR DECIMAL
 0728            CADR   MONITOR         VB17 MONITOR DP DEC  (R1,R2)
 0729   REQEXLOC CADR   VBRQEXEC        VB20 REQUEST EXECUTIVE
 0730            CADR   ALOAD           VB21 LOAD COMP 1 (R1)
 0731            CADR   BLOAD           VB22 LOAD COMP 2 (R2)
 0732            CADR   CLOAD           VB23 LOAD COMP 3 (R3)
 0733            CADR   ABLOAD          VB24 LOAD COMP 1,2 (R1,R2)
 0734            CADR   ABCLOAD         VB25 LOAD COMP 1,2,3 (R1,R2,R3)
 0735            CADR   GODSPALM        VB26 SPARE
 0736            CADR   GODSPALM        VB27 SPARE
 0737            CADR   GODSPALM        VB30 SPARE
 0738            CADR   DSPBANK         VB31 BANK DISPLAY
 0739            CADR   BUMP            VB32 C(R2) INTO R3, C(R1) INTO R2
 0740            CADR   VBPROC          VB33 PROCEED WITHOUT DATA
 0741            CADR   VBTERM          VB34 TERMINATE CURRENT TEST OR LOAD REQ
 0742            CADR   VBRELDSP        VB35 RELEASE DISPLAY SYST
 0743            CADR   SLAPB           VB36 FRESH START
 0744  4ENDVBFAN CADR   MMCHANG         VB37 CHANGE MAJOR MODE
R0745  8THE LIST2 VERBFAN IS LOCATED IN BANK 05.
R0746   NNADTAB CONTAINS A RELATIVE ADDRESS, IDADDREL(IN LOW 10 BITS), REFERRING
R0747   TO WHERE 3 CONSECUTIVE ADDRESSES ARE STORED (IN IDADDTAB).
R0748   MIXNOUN GETS DATA AND STORES IN MIXTEMP,+1,+2. IT SETS NOUNADD FOR
R0749  2 MIXTEMP.
 0750   MIXNOUN  CCS    NNADTEM
 0751            TC     +4              +  IN USE
 0752            TC     GODSPALM        +0  NOT IN USE
 0753            TC     +2              -  IN USE
 0754            TC     +1              -0  IN USE
 0755            CS     SIX
 0756            AD     VERBREG
 0757            CCS    A               AVOID MIXNOUN SWAP FOR OTHER THAN
 0758            TC     VERBFAN              DISPLAY VERBS
 0759            TC     CCSHOLE
 0760            TC     +1
 0761            CAF    TWO
 0762   MIXNN1   TS     NOUNTEM
 0763            AD     MIXAD
 0764            TS     NOUNADD         SET NOUNADD TO MIXTEMP + K
 0765            INDEX  NOUNTEM
 0766            CS     IDAD1TEM        GET IDADDTAB ENTRY FOR COMPONENT K
 0767            CS     A               OF NOUN.
 0768            TS     DECOUNT
A0769                                   TEST FOR DP(FOR OCT DISPLAY). IF SO, GET
A0770                                     MINOR PART ONLY.
 0771            MASK   HI5
 0772            TC     LEFT5           SF ROUT NUMBER IN A
 0773            TC     DPTEST
 0774            TC     MIXNN2          NO DP
 0775            CAF    ONE             DP  GET MINOR PART
 0776            AD     DECOUNT
 0777            TS     DECOUNT
 0778   MIXNN2   XCH    DECOUNT
 0779            MASK   LOW10           ESUBK (NO DP)  OR (ESUBK)+1    FOR DP
 0780            INDEX  A               PICK UP C(ESUBK)  NOT DP
 0781            CS     0               OR C((ESUBK)+1)  FOR DP MINOR PART
 0782            CS     A
 0783            INDEX  NOUNADD
 0784            XCH    0               STORE IN MIXTEM + K
 0785            CCS    NOUNTEM
 0786            TC     MIXNN1
 0787  2         TC     VERBFAN
 0788  4MIXAD    TC     MIXTEMP
 0789   DPTEST   TS     SFTEMP1         ENTER WITH SF ROUT NUMBER IN A.
 0790            XCH    Q               RETURNS TO L+1 IF NO DP
 0791            XCH    SFTEMP1         RETURNS TO L+2 IF DP
 0792            INDEX  A
 0793            TC     +1
 0794            TC     SFTEMP1         OCTAL ONLY  NO DP
 0795            TC     SFTEMP1         FRACT NO DP
 0796            TC     SFTEMP1         DEG  NO DP
 0797            TC     SFTEMP1         ARITH  NO DP
 0798            TC     DPTEST1         DP1OUT
 0799            TC     DPTEST1         DP2OUT
 0800            TC     SFTEMP1         OPDEG  NO DP
 0801            TC     DPTEST1         DP3OUT
 0802   DPTEST1  INDEX  SFTEMP1
 0803  4         TC     1               RETURN TO L+2
 0804   REQDATX  CS     Q
 0805            TS     REQRET
 0806            CAF    R1D1
 0807            TC     REQCOM
 0808   REQDATY  CS     Q
 0809            TS     REQRET
 0810            CAF    R2D1
 0811            TC     REQCOM
 0812   REQDATZ  CS     Q
 0813            TS     REQRET
 0814            CAF    R3D1
 0815   REQCOM   TS     DSPCOUNT
 0816            TC     BANKCALL
 0817            CADR   5BLANK
 0818            TC     BANKCALL
 0819            CADR   FLASHON
 0820            CS     ENDINST
 0821            AD     ENTEXIT
 0822            CCS    A
 0823            TC     +4              ENTEXIT NOT ENDOFJOB. NVSUB INITIATED
 0824            TC     CCSHOLE
 0825            TC     +2              ENTEXIT NOT ENDOFJOB. NVSUB INITIATED
 0826            TC     ENTEXIT         ENTEXIT = ENDOFJOB. EXTERNALLY INITIATED
 0827            CS     ZERO            NVSUB INITIATED LOAD. SET CADRSTOR TO -0
 0828            TS     CADRSTOR
 0829  2         TC     ENTEXIT
R0830   IF NVSUB INITIATED LOAD, SET CADRSTOR TO -0 TO TELL RECALTST TO RELEASE
R0831  4DISPLAY IF ENDIDLE WAS NOT USED. (NECESSARY FOR DATAWAIT)
 0832            TS     NOUNREG
 0833   UPDATNN  XCH    Q
 0834            TS     UPDATRET
 0835            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 0836            TC     SWCALL          ROUTINE.
 0837            CCS    NNADTEM
 0838            AD     ONE             NORMAL
 0839            TC     PUTADD
 0840            TC     PUTADD  +1      MATBS  DONT CHANGE NOUNADD
 0841            TC     PUTADD  +1      MATBI  DONT CHANGE NOUNADD
 0842   PUTADD   TS     NOUNADD
 0843            CAF    ND1
 0844            TS     DSPCOUNT
 0845            CS     NOUNREG
 0846  2         TC     UPDAT1
 0847            TS     VERBREG
 0848   UPDATVB  XCH    Q
 0849            TS     UPDATRET
 0850            CAF    VD1
 0851            TS     DSPCOUNT
 0852            CS     VERBREG
 0853   UPDAT1   CS     A
 0854            TC     DSP2BIT
 0855  4         TC     UPDATRET
 0856   GODSPALM TC     POSTJUMP
 0857            CADR   DSPALARM
P0858            NOUN   TABLES
R0859   NOUN CODE L/ 55, NORMAL CASE. NOUN CODE G/E 55, MIXED NOUN CASE.
R0860   FOR NORMAL CASE, NNADTAB CONTAINS ONE MACHINE ADDRESS FOR EACH NOUN.
R0861   +0 INDICATES NOUN NOT USED.   - ENTRY IDICATES MACHINE ADDRESS TO BE
R0862  2SPECIFIED.      -0 ENTRY INDICATES AUGMENT OF LAST MACHINE ADDRESS.
R0863   FOR MIXED CASE, NNADTAB CONTAINS ONE INDIRECT ADDRESS(IDADDREL) IN LOW
R0864  210 BITS, AND THE COMPONENT CODE NUMBER IN THE HIGH 5 BITS.
R0865  2NNTYPTAB IS A PACKED TABLE OF THE FORM MMMMMNNNNNPPPPP.
R0866   FOR THE NORMAL CASE, M-S ARE THE COMPONENT CODE NUMBER.
R0867                        N-S ARE THE SF ROUTINE CODE NUMBER.
R0868  2                     P-S ARE THE SF CONSTANT CODE NUMBER.
R0869   MIXED CASE,M-S ARE THE SF CONSTANT3 CODE NUMBER     3 COMPONENT CASE
R0870              N-S ARE THE SF CONSTANT2 CODE NUMBER
R0871              P-S ARE THE SF CONSTANT1 CODE NUMBER
R0872              N-S ARE THE SF CONSTANT2 CODE NUMBER     2 COMPONENT CASE
R0873              P-S ARE THE SF CONSTANT1 CODE NUMBER
R0874  2           P-S ARE THE SF CONSTANT1 CODE NUMBER      1 COMPONENT CASE
R0875   THERE IS ALSO AN INDIRECT ADDRESS TABLE(IDADDTAB) FOR MIXED CASE ONLY.
R0876   ENTRY IS OF FORM RRRRREEEEEEEEEE. IDADDREL IS THE RELATIVE ADDRESS OF
R0877   THE FIRST OF THESE ENTRIES.
R0878   R-S ARE THE SF ROUTINE CODE NUMBERS FOR COMPONENT K
R0879   E-S ARE THE MACHINE ADDRESS FOR COMPONENT K
R0880   THERE IS ONE ENTRY IN THIS TABLE FOR EACH COMPONENT OF A MIXED NOUN
R0881  2THEY ARE LISTED IN ORDER OF ASCENDING K.
R0882   IN OCTAL DISPLAY AND LOAD (OCT OR DEC) VERBS, EXCLUDE USE OF VERBS WHOSE
R0883   COMPONENT NUMBER IS GREATER THAN THE NUMBER OF COMPONENTS IN NOUN.
R0884   ALL MACHINE ADDRESS TO BE SPECIFIED NOUNS ARE 1 COMPONENT.
R0885   ONLY EXCEPTION IS NOUN 01 TO ALLOW OCTAL DISPLAYS AND LOADS OF
R0886  4AN UNCONTOLLED NUMBER OF COMPONENTS.
R0887   IN MULTI-COMPONENT LOAD VERBS, NO MIXING OF OCTAL AND DECIMAL DATA
R0888  2COMPONENT WORDS IS ALLOWED. ALARM IF VIOLATION.
R0889   IN DECIMAL LOADS OF DATA, 5 NUMERICAL CHARACTERS MUST BE KEYED IN
R0890   BEFORE EACH ENTER. IF NOT, ALARM.
P0891            DISPLAY  VERBS
 0892   DSPABC   CS     TWO
 0893            TC     COMPTEST
 0894            INDEX  NOUNADD
 0895            CS     2
 0896            XCH    BUF     +2
 0897   DSPAB    CS     ONE
 0898            TC     COMPTEST
 0899            INDEX  NOUNADD
 0900            CS     1
 0901            XCH    BUF     +1
 0902   DSPA     TC     TSTFORDP
 0903            INDEX  NOUNADD
 0904            CS     0
 0905   DSPCOM1  XCH    BUF
 0906            TC     DSPCOM2
 0907   DSPB     CS     ONE
 0908            TC     COMPTEST
 0909            INDEX  NOUNADD
 0910            CS     1
 0911            TC     DSPCOM1
 0912   DSPC     CS     TWO
 0913            TC     COMPTEST
 0914            INDEX  NOUNADD
 0915            CS     2
 0916            TC     DSPCOM1
 0917   DSPCOM2  CS     TWO             A  B  C  AB  ABC
 0918            AD     VERBREG         -1 -0 +1 +2  +3   IN A
 0919            CCS    A               +0 +0 +0 +1  +2    IN A AFTER CCS
 0920            TC     DSPCOM3
 0921            TC     ENTEXIT
 0922            TC     +1
 0923   DSPCOM3  TS     DISTEM          +0,+1,+2 INTO DISTEM
 0924            INDEX  A
 0925            CAF    R1D1
 0926            TS     DSPCOUNT
 0927            INDEX  DISTEM
 0928            CS     BUF
 0929            TC     DSPOCTWD
 0930            XCH    DISTEM
 0931  2         TC     DSPCOM2 +2
R0932   COMPTEST ALARMS IF COMPONENT NUMBER OF VERB(LOAD OR OCT DISPLAY) IS
R0933   GREATER THAN THE HIGHEST COMPONENT NUMBER OF NOUN.
R0934   NOUN 01 IS EXCLUDED FROM TEST.
 0935   COMPTEST TS     SFTEMP1         - VERB COMP
 0936            XCH    Q
 0937            TS     SFTEMP2
 0938   COMPTST1 CS     ONE
 0939            AD     NOUNREG
 0940            CCS    A
 0941            TC     +4              NOUN NOT = 01
 0942            TC     CCSHOLE
 0943            TC     +2              NOUN NOT = 01
 0944            TC     SFTEMP2         NOUN = 01. ANY COMP OK
 0945            INDEX  MIXBR
 0946            CAF    COMPICK -1
 0947            INDEX  A
 0948            CS     0               MUST NOT DESTROY NNADTEM OR NNTYPTEM
 0949            CS     A
 0950            MASK   HI5
 0951            TC     LEFT5           NOUN COMP
 0952            AD     SFTEMP1         NOUN COMP - VERB COMP
 0953            CCS    A
 0954            TC     SFTEMP2         NOUN COMP G/ VERB COMP
 0955            TC     CCSHOLE
 0956            TC     GODSPALM        NOUN COMP L/ VERB COMP
 0957  4         TC     SFTEMP2         NOUN COMP = VERB COMP
 0958   TSTFORDP XCH    Q               TEST FOR DP. IF SO, GET MINOR PART ONLY.
 0959            TS     DECOUNT
 0960            INDEX  MIXBR
 0961            TC     +0
 0962            TC     +2              NORMAL
 0963            TC     DECOUNT         MIXED CASE ALREADY HANDLED IN MIXNOUN
 0964            TC     SFRUTNOR
 0965            TC     DPTEST
 0966            TC     DECOUNT         NO DP
 0967            XCH    NOUNADD         DP
 0968            AD     ONE
 0969            TS     NOUNADD         E+1 INTO NOUNADD FOR MINOR PART.
 0970  4         TC     DECOUNT
 0971   COMPICK  ADRES  NNTYPTEM
 0972  2         ADRES  NNADTEM
 0973   DECDSP   INDEX  MIXBR           NORMAL                MIXED
 0974            CAF    COMPICK    -1   ADRES NNTYPTEM        ADRES NNADTEM
 0975            INDEX  A
 0976            CS     0               MUST NOT DESTROY NNADTEM OR NNTYPTEM
 0977            CS     A               C(NNTYPTEM)           C(NNADTEM)
 0978            MASK   HI5             GET HI5 OF NNTYPTAB(NORM)OF NNADTAB(MIX)
 0979            TC     LEFT5
 0980            TS     DECOUNT         COMP NUMBER INTO DECOUNT
 0981   DSPDCGET TS     DECTEM          PICKS UP DATA
 0982            AD     NOUNADD         DECTEM  1COMP +0, 2COMP +1, 3COMP +2
 0983            INDEX  A
 0984            CS     0
 0985            INDEX  DECTEM
 0986            XCH    XREG            CANT USE BUF SINCE DMP USES IT.
 0987            CCS    DECTEM
 0988            TC     DSPDCGET        MORE TO GET
 0989   DSPDCPUT CAF    ZERO            DISPLAYS DATA
 0990            TS     MPAC    +1      DECOUNT 1COMP +0, 2COMP +1, 3COMP +2
 0991            TS     MPAC    +2
 0992            INDEX  DECOUNT
 0993            CAF    R1D1
 0994            TS     DSPCOUNT
 0995            INDEX  DECOUNT
 0996            CS     XREG
 0997            TS     MPAC
 0998            TC     SFCONUM         SF CON NUMB IN A
 0999            TS     SFTEMP2
 1000            TC     BANKCALL        SWITCH BANKS TO SF CONSTANT READING
 1001            CADR   GTSFOUT         ROUTINE. LOADS SFTEMP1, SFTEMP2.
 1002            INDEX  MIXBR
 1003            TC     +0
 1004            TC     DSPSFNOR
 1005            TC     SFRUTMIX
 1006  2         TC     DECDSP3
 1007   DSPSFNOR TC     SFRUTNOR
 1008  2         TC     DECDSP3
 1009   DSPDCEND TC     BANKCALL        ALL SFOUT ROUTINES END HERE
 1010            CADR   DSPDECWD
 1011            CCS    DECOUNT
 1012            TC     +2
 1013            TC     ENTEXIT
 1014            TS     DECOUNT
 1015  4         TC     DSPDCPUT        MORE TO DISPLAY
 1016   DECDSP3  INDEX  A
 1017            CAF    SFOUTABR
 1018  2         TC     BANKJUMP
 1019   SFOUTABR CADR   DSPALARM        ALARM IF DEC DISP WITH OCTAL ONLY NOUN
 1020            CADR   DSPDCEND
 1021            CADR   DEGOUTSF
 1022  2         CADR   ARTOUTSF
 1023            CADR   DP1OUTSF
 1024            CADR   DP2OUTSF
 1025            CADR   OPDEGOUT
 1026            CADR   DP3OUTSF
 1027  4ENDRTOUT EQUALS
R1028           THE FOLLOWING IS ATYPICAL SF ROUTINE . IT USES MPAC. LEAVES RESU
R1029  4LTS IN MPAC, MPAC+1. ENDS WITH TC DSPDCEND
 1030  2         SETLOC INCNOUT +5
R1031      DEGOUTSF SCALES BY .18 THE LOW 14 BITS OF ANGLE , ADDING .18 FOR
R1032  2NUMBERS IN THE NEGATIVE (AGC) RANGE.
 1033   DEGOUTSF CAF    ZERO
 1034            TS     MPAC    +2      SET INDEX FOR FULL SCALE
 1035            TC     FIXRANGE
 1036            TC     +2              NO AUGMENT NEEDED (SFTEMP1 AND 2 ARE 0)
 1037            TC     SETAUG          SET AUGMENTER ACCORDING TO C(MPAC +2)
 1038  2         TC     DEGCOM
R1039     OPDEGOUT SCALES BY .09 FOR ONE RANGE AND BY .45 FOR THE OTHER.
R1040  4FOR THE .45 RANGE A .2 BIAS IS ALSO ADDED.
R1041   OPDEGOUT USED TO TEST BIT 13 OF WASOPSET (1 = 90 DEG RANGE, 0 = 180).
R1042   SINCE THAT BIT IS ALWAYS 1 IN BLOCK 50 - 100, DON:T TEST IT NOW
 1047   OPDEGOUT CCS    MPAC            90 DEG RANGE ALWAYS
 1048            XCH    MPAC            IF POS OR POS 0 THEN ADD BIAS AND
 1049            TC     +3              CORRECT FOR POSSIBLE OVERFLOW
 1050            TC     NEGOPT          IF NEG NON ZERO
 1051            AD     NEG1            IF NEG ZERO SUBTRACT 1
 1052            AD     20BIAS
 1053   BIASCOM  TS     MPAC            TEST FOR OVERFLOW
 1054            TC     +4              NO OVFLOW
 1055            CAF    BIT15           IF OVFLOW
 1056            AD     MPAC
 1057            TS     MPAC
 1058            CAF    TWO             SET MULTIPLIER TO .45
 1059  2         TC     DEGOUTSF +1
 1060   NEGOPT   XCH    MPAC            NEGATIVE CASE
 1061            AD     20BIAS
 1062            CCS    A
 1063            TC     BIASCOM         IF POS THEN SUBTRACT 1 BECAUSE OF 2SCOM
 1064            TC     CCSHOLE
 1065            AD     ONE             IF NEG RESTORE SUM
 1066            COM                    IF NEG 0 LEAVE NEG 0
 1067  2         TC     BIASCOM
 1068   SETAUG   INDEX  MPAC    +2      LOADS SFTEMP1 AND SFTEMP2 WITH THE
 1069            CAF    DEGTAB2         DP AUGMENTER CONSTANT
 1070            TS     SFTEMP2
 1071            INDEX  MPAC    +2
 1072            CAF    DEGTAB1
 1073            TS     SFTEMP1
 1074  2         TC     Q
 1075   FIXRANGE XCH    Q               IF MPAC IS + RETURN TO L+1
 1076            TS     WDRET           IF MPAC IS - RETURN TO L+2 AFTER
 1077            CCS    MPAC            MASKING OUT THE SIGN BIT
 1078            TC     WDRET
 1079            TC     WDRET
 1080            TC     +1
 1081            CS     BIT15
 1082            MASK   MPAC
 1083            TS     MPAC
 1084            INDEX  WDRET
 1085  2         TC     1
 1086   DEGCOM   INDEX  MPAC    +2      LOADS MULTIPLIER , DOES SHORTMP, AND
 1087            CAF    DEGTAB2         ADDS AUGMENTER.
 1088            TS     MPAC    +1
 1089            INDEX  MPAC    +2
 1090            CAF    DEGTAB1
 1091            XCH    MPAC            ADJUSTED ANGLE IN A
 1092            TC     SHORTMP
 1093            TC     DAD
 1094            ADRES  SFTEMP1
 1095  4         TC     SCOUTEND
 1096   DEGTAB1  OCT    05605           HIGH PART OF   .18
 1097            OCT    02702                          .09
 1098  2         OCT    16314           .45
 1099   DEGTAB2  OCT    03656           LOW PART OF    .18
 1100            OCT    21727                          .09
 1101  2         OCT    31463           .45
 1102  220BIAS   OCT    16040           20 DEG BIAS FOR OPTICS
 1103   ARTOUTSF XCH    SFTEMP2         ASSUMES POINT AT LEFT OF DP SFCON.
 1104            TS     MPAC    +1
 1105            XCH    SFTEMP1         HI PART OF SFCONSTANT
 1106            XCH    MPAC
 1107            TC     SHORTMP
 1108   SCOUTEND TC     POSTJUMP
 1109  2         CADR   DSPDCEND
 1110   DP1OUTSF TC     DPOUT           SCALES MPAC, MPAC +1 BY DP SCALE FACTOR
 1111            XCH    MPAC    +2      IN SFTEMP1, SFTEMP2.  THEN SCALE RESULT
 1112            XCH    MPAC    +1      BY B14.
 1113            TS     MPAC
 1114  4         TC     SCOUTEND
 1115   DP2OUTSF TC     DPOUT           SCALES MPAC , MPAC +1 BY DP SCALE FACTOR
 1116  4         TC     SCOUTEND
 1117   DP3OUTSF TC     DPOUT           ASSUMES POINT BETWEEN BITS 7-8 OF HIGH
 1118            TC     TPLEFT7         PART OF SFCON. SHIFTS RESULTS LEFT 7.
 1119  4         TC     SCOUTEND
R1120   DPOUT PICKS UP FRESH DATA FOR BOTH HI AND LO COMPONENTS.
R1121  2THIS IS NEEDED FOR TIME DISPLAY.
 1122   DPOUT    XCH    Q
 1123            TS     OVFIND
 1124            INDEX  MIXBR
 1125            TC     +0
 1126            TC     DPOUTNOR
 1127            INDEX  DECOUNT
 1128            CS     IDAD1TEM        GET IDADDTAB ENTRY FOR COMPONENT K
 1129            CS     A               OF NOUN.
 1130            MASK   LOW10           E SUBK
 1131   DPOUTCOM TS     MPAC    +2
 1132            INHINT
 1133            INDEX  MPAC    +2
 1134            CS     0               MIXED         NORMAL
 1135            COM                    C(ESUBK)      C(E)
 1136            XCH    MPAC
 1137            INDEX  MPAC    +2
 1138            CS     1               C((E SUBK)+1)      C(E+1)
 1139            RELINT
 1140            COM
 1141            XCH    MPAC    +1
 1142            CCS    MPAC    +1      TEST IF LOW PART +0 IN CASE PICKING UP
 1143            TC     +3              TIME, IF SO COULD HAVE OVFLOD, SO GET
 1144            TC     +0CASE          UP TO DATE HIGH PART. IF NOT +0, NO
 1145            TC     +1              PROBLEM.
 1146   +0RET    TC     DMP
 1147            XCADR  SFTEMP1
 1148            TC     BANKCALL
 1149            CADR   TPAGREE
 1150  2         TC     OVFIND
 1151   +0CASE   INDEX  MPAC    +2
 1152            AD     0
 1153            XCH    MPAC
 1154  2         TC     +0RET
 1155   DPOUTNOR CS     NOUNADD
 1156            CS     A               E
 1157  4         TC     DPOUTCOM
R1158   THIS IS A SPECIAL PURPOSE VERB FOR DISPLAYING A DOUBLE PRECISION AGC
R1159   WORD AS 10 DECIMAL DIGITS ON THE AGC DISPLAY PANEL.  IT CAN BE USED WITH
R1160   ANY NOUN, EXCEPT MIXED NOUNS. IT DISPLAYS THE CONTENTS
R1161   OF THE REGISTER NOUNADD IS POINTING TO .  IF USED WITH NOUNS WHICH ARE
R1162   INHERENTLY NOT DP SUCH AS THE CDU COUNTERS THE DISPLAY WILL BE GARBAGE.
R1163  4DISPLAY IS IN R1 AND R2 ONLY WITH THE SIGN IN R1.
 1164   DSPDPDEC INDEX  MIXBR
 1165            TC     +0
 1166            TC     +2              NORMAL NOUN
 1167            TC     DSPALARM
 1168            INDEX  NOUNADD
 1169            CS     0
 1170            COM
 1171            XCH    MPAC            LOAD MPAC WITH HIGH ORDER PART
 1172            INDEX  NOUNADD
 1173            CS     1
 1174            COM
 1175            XCH    MPAC    +1      LOAD MPAC+1 WITH LOW ORDER PART
 1176            CAF    R1D1
 1177            TS     DSPCOUNT
 1178            CAF    ZERO
 1179            TS     MPAC  +2
 1180            TC     BANKCALL
 1181            CADR   TPAGREE
 1182            TC     DSP2DEC
 1183   ENDDPDEC TC     ENTEXIT
P1184  4         LOAD   VERBS
 1185  2         SETLOC ENDRTOUT
 1186   ABCLOAD  CS     TWO
 1187            TC     COMPTEST
 1188            CAF    VBSP1LD
 1189            TC     UPDATVB  -1
 1190            TC     REQDATX
 1191            CAF    VBSP2LD
 1192            TC     UPDATVB  -1
 1193            TC     REQDATY
 1194            CAF    VBSP3LD
 1195            TC     UPDATVB -1
 1196  4         TC     REQDATZ
 1197   PUTXYZ   CS     SIX             TEST THAT THE 3 DATA WORDS LOADED ARE
 1198            TC     ALLDC/OC        ALL DEC OR ALL OCT.
 1199            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1200            TC     SWCALL          ROUTINE.
 1201            CAF    ZERO            X COMP
 1202            TC     PUTCOM
 1203            INDEX  NOUNADD
 1204            TS     0
 1205            CAF    ONE             Y COMP
 1206            TC     PUTCOM
 1207            INDEX   NOUNADD
 1208            TS     1
 1209            CAF    TWO             Z COMP
 1210            TC     PUTCOM
 1211            INDEX  NOUNADD
 1212            TS     2
 1213  2         TC     LOADLV
 1214   ABLOAD   CS     ONE
 1215            TC     COMPTEST
 1216            CAF    VBSP1LD
 1217            TC     UPDATVB -1
 1218            TC     REQDATX
 1219            CAF    VBSP2LD
 1220            TC     UPDATVB -1
 1221            TC     REQDATY
 1222   PUTXY    CS     FIVE            TEST THAT THE 2 DATA WORDS LOADED ARE
 1223            TC     ALLDC/OC        ALL DEC OR ALL OCT.
 1224            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1225            TC     SWCALL          ROUTINE.
 1226            CAF    ZERO            X COMP
 1227            TC     PUTCOM
 1228            INDEX  NOUNADD
 1229            TS     0
 1230            CAF    ONE             Y COMP
 1231            TC     PUTCOM
 1232            INDEX  NOUNADD
 1233            TS     1
 1234  2         TC     LOADLV
 1235   ALOAD    TC     REQDATX
 1236            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1237            TC     SWCALL          ROUTINE.
 1238            CAF    ZERO            X COMP
 1239            TC     PUTCOM
 1240            INDEX  NOUNADD
 1241            TS     0
 1242  2         TC     LOADLV
 1243   BLOAD    CS     ONE
 1244            TC     COMPTEST
 1245            CAF    BIT15           SET CLPASS FOR PASS0 ONLY
 1246            TS     CLPASS
 1247            TC     REQDATY
 1248            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1249            TC     SWCALL          ROUTINE.
 1250            CAF    ONE
 1251            TC     PUTCOM
 1252            INDEX  NOUNADD
 1253            TS     1
 1254  2         TC     LOADLV
 1255   CLOAD    CS     TWO
 1256            TC     COMPTEST
 1257            CAF    BIT15           SET CLPASS FOR PASS0 ONLY
 1258            TS     CLPASS
 1259            TC     REQDATZ
 1260            CAF    LODNNLOC        SWITCH BANKS TO NOUN TABLE READING
 1261            TC     SWCALL          ROUTINE.
 1262            CAF    TWO
 1263            TC     PUTCOM
 1264            INDEX  NOUNADD
 1265            TS     2
 1266  2         TC     LOADLV
 1267   LOADLV   CAF    ZERO
 1268            TS     DECBRNCH
 1269            CS     ZERO
 1270            TS     LOADSTAT
 1271            CS     VD1             TO BLOCK NUMERICAL CHARACTERS AND
 1272            TS     DSPCOUNT        CLEARS AFTER A COMPLETED LOAD
 1273            TC     POSTJUMP        AFTER COMPLETED LOAD, GO TO RECALTST
 1274  2         CADR   RECALTST        TO SEE IF THERE IS RECALL FROM ENDIDLE.
 1275   VBSP1LD  OCT    21              VB21 = ALOAD
 1276   VBSP2LD  OCT    22              VB22 = BLOAD
 1277  4VBSP3LD  OCT    23              VB23 = CLOAD
 1278   ALLDC/OC TS     DECOUNT         TESTS THAT DATA WORDS LOADED ARE EITHER
 1279            XCH    Q               ALL DEC OR ALL OCT. ALARMS IF NOT.
 1280            TS     DECRET
 1281            CS     DECBRNCH
 1282            TS     SR
 1283            CS     SR
 1284            CS     SR              SHIFTED RIGHT 2
 1285            CCS    A               DEC COMP BITS IN LOW 3
 1286            TC     +2              SOME ONES IN LOW 3
 1287            TC     DECRET          ALL ZEROS. ALL OCTAL.  OK
 1288            AD     DECOUNT         DEC COMP = 7 FOR 3COMP, =6 FOR 2COMP
 1289            CCS    A               (BUT IT HAS BEEN DECREMENTED BY CCS)
 1290            TC     GODSPALM        MUST MATCH 6 FOR 3COMP, 5 FOR 2COMP.
 1291            TC     CCSHOLE
 1292            TC     GODSPALM
 1293  4         TC     DECRET          ALL REQUIRED ARE DEC. OK
 1294   SFRUTNOR XCH    Q               GETS SF ROUTINE NUMBER FOR NORMAL CASE
 1295            TS     EXITEM
 1296            CAF    MID5
 1297            MASK   NNTYPTEM
 1298            TC     RIGHT5
 1299  2         TC     EXITEM          SF ROUTINE NUMBER IN A
 1300   SFRUTMIX XCH    Q               GETS SF ROUTINE NUMBER FOR MIXED CASE
 1301            TS     EXITEM
 1302            INDEX  DECOUNT
 1303            CS     IDAD1TEM        GET IDADDTAB ENTRY FOR COMPONENT K
 1304            CS     A               OF NOUN.
 1305            MASK   HI5
 1306            TC     LEFT5
 1307  2         TC     EXITEM          SF ROUTINE NUMBER IN A
 1308   SFCONUM  XCH    Q               GETS SF CONSTANT NUMBER
 1309            TS     EXITEM
 1310            INDEX  MIXBR
 1311            TC     +0
 1312            TC     CONUMNOR        NORMAL NOUN
 1313            INDEX  DECOUNT         MIXED NOUN
 1314            CAF    LOW5
 1315            MASK   NNTYPTEM
 1316            INDEX  DECOUNT
 1317            INDEX  DISPLACE
 1318            TC     0
R1319   DO TC SFRET (DECOUNT=0),DO TC RIGHT5(DECOUNT=1), DO TC LEFT5 (DECOUNT=2)
 1320  2SFRET    TC     EXITEM          SF CON NUMBER IN A
 1321   DISPLACE TC     SFRET
 1322            TC     RIGHT5
 1323  2         TC     LEFT5
 1324   CONUMNOR CAF    LOW5            NORMAL NOUN ALWAYS GETS LOW 5 OF
 1325            MASK   NNTYPTEM
 1326  4         TC     EXITEM
 1327   PUTCOM   TS     DECOUNT
 1328            XCH    Q
 1329            TS     DECRET
 1330            CAF    ZERO
 1331            TS     OVFIND
 1332            INDEX  DECOUNT
 1333            XCH    XREGLP
 1334            TS     MPAC  +1
 1335            INDEX  DECOUNT
 1336            XCH    XREG
 1337            TS     MPAC
 1338            INDEX  MIXBR
 1339            TC     +0
 1340            TC     PUTNORM         NORMAL NOUN
R1341   IF MIXNOUN, PLACE ADDRESS FOR COMPONENT K INTO NOUNADD
 1342            INDEX  DECOUNT
 1343            CS     IDAD1TEM        GET IDADDTAB ENTRY FOR COMPONENT K
 1344            CS     A               OF NOUN.
 1345            MASK   LOW10           EK    FOR CURRENT NOUN
 1346            EXTEND
 1347            SU     DECOUNT
 1348            TS     NOUNADD         PLACE (E SUB K) - K INTO NOUNADD
 1349            CCS    DECBRNCH
 1350            TC     PUTDECSF        +  DEC
 1351            TC     SFRUTMIX        +0  OCTAL
 1352            TC     DPTEST
 1353            TC     PUTCOM2         NO DP
A1354                                   TEST FOR DP SCALE FOR OCT LOAD. IF SO,
A1355                                   +0 INTO MAJOR PART. SET NOUNADD FOR
A1356                                   LOADING OCTAL WORD INTO MINOR PART.
 1357   PUTDPCOM CAF    ONE             DP
 1358            AD     NOUNADD
 1359            TS     NOUNADD         (ESUBK)-K+1  OR  E+1
 1360            AD     DECOUNT         NOUNADD NOW SET FOR MINOR PART
 1361            TS     DECOUNT         (ESUBK)+1  OR  E+1  INTO DECOUNT
 1362            CAF    ZERO            NOUNADD SET FOR MINOR PART
 1363            INDEX  DECOUNT
 1364            TS     0       -1      ZERO MAJOR PART(ESUBK OR E)
 1365  2         TC     PUTCOM2
 1366   PUTNORM  CCS    DECBRNCH
 1367            TC     PUTDECSF        +  DEC
 1368            TC     SFRUTNOR        +0  OCTAL
 1369            TC     DPTEST
 1370            TC     PUTCOM2         NO DP
 1371            CAF    ZERO
 1372            TS     DECOUNT
 1373  2         TC     PUTDPCOM
 1374   PUTCOM2  XCH    MPAC
 1375  2         TC     DECRET
R1376  2PUTDECSF FINDS MIXBR AND DECOUNT STILL SET FROM PUTCOM
 1377   PUTDECSF TC     SFCONUM         SF CON NUMB IN A
 1378            TS     SFTEMP2
 1379            TC     BANKCALL        SWITCH BANKS TO SF CONSTANT READING
 1380            CADR   GTSFIN          ROUTINE. LOADS SFTEMP1, SFTEMP2.
 1381            INDEX  MIXBR
 1382            TC     +0
 1383            TC     PUTSFNOR
 1384            TC     SFRUTMIX
 1385            TC     PUTDCSF2
 1386  2PUTSFNOR TC     SFRUTNOR
 1387   PUTDCSF2 INDEX  A
 1388            CAF    SFINTABR
 1389            TC     BANKJUMP        SWITCH BANKS FOR EXPANSHION ROOM
 1390   SFINTABR CADR   DSPALARM        ALARM IF DEC LOAD WITH OCTAL ONLY NOUN
 1391            CADR   BINROUND
 1392            CADR   DEGINSF
 1393            CADR   ARTHINSF
 1394            CADR   DPINSF
 1395            CADR   DPINSF2
 1396            CADR   OPTDEGIN
 1397            CADR   DPINSF          SAME AS ARITHDP1
 1398  4ENDRUTIN EQUALS
R1399   SCALE FACTORS FOR THOSE ROUTINES NEEDING THEM ARE AVAILABLE IN SFTEMP1.
R1400  4ALL SFIN ROUTINES USE MPAC MPAC+1. LEAVE RESULT IN A. END WITH TC DECRET
 1401  2         SETLOC ENDDPDEC +1
R1402  2DEGINSF APPLIES 1000/180 =5.55555(10) = 5.43434(8)
 1403   DEGINSF  TC     DMP             SF ROUTINE FOR DEC DEGREES
 1404            XCADR  DEGCON1         MULT BY 5.5  5(10)X2/-3
 1405            CCS    MPAC    +1      THIS ROUNDS OFF MPAC+1 BEFORE SHIFT
 1406            CAF    BIT11           LEFT 3, AND CAUSES 360.00 TO OF/UF
 1407            TC     +2              WHEN SHIFTED LEFT AND ALARM.
 1408            CS     BIT11
 1409            AD     MPAC    +1
 1410            TC     2ROUND  +2
 1411            TC     BANKCALL        LEFT 1
 1412            CADR   SL1     +3
 1413   DEGINSF2 TC     BANKCALL        LEFT 2
 1414            CADR   SL1     +3
 1415            TC     TESTOFUF
 1416            TC     BANKCALL        RETURNS IF NO OF/UF
 1417            CADR   SL1     +3      LEFT 3
 1418            CCS    MPAC
 1419            TC     SIGNFIX         IF+, GO TO SIGNFIX
 1420            TC     SIGNFIX         IF +0, GO TO SIGNFIX
 1421            COM                    IF - , USE -MAGNITUDE +1
 1422            TS     MPAC            IF -0, USE +0
 1423   SIGNFIX  CCS    OVFIND
 1424            TC     SGNTO1          IF OVERFLOW
 1425            TC     ENDSCALE        NO OVERFLOW/UNDERFLOW
 1426            CCS    MPAC            IF UF FORCE SIGN TO 0 EXCEPT -180
 1427            TC     CCSHOLE
 1428            TC     NEG180
 1429            TC     +1
 1430            XCH    MPAC
 1431            MASK   POSMAX
 1432            TS     MPAC
 1433   ENDSCALE TC     POSTJUMP
 1434  2         CADR   PUTCOM2
 1435   NEG180   CS     POSMAX
 1436  2         TC     ENDSCALE  -1
 1437   SGNTO1   CS     MPAC            IF OF FORCE SIGN TO 1
 1438            MASK   POSMAX
 1439            CS     A
 1440  2         TC     ENDSCALE  -1
 1441   DEGCON1  2DEC   5.555555555 B-3
 1442   DEGCON2  2DEC   2.222222222 B-2
 1443  2NEG.2    OCT    -06250          = .197753906  I.E. THE BIAS SCALED
 1444   ARTHINSF TC     DMP             SCALES MPAC, +1 BY SFTEMP1, SFTEMP2.
 1445            XCADR  SFTEMP1         ASSUMES POINT BETWEEN HI AND LO PARTS
 1446            XCH    MPAC    +2      OF SFCON. SHIFTS RESULTS LEFT BY 14.
 1447            XCH    MPAC    +1      (BY TAKING RESULTS FROM MPAC+1, MPAC+2)
 1448            XCH    MPAC
 1449            CCS    A
 1450            TC     DSPALARM        TOO LARGE A LOAD
 1451            TC     BINROUND
 1452            TC     DSPALARM        TOO LARGE A LOAD
 1453   BINROUND TC     2ROUND
 1454            TC     TESTOFUF
 1455  4         TC     ENDSCALE        RETURNS IF NO OF/UF
 1456   OPTDEGIN CCS    MPAC            OPTICS SCALING ROUTINE
 1457            TC     OPDEGIN2        LOW RANGE   0 TO 90 DEG ALWAYS
 1458            TC     OPDEGIN2
 1459            TC     DSPALARM        REJECT - INPUT. ALARM
 1460  4         TC     DSPALARM        DITTO
R1461   NO LONGER DO WE TEST BIT 13 OF WASOPSET TO DETERMINE RANGE. RANGE NOW
R1462  4IS ALWAYS 90 DEG (BLOCK 50 - 100)
 1470   OPDEGIN2 XCH    MPAC            RANGE IS 90 DEG
 1471            AD     NEG.2           SUBTRACT BIAS
 1472            TS     MPAC
 1473            TC     DMP             MULT BY 100 / 45  B-2
 1474            XCADR  DEGCON2
 1475            CAF    BIT12           ROUND AS IN DEGINSF
 1476            AD     MPAC    +1
 1477            TC     2ROUND  +2
 1478  2         TC     DEGINSF2
 1479   DPINSF   TC     DMP             SCALES MPAC, MPAC +1 BY SFTEMP1,
 1480            XCADR  SFTEMP1         SFTEMP2.  STORES LOW PART OF RESULT
 1481            XCH    MPAC    +2      IN (E SUBK) +1 OR E+1
 1482            DOUBLE
 1483            TS     MPAC    +2
 1484            CAF    ZERO
 1485            AD     MPAC    +1
 1486            TC     2ROUND  +2
 1487            TC     TESTOFUF
 1488            INDEX  MIXBR           RETURNS IF NO OF/UF
 1489            TC     +0
 1490            TC     DPINORM
 1491            XCH    DECOUNT         MIXEDNOUN
 1492            TS     DECOUNT
 1493   DPINCOM  AD     NOUNADD             MIXED               NORMAL
 1494            TS     Q                 E SUBK            E
 1495            XCH    MPAC    +1
 1496            INDEX  Q
 1497            TS     1               PLACE LOW PART IN
 1498            TC     ENDSCALE        (E SUBK) +1    MIXED
 1499   DPINORM  CAF    ZERO            E +1         NORMAL
 1500  4         TC     DPINCOM
 1501   DPINSF2  TC     DMP             ASSUMES POINT BETWEEN BITS 7-8 OF HIGH
 1502            XCADR  SFTEMP1         PART OF SF CONST. DPINSF2 SHIFTS RESULTS
 1503            TC     TPLEFT7         LEFT BY 7, ROUNDS MPAC+2 INTO MPAC+1.
 1504  4         TC     DPINSF  +2
 1505   TPLEFT7  XCH    Q               OPERATES ON MPAC, MPAC+1, MPAC+2
 1506            TS     SFTEMP2
 1507            CAF    SIX             LEFT BY 7
 1508   LEFT7COM TS     SFTEMP1
 1509            TC     BANKCALL
 1510            CADR   SL1
 1511            CCS    SFTEMP1
 1512            TC     LEFT7COM
 1513  4         TC     SFTEMP2
 1514   2ROUND   XCH    MPAC    +1
 1515            DOUBLE
 1516            TS     MPAC    +1
 1517            TC     Q               IF MPAC+1 DOES NOT OF/UF
 1518            AD     MPAC
 1519            TS     MPAC
 1520            TC     Q               IF MPAC DOES NOT OF/UF
 1521            TS     OVFIND
 1522  42RNDEND  TC     Q
 1523   TESTOFUF CCS    OVFIND          RETURNS IF NO OF/UF
 1524            TC     DSPALARM        OF
 1525            TC     Q
 1526            TC     DSPALARM        UF
P1527   MONITOR ALLOWS OTHER KEYBOARD ACTIVITY. IT IS ENDED BY VERB TERMINATE,
R1528  2ANY NVSUB CALL THAT PASSES THE DSPLOCK, OR ANOTHER MONITOR.
R1529   MONITOR ACTION IS SUSPENDED, BUT NOT ENDED, BY ANY KEYBOARD ACTION,
R1530   EXCEPT ERROR LIGHT RESET. IT BEGINS AGAIN WHEN KEY RELEASE IS PERFORMED.
R1531   MONITOR SAVES THE NOUN AND APPROPRIATE DISPLAY VERB IN MONSAVE. IT SAVES
R1532   NOUNADD IN MONSAVE1, IF NOUN = MACHINE ADDRESS TO BE SPECIFIED.BIT 15 OF
R1533  2MONSAVE1 IS THE KILL MONITOR SIGNAL (KILLER BIT).
R1534   MONSAVE INDICATES IF MONITOR IS ON(+=ON, +0=OFF)
R1535   IF MONSAVE IS +, MONITOR ENTERS NO REQUEST, BUT TURNS KILLER BIT OFF.
R1536  2IF MONSAVE IS +0, MONITOR ENTERS REQUEST AND TURNS KILLER BIT OFF.
R1537  2NVSUB AND VB=TERMINATE TURN KILL MONITOR BIT ON.
R1538   IF KILLER BIT IS ON, MONREQ ENTERS NO FURTHER REQUESTS, ZEROS MONSAVE
R1539  4AND MONSAVE1 (TURNING OFF KILLER BIT).
R1540   MONITOR DOSENT TEST FOR MATBS SINCE NVSUB CAN HANDLE INTERNAL MATBS NOW
 1541  2         SETLOC ENDRUTIN
 1542   MONITOR  CS     BIT15
 1543            MASK   NOUNADD
 1544   MONIT1   TS     MPAC    +1      TEMP STORAGE
 1545            CAF    LOW6
 1546            MASK   VERBREG
 1547            TC     LEFT5
 1548            TS     CYL
 1549            XCH    CYL
 1550            AD     NOUNREG
 1551            TS     MPAC            TEMP STORAGE
 1552            CS     GRABLOCK        NEITHER CASE SEARCHES LIST.
 1553            AD     TWO
 1554            CCS    A
 1555            TC     RELDSP1         GRABLOCK=0,1. +0 INTO DSPLOCK AND
 1556            TC     +3              TURN OFF KEY RLSE LIGHT.
 1557            TC     CCSHOLE
 1558            TC     DSPLOCK0        GRABLOCK=2. +0 INTO DSPLOCK (BIT4 OF
A1559                                   STATE) AND LEAVE KEY RELEASE LIGHT ALONE
 1560            INHINT
 1561            CCS    MONSAVE
 1562            TC     +4              IF MONSAVE WAS +, NO REQUEST
 1563            CAF    ONE             IF MONSAVE WAS 0, REQUEST MONREQ
 1564            TC     WAITLIST
 1565            CADR   MONREQ
 1566            XCH    MPAC
 1567            TS     MONSAVE         PLACE MONITOR VERB AND NOUN INTO MONSAVE
 1568            XCH    MPAC    +1
 1569            TS     MONSAVE1        ZERO THE KILL MONITOR BIT
 1570            RELINT
 1571  4         TC     ENTRET
 1572   MONREQ   TC     READTIME +1     CALLED BY WAITLIST
 1573            TC     LODSAMPT        TIME IS SNATCHED IN RUPT FOR NOUN 65
 1574            CCS    MONSAVE1
 1575            TC     +4              IF KILLER BIT = 0, ENTER REQUESTS
 1576            TC     +3              IF KILLER BIT = 0, ENTER REQUESTS
 1577            TC     KILLMON         IF KILLER BIT = 1, NO REQUESTS
 1578            TC     KILLMON         IF KILLER BIT = 1, NO REQUESTS
 1579            CAF    MONDEL
 1580            TC     WAITLIST        ENTER WAITLIST REQUEST FOR MONREQ
 1581            CADR   MONREQ
 1582            CAF    PRIO31
 1583            TC     NOVAC           ENTER EXEC REQUEST FOR MONDO
 1584            CADR   MONDO
 1585  2         TC     TASKOVER
 1586   KILLMON  CAF    ZERO            ZERO MONSAVE AND TURN KILLER BIT OFF
 1587            TS     MONSAVE
 1588            TS     MONSAVE1        TURN OFF KILL MONITOR BIT.
 1589  4         TC     TASKOVER
 1590  4MONDEL   OCT    144             FOR 1 SEC MONITOR INTERVALS
 1591   MONDO    CCS    MONSAVE1        CALLED BY EXEC
 1592            TC     +4              IF KILLER BIT = 0, CONTINUE
 1593            TC     +3              IF KILLER BIT = 0, CONTINUE
 1594            TC     ENDOFJOB        IN CASE TERMINATE CAME SINCE LAST MONREQ
 1595            TC     ENDOFJOB        IN CASE TERMINATE CAME SINCE LAST MONREQ
 1596            TC     TSTDSPLK        PERFORMS CCS DSPLOCK
 1597            TC     MONBUSY         NVSUB IS BUSY
 1598            CAF    LOW6            NVSUB IS AVAILABLE
 1599            MASK   MONSAVE
 1600            TS     NVTEMP
 1601            TC     NVSUBMON        PLACE NOUN INTO NOUNREG AND DISPLAY IT
 1602            TC     ENDOFJOB        IN CASE OF ALARM DURING DISPLAY
 1603            CAF    MONMASK
 1604            MASK   MONSAVE         CHANGE MONITOR VERB TO DISPLAY VERB
 1605            TC     RIGHT5
 1606            TS     CYR
 1607            XCH    CYR
 1608            TS     VERBREG
 1609            CAF    MONBACK         SET RETURN TO PASTEVB AFTER DATA DISPLAY
 1610            TS     ENTRET
 1611            CS     BIT15
 1612            MASK   MONSAVE1
 1613            TS     NOUNADD
 1614  2ENDMONDO TC     TESTNN
 1615            SETLOC ENDFAILF
 1616   PASTEVB  CAF    MIDSIX
 1617            MASK   MONSAVE
 1618            TS     NVTEMP          PLACE MONITOR VERB INTO VERBREG AND
 1619            TC     NVSUBMON             DISPLAY IT.
 1620            TC     +1              IN CASE OF ALARM DURING DISPLAY
 1621  2ENDPASTE TC     ENDOFJOB
 1622  4MIDSIX   OCTAL  07700
 1623            SETLOC ENDMONDO +1
 1624   MONMASK  OCT    700
 1625  2MONBACK  ADRES  PASTEVB
 1626   MONBUSY  TC     RELDSPON        TURN KEY RELEASE LIGHT
 1627  4         TC     ENDOFJOB
R1628   DSPBANK IS USED TO DISPLAY (IN OCTAL) ANY FIXED REGISTER IN BANK.
R1629   IT IS USED WITH NOUN = MACHINE ADDRESS TO BE SPECIFIED. THE CADR OF THE
R1630  2DESIRED LOCATION IS THEN PUNCHED IN.
 1631   DSPBANK  CAF    R1D1
 1632            TS     DSPCOUNT
 1633            CS     NOUNADD
 1634            CS     A
 1635            TC     DATACALL
 1636            TC     DSPOCTWD
 1637  4         TC     ENDOFJOB
 1638  2         SETLOC TESTOFUF +4
R1639    DSPDECWD CONVERTS C(MPAC) AND C(MPAC +1)TO A SIGN AND 5 CHAR DECIMAL
R1640  2STARTING IN LOC SPECIFIED IN DSPCOUNT
 1641   DSPDECWD XCH    Q               USES SHORTMP THROUGHOUT
 1642            TS     WDRET
 1643            CCS    MPAC
 1644            TC     +7
 1645            TC     +6
 1646            AD     ONE
 1647            TS     MPAC
 1648            TC     -ON
 1649            CS     MPAC  +1
 1650            TC     +3
 1651            TC     +ON
 1652            XCH    MPAC    +1
 1653            AD     DECROUND
 1654            TS     MPAC    +1
 1655            CAF    ZERO
 1656            AD     MPAC
 1657            TS     MPAC
 1658            TC     +4
 1659            CAF    POSMAX
 1660            TS     MPAC
 1661            TS     MPAC    +1
 1662            CAF    FOUR
 1663   DSPDCWD1 TS     WDCNT
 1664            CAF    BINCON
 1665            TC     SHORTMP
 1666   TRACE1   INDEX  MPAC
 1667            CAF    RELTAB
 1668            MASK   LOW5
 1669            TS     CODE
 1670            CAF    ZERO
 1671            XCH    MPAC    +2
 1672            XCH    MPAC    +1
 1673            TS     MPAC
 1674            XCH    DSPCOUNT
 1675   TRACE1S  TS     COUNT
 1676            CCS    A               DECREMENT DSPCOUNT EXCEPT AT +0
 1677            TS     DSPCOUNT
 1678            TC     DSPIN
 1679            CCS    WDCNT
 1680            TC     DSPDCWD1
 1681            CS     VD1
 1682            TS     DSPCOUNT
 1683  2         TC     WDRET
 1684  4DECROUND OCT    02476
R1685   DSP2DEC CONVERTS C(MPAC) AND C(MPAC+1) INTO A SIGN AND 10 CHAR DECIMAL
R1686  2STARTING IN THE LOC SPECIFIED IN DSPCOUNT.
 1687   DSP2DEC  XCH    Q
 1688            TS     WDRET
 1689            CAF    ZERO
 1690            TS     CODE
 1691            CAF    THREE
 1692            TC     11DSPIN         -R2 OFF
 1693            CAF    FOUR
 1694            TC     11DSPIN         +R2 OFF
 1695            CCS    MPAC
 1696            TC     +8D
 1697            TC     +7
 1698            AD     ONE
 1699            TS     MPAC
 1700            TC     -ON
 1701            CS     MPAC  +1
 1702            TS     MPAC  +1
 1703            TC     +2
 1704            TC     +ON
 1705            CAF    R2D1
 1706  4END2DEC  TC     DSPDCWD1
 1707            SETLOC DSPBANK  +7
R1708   DSPOCTWD DISPLAYS C(A) UPON ENTRY AS A 5 CHAR OCT STARTING IN THE DSP
R1709  2CHAR SPECIFIED IN DSPCOUNT. IT STOPS AFTER 5 CHAR HAVE BEEN DISPLAYED.
 1710   DSPOCTWD TS     CYL
 1711            XCH    Q
 1712            TS     WDRET
 1713            XCH    DSPCOUNT
 1714            AD     BIT14           TO BLANK SIGNS
 1715            TS     DSPCOUNT
 1716            CAF    FOUR
 1717   WDAGAIN  TS     WDCNT
 1718            CS     CYL
 1719            CS     CYL
 1720            CS     CYL
 1721            CS     A
 1722            MASK   DSPMSK
 1723            INDEX  A
 1724            CAF    RELTAB
 1725            MASK   LOW5
 1726            TS     CODE
 1727            XCH    DSPCOUNT
 1728            TS     COUNT
 1729            CCS    A               DECREMENT DSPCOUNT EXCEPT AT +0
 1730            TS     DSPCOUNT
 1731            TC     POSTJUMP
 1732            CADR   DSPOCTIN
 1733   OCTBACK  CCS    WDCNT
 1734            TC     WDAGAIN         +
 1735   DSPLV    CS     VD1             TO BLOCK NUMERICAL CHARACTERS, CLEARS,
 1736            TS     DSPCOUNT        AND SIGNS AFTER A COMPLETED DISPLAY.
 1737  2         TC     WDRET
 1738  4DSPMSK   =      SEVEN
R1739   DSP2BIT DISPLAYS C(A) UPON ENTRY AS A 2 CHAR OCT BEGINNING IN THE DSP
R1740   LOC SPECIFIED IN DSPCOUNT BY PRE CYCLING RIGHT C(A) AND USING THE LOGIC
R1741  2OF THE 5 CHAR OCTAL DISPLAY
 1742   DSP2BIT  TS     CYR
 1743            XCH    Q
 1744            TS     WDRET
 1745            CAF    ONE
 1746            TS     WDCNT
 1747            CS     CYR
 1748            CS     CYR
 1749            XCH    CYR
 1750            TS     CYL
 1751  4         TC     WDAGAIN +5
R1752   FOR DSPIN PLACE 0/25 OCT INTO COUNT, 5 BIT RELAY CODE INTO CODE. BOTH
R1753   ARE DESTROYED. IF BIT14 OF COUNT IS 1, SIGN IS BLANKED WITH LEFT CHAR.
R1754   FOR DSPIN1 PLACE 0,1 INTO BIT11 OF CODE, 2 INTO COUNT, REL ADDRESS OF
R1755  2DSPTAB ENTRY INTO DSREL.
 1756  2         SETLOC END2DEC  +1
 1757   DSPIN    XCH    Q
 1758            TS     DSEXIT
 1759            CAF    LOW5
 1760            MASK   COUNT
 1761            TS     SR
 1762            XCH    SR
 1763            TS     DSREL
 1764            CAF    BIT1
 1765            MASK   COUNT
 1766            CCS    A
 1767            TC     +2              LEFT IF COUNT IS ODD
 1768            TC     DSPIN1  -1      RIGHT IF COUNT IS EVEN
 1769            XCH    CODE
 1770            TC     SLEFT5          DOES NOT USE CYL
 1771            TS     CODE
 1772            CAF    BIT14
 1773            MASK   COUNT
 1774            CCS    A
 1775            CAF    TWO             BIT14 = 1, BLANK SIGN
 1776            AD     ONE             BIT14 = 0, LEAVE SIGN ALONE
 1777            TS     COUNT           +0 INTO COUNT FOR RIGHT
A1778                                   +1 INTO COUNT FOR LEFT(SIGN LEFT ALONE)
A1779                                   +3 INTO COUNT FOR LEFT(TO BLANK SIGN)
 1780   DSPIN1   INHINT
 1781            INDEX  DSREL
 1782            CCS    DSPTAB
 1783            TC     +2              IF +
 1784            TC     CCSHOLE
 1785            AD     ONE             IF-
 1786            TS     DSMAG
 1787            INDEX  COUNT
 1788            MASK   DSMSK
 1789            EXTEND
 1790            SU     CODE
 1791            CCS    A
 1792            TC     DFRNT           IF+
 1793            TC     CCSHOLE
 1794            TC     DFRNT           IF-
 1795            TC     DSLV            IF -0
 1796   DFRNT    INDEX  COUNT
 1797            CS     DSMSK           MASK WITH 77740,76037, OR 75777
 1798            MASK   DSMAG
 1799            AD     CODE
 1800            CS     A
 1801            INDEX  DSREL
 1802            XCH    DSPTAB
 1803            CCS    A
 1804            TC     INCNOUT
 1805            TC     CCSHOLE
 1806   DSLV     RELINT
 1807  2         TC     DSEXIT
 1808   DSMSK    OCT    37
 1809            OCT    1740
 1810            OCT    2000
 1811  4         OCT    3740
R1812   FOR 11DSPIN, PUT REL ADDRESSS OF DSPTAB ENTRY INTO A, 1 IN BIT11 OR 0 IN
R1813  2BIT11 OF CODE.
 1814   11DSPIN  TS     DSREL
 1815            CAF    TWO
 1816            TS     COUNT
 1817            XCH    Q
 1818            TS     DSEXIT
 1819  4         TC     DSPIN1
 1820   DSPOCTIN TC     DSPIN           SO DSPOCTWD DOESNT USE SWCALL
 1821            CAF    +2
 1822            TC     BANKJUMP
 1823  4ENDSPOCT CADR   OCTBACK
R1824   DSPALARM FINDS TC NVSUBEND IN ENTRET FOR NVSUB INITIATED ROUTINES.
R1825   ABORT WITH OCT 01501.
R1826   DSPALARM FINDS TC ENDOFJOB IN ENTRET FOR KEYBOARD INITIATED ROUTINES.
R1827  2DO TC ENTRET.
 1828   CHARALRM CAF    ENDINST         ALARMS WHICH MUST DO ENDOFJOBS COME
 1829  2         TS     ENTRET          HERE. ALLOWS ENTRET TO BE TEMP ERASABLE
 1830   DSPALARM TC     FALTON          TURN ON CHECK FAIL LIGHT.
 1831            CS     NVSBENDL
 1832            AD     ENTEXIT
 1833            CCS    A
 1834            TC     ENTEXIT         NOT NVSUB INITIATED.
 1835   NVSBENDL TC     NVSUBEND
 1836            TC     ENTEXIT         NOT NVSUB INITIATED.
 1837            TC     ABORT           NVSUB INITIATED.
 1838  4         OCT    01501
 1839   FLASHON1 CAF    BIT11           GETS HERE THRU FLASHON(STANDARD LEAD IN)
 1840            TS     CODE
 1841            CAF    FLASHLOC
 1842            TS     DSREL
 1843            CAF    TWO
 1844            TS     COUNT
 1845            TC     DSPIN1
 1846   FLASHOF1 CAF    ZERO            GETS HERE THRU FLASHOFF(STANDARD LEAD IN
 1847            TC     FLASHON1 +1
 1848  4FLASHLOC OCT    11
R1849   MMCHANG USES NOUN DISPLAY UNTIL ENTER. THEN IT USES MODE DISP.
R1850   IT GOES TO MODROUT WITH THE NEW M M CODE IN A, BUT NOT DISPLAYED IN
R1851  2M M LIGHTS.
 1852  2         SETLOC DSP2BIT  +10D
 1853   MMCHANG  TC     REQMM
 1854            CAF    ZERO
 1855            XCH    NOUNREG
 1856            TS     MPAC
 1857            CAF    ND1
 1858            TS     DSPCOUNT
 1859            TC     BANKCALL
 1860            CADR   2BLANK
 1861            XCH    MPAC
 1862            TC     POSTJUMP
 1863  4         CADR   MODROUTB        GO THRU STANDARD LOC.
 1864   REQMM    CS     Q
 1865            TS     REQRET
 1866            CAF    ND1
 1867            TS     DSPCOUNT
 1868            CAF    ZERO
 1869            TS     NOUNREG
 1870            TC     BANKCALL
 1871            CADR   2BLANK
 1872            TC     BANKCALL
 1873            CADR   FLASHON
 1874  4         TC     ENTEXIT
R1875   VBRQEXEC ENTERS REQUEST TO EXEC     FOR ANY ADDRESS WITH ANY PRIORITY.
R1876   IT DOES ENDOFJOB AFTER ENTERING REQUEST.ASSUMES PRIO  PRELOADED INTO
R1877   BITS 10-14 OF FIRST REGISTER OF TEMP AREA, WITH BIT1=0 FOR NOVAC, BIT1
R1878   =1 FOR FINDVAC). THE VERB IS USED WITH NOUN=MACHINE ADDRESS TO BE
R1879  2SPECIFIED. CADR JOBADDR IS PUNCHED IN. DISPLAY SYST IS RELEASED.
 1880   VBRQEXEC CAF    ENDINST
 1881            TS     PROGREG +2
 1882            TC     RELDSP
 1883            CAF    BIT1
 1884            MASK   DSPTEM1         ********
 1885            CCS    A
 1886            TC     SETVAC          IF BIT1 =1, FINDVAC
 1887            CAF    TCNOVAC         IF BIT1 =0, NOVAC
 1888   REQEX1   TS     PROGREG         TC NOVAC OR TC FINDVAC INTO PROGREG
 1889            XCH    NOUNADD
 1890            TS     PROGREG +1      CADR JOBADDR INTO PROGREG +1
 1891            CS     BIT1
 1892            MASK   DSPTEM1         *******
 1893            INHINT
 1894  2         TC     PROGREG
 1895   SETVAC   CAF    TCFINDVC
 1896  2         TC     REQEX1
R1897   VBRQWAIT ENTERS REQUEST TO WAITLIST FOR ANY ADDRESS WITH ANY DELAY.
R1898   IT DOES ENDOFJOB AFTER ENTERING REQUEST.ASSUMES DELAY PRELOADED IN FIRST
R1899   REGISTER OF TEMP AREA. THE VERB IS USED WITH NOUN= MACHINE ADDRESS TO
R1900  2BE SPECIFIED. CADR TASKADDR IS PUNCHED IN. DISPLAY SYST IS RELEASED.
 1901   VBRQWAIT CAF    ENDINST
 1902            TS     PROGREG +2      TC ENDOFJOB INTO PROGREG+2
 1903            TC     RELDSP
 1904            CAF    TCWAIT
 1905            TS     PROGREG         TC WAITLIST INTO PROGREG
 1906            XCH    NOUNADD
 1907            TS     PROGREG +1      CADR TASKADDR INTO PROGREG+1
 1908            INHINT
 1909            XCH    DSPTEM1         DELTA T IN A
 1910  4ENDRQWT  TC     PROGREG
 1911            SETLOC FLASHLOC +1
 1912   VBPROC   CAF    ONE             PROCEED WITHOUT DATA
 1913            TS     LOADSTAT
 1914            TC     RELDSP
 1915            TC     FLASHOFF
 1916  4         TC     RECALTST        SEE IF THERE IS ANY RECALL FROM ENDIDLE
 1917   VBTERM   TC     KILMONON        TURN ON KILL MONITOR BIT
 1918            CS     ONE
 1919  4         TC     VBPROC  +1      TERM VERB SETS LOADSTAT NEG
R1920  4FLASH IS TURNED OFF ONLY BY PROCEED WITHOUT DATA, TERMINATE, END OF LOAD
R1921   VBRELDSP TURNS OFF RELEASE DISPLAY SYSTEM LIGHT(AND SEARCHES LIST ONLY
R1922  2IF THIS LIGHT WAS TURNED ON BY NVSUBUSY), AND TURNS OFF UPACT LIGHT.
 1923   VBRELDSP CAF    ZERO            RELEASE DISPLAY SYST
 1924            TS     CODE            TURN OFF UPACT LIGHT
 1925            CAF    SEVEN
 1926            TC     11DSPIN
 1927            TC     RELDSP          SEARCHES LIST
 1928  4         TC     ENDOFJOB
R1929  2BUMP SHIFTS WORD DISPLAYED IN R2 TO R3, R1 TO R2. IT BLANKS R1.
 1930   BUMP     CAF    FIVE            R2D5
 1931            TS     DSPCOUNT
 1932            TS     COUNT
 1933            CAF    ONE             SHIFT DATA OF R2 TO R3, R1 TO R2
 1934            MASK   COUNT
 1935            XCH    COUNT           +0 INTO COUNT IF EVEN (RIGHT)
 1936            TS     SR              +1 INTO COUNT IF ODD (LEFT)
 1937            XCH    SR              DSREL IN A
 1938            INDEX  A
 1939            CCS    DSPTAB
 1940            TC     +2
 1941            TC     CCSHOLE
 1942            AD     ONE             DSMAG IN A
 1943            INDEX  COUNT
 1944            MASK   DSMSK
 1945            INDEX  COUNT
 1946            TC     +1
 1947            TC     +2              EVEN(RIGHT)  OK
 1948            TC     RIGHT5          ODD(LEFT)  SHIFT RIGHT
 1949            TS     CODE
 1950            CS     FIVE
 1951            AD     DSPCOUNT        DSPCOUNT-5
 1952            CCS    A               TO PREVENT -0
 1953            AD     ONE
 1954            TC     +2
 1955            TC     CCSHOLE
 1956            TS     COUNT
 1957            TC     DSPIN           CODE ALREADY IN CODE
 1958            CS     DSPCOUNT
 1959            AD     R1D1            OCT 16
 1960            CCS    A
 1961            XCH    DSPCOUNT        +, DSPCOUNT L/ OCT 16
 1962            AD     ONE             INCREMENT DSPCOUNT
 1963  2         TC     BUMP    +1
 1964   SWSGN    CAF    ZERO            -0, DSPCOUNT= OCT 16. DO SIGN SHIFT
 1965            TS     DSPCOUNT
 1966            AD     SWTAB   +2      OCT 3
 1967            INDEX  A               PICKUP ORDER , DSREL=3,4,5,6.
 1968            CCS    DSPTAB                           (-R2,+R2,-R1,+R1)
 1969            TC     +2
 1970            TC     CCSHOLE
 1971            AD     ONE
 1972            MASK   BIT11
 1973            TS     CODE
 1974            INDEX  DSPCOUNT
 1975            CAF    SWTAB           PUT AWAY ORDER, DSREL= 0,1,3,4.
 1976            TC     11DSPIN                          (-R3,+R3,-R2,+R2.)
 1977            CS     DSPCOUNT
 1978            AD     SWTAB   +2      OCT 3
 1979            CCS    A
 1980            XCH    DSPCOUNT        +, DSPCOUNT L/ 3
 1981            AD     ONE             INCREMENT DSPCOUNT
 1982            TC     SWSGN   +1
 1983            CAF    R1D1            -0,       DSPCOUNT = 3
 1984            TS     DSPCOUNT
 1985            TC     5BLANK          BLANKS R1
 1986  2         TC     ENTEXIT
 1987   SWTAB    OCT    0               -R3
 1988            OCT    1               +R3
 1989            OCT    3               -R2
 1990  4         OCT    4               +R2
R1991   NVSUB IS USED FOR SUB ROUTINE CALLS FROM WITHIN COMPUTER. IT CAN BE
R1992   USED TO DO ANY THING THE KEYBOARD CAN CALL. PLACE  ...VVVVVVNNNNNN
R1993  2INTO A.      V-S ARE 6 BIT VERB CODE. N-S , 6 BIT NOUN CODE.
R1994   NVSUB CAN BE USED WITH MACH ADDR TO BE SPEC BY PLACING THE ADDRESS  IN
R1995  2MPAC+2 BEFORE THE STANDARD NVSUB CALL.
R1996    NVSUB RETURNS TO 2+ CALLING LOC AFTER PERFORMING TASK, IF DISPLAY
R1997   SYSTEM IS AVAILABLE. THE NEW NOUN AND VERB CODES ARE DISPLAYED.
R1998   IF V:S =0, THE NEW NOUN CODE IS DISPLAYED ONLY(RETURN WITH NO FURTHER
R1999   ACTION). IF N-S =0, THE NEW VERB CODE IS DISPLAYED ONLY(RETURN WITH NO
R2000  2FURTHER ACTION).
R2001   IT RETURNS TO 1+ CALLING LOC WITHOUT PERFORMING TASK, IF DISPLAY
R2002   SYSTEM IS BLOCKED (NOTHING IS DISPLAYED IN THIS CASE).
R2003   IT DOES TC ABORT (WITH OCT 01501) IF IT ENCOUNTERS A DISPLAY PROGRAM
R2004  2ALARM CONDITION BEFORE RETURN TO CALLER.
R2005   THE DISPLAY SYSTEM IS BLOCKED BY THE DEPRESSION OF ANY
R2006   KEY, EXCEPT ERROR LIGHT RESET. ALSO BY ENDIDLE.
R2007        IT IS RELEASED BY SPECIAL VERB = RELEASE DISPLAY, ALL GO TO VERBS,
R2008   PROCEED WITHOUT DATA, TERMINATE, INITIALIZE EXECUTIVE,
R2009   RECALL PART OF RECALTST IF ENDIDLE WAS USED,
R2010   IN RECALTST IF NVSUB INITIATED LOAD AND ENDIDLE WAS NOT USED,
R2011   VB = REQUEST EXECUTIVE, VB = REQUEST WAITLIST,
R2012  2MONITOR SET UP.
R2013  2A NVSUB CALL THAT PASSES DSPLOCK ENDS OLD MONITOR.
R2014   DSPLOCK IS THE INTERLOCK FOR USE OF KEYBOARD AND DISPLAY SYSTEM WHICH
R2015  2LOCKS OUT INTERNAL USE WHENEVER THERE IS EXTERNAL KEYBOARD ACTION.
R2016   NVSUB IN F/F PLACES 2 + CALLING CADR INTO NVSBCADR, TC NVSUBEND INTO
R2017   ENTRET. IT WILL HANDLE A CALL FROM F/F OK, BUT WILL NOT RESTORE BANKREG
R2018  2TO ITS ORIGINAL CONTENTS.
 2019            SETLOC MIDSIX  +1
 2020   NVSUB    TS     NVTEMP          IN FIXED FIXED
 2021            CAF    BIT4
 2022            MASK   DSPLOCK         BIT4 OF STATE
 2023            CCS    A
 2024            TC     Q               DSP SYST BLOCKED. RET TO 1+ CALLING LOC
 2025            XCH    Q               DSP SYST AVAILABLE
 2026            AD     ONE
 2027            TS     TEMQS           2 + CALLING CADR INTO TEMQS
 2028            TC     KILMONON        TURN ON KILL MONITOR BIT
 2029   NVSUBCOM CAF    NVSUBANK
 2030            XCH    BANKREG
 2031            TS     BANKTEM
 2032            TC     MAKECADR
 2033            XCH    ADDRWD
 2034            TS     NVSBCADR
 2035            TC     NVSUBB          GO TO NVSUB1 THRU STANDARD LOC
 2036  2NVSUBANK CADR   NVSUB1          BANK NUMB OF NVSUB1
 2037   NVSUBMON XCH    Q               MONDO COMES HERE
 2038            AD     ONE
 2039            TS     TEMQS
 2040  4         TC     NVSUBCOM
 2041   NVSUBEND XCH    NVSBCADR
 2042  4         TC     SWCALL
 2043  2         SETLOC ENDRQWT +1
 2044   NVSUB1   CAF    ENTSET          IN BANK
 2045            TS     ENTRET          SET RETURN TO NVSUBEND
 2046            CAF    LOW6
 2047            MASK   NVTEMP
 2048            TS     MPAC            TEMP STORAGE
 2049            CAF    MID6
 2050            MASK   NVTEMP
 2051            TC     RIGHT5
 2052            TS     CYR
 2053            XCH    CYR
 2054            TS     MPAC    +1      TEMP STORAGE
 2055            CCS    MPAC            TEST NOUN
 2056            TC     +4              IF NOUN NOT +0, GO ON
 2057            XCH    MPAC    +1
 2058            TC     UPDATVB -1      IF NOUN = +0, DISPLAY VERB . THEN RETURN
 2059   ENTSET   TC     NVSUBEND
 2060            CCS    MPAC    +1      TEST VERB
 2061            TC     +4              IF VERB NOT +0, GO ON
 2062            XCH    MPAC
 2063            TC     UPDATNN -1      IF VERB = +0, DISPLAY NOUN. THEN RETURN
 2064            TC     NVSUBEND
 2065            XCH    MPAC    +1
 2066            TC     UPDATVB -1      IF BOTH NOUN AND VERB NOT +0, DISPLAY
 2067            XCH    MPAC            BOTH AND GO TO ENTPAS0
 2068            TC     UPDATNN -1
 2069            CCS    NNADTEM         NOUN TABLES WERE READ IN UPDATNN.
 2070            TC     +3              NORMAL
 2071            TC     GODSPALM        NOUN NOT IN USE
 2072            TC     MATBSUB
 2073   NVSUB2   CAF    ZERO
 2074            TS     LOADSTAT        SET FOR WAITING FOR DATA CONDITION
 2075            TS     CLPASS
 20751           TS     REQRET          SET REQRET FOR PASS 0.
 2076  2         TC     ENTPAS0
 2077   MATBSUB  XCH    MPAC    +2      NVSUB CALL LEFT ADDRES FOR MATBS IN
 2078            TS     NOUNADD         MPAC+2.
 2079  4         TC     NVSUB2
 2080   LOW6     OCT    77
 2081  2MID6     OCT    7700
 2082            SETLOC NVSUBEND +2
 2083   KILMONON CS     BIT15           FORCE BIT 15 OF MONSAVE1 TO 1.
 2084            INHINT                         THIS IS THE KILL MONITOR BIT.
 2085            MASK   MONSAVE1
 2086            AD     BIT15
 2087            TS     MONSAVE1
 2088            RELINT
 2089  4         TC     Q
R2090   LOADSTAT  +0 INACTIVE(WAITING FOR DATA). SET BY NVSUB
R2091             +1  PROCEED NO DATA. SET BY SPECIAL VERB
R2092            -1 TERMINATE   SET BY SPECIAL VERB
R2093  4         -0 DATA IN   SET BY END OF LOAD ROUTINE
R2094   L  TC ENDIDLE  (FIXED FIXED)
R2095   ROUTINES THAT REQUEST LOADS THROUGH NVSUB SHOULD USE ENDIDLE WHILE
R2096   WAITING FOR THE DATA TO BE LOADED. ENDIDLE PUTS CURRENT JOB TO SLEEP.
R2097   RECALTST TESTS LOADSTAT AND WAKES JOB UP TO,
R2098   L+1      FOR TERMINATE
R2099   L+2      FOR PROCEED WITHOUT DATA
R2100   L+3      FOR DATA IN
R2101  2IT DOES NOTHING     IF LOADSTAT INDICATES WAITING FOR DATA.
 2102   ENDIDLE  XCH    Q               NOVAC ROUTINES ENTER HERE
 2103            TS     TEMQS
 2104            XCH    BANKREG
 2105            TS     BANKTEM
 2106            TC     MAKECADR
 2107            TC     DSPLOCK1        MAKE DSPLOCK BUSY (BIT4 OF STATE)
 2108            XCH    ADDRWD
 2109            TS     CADRSTOR
 2110  4         TC     JOBSLEEP
 2111  2ENDINST  TC     ENDOFJOB
 2112  4BNKCON   OCT    5777
R2113   JAMTERM ALLOWS PROGRAMS TO PERFORM THE TERMINATE FUNCTION.
R2114  2IT DOES ENDOFJOB.
 2115   JAMTERM  CAF    TWENTY8
 2116            TS     REQRET          LEAVE ENTER AT PASS 0
 2117            TC     BANKCALL
 2118            CADR   UPDATVB -1      DISPLAY VB 34
 2119            TC     POSTJUMP
 2120  4         CADR   VBTERM
R2121   DATAWAIT IS AN ALTERNATIVE TO ENDIDLE. IT RETURNS IMMEDIATELY IF
R2122   LOADSTAT INDICATES THAT DATA IS ALREADY IN, OR PROCEED OR TERMINATE HAS
R2123   BEEN EXECUTED. RETURN FORMAT IS SAME AS FOR ENDIDLE.
R2124  2DATAWAIT SHOULD BE USED ONLY AFTER REQUESTING A LOAD VERB.
 2125   DATAWAIT XCH    Q
 2126            TS     TEMQS
 2127            CCS    LOADSTAT
 2128            TC     DATWAIT1        PROCEED.RETURN TO L+2.
 2129            TC     ENDIDLE +2      STILL WAITING. GO TO SLEEP.
 2130            TC     TEMQS           TERMINATE. RETURN TO L+1.
 2131            INDEX  TEMQS           DATA IN. RETURN TO L+3.
 2132            TC     2
 2133   DATWAIT1 INDEX  TEMQS           RETURN TO L+2
 2134  2         TC     1
R2135   DATAWAIT DOES NOT RELEASE DISPLAY SYST. IT IS RELEASED AT END OF NVSUB
R2136  4INITIATED LOAD, IF ENDIDLE WAS NOT USED.
 2137            SETLOC MID6  +1
R2138  2DSPMM  PLACE MAJOR MODE CODE INTO MODREG
 2139   DSPMM1   CAF    MD1             GETS HERE THRU DSPMM (STANDARD LEAD IN)
 2140            XCH    DSPCOUNT        SAVE DSPCOUNT
 2141            TS     DSPMMTEM
 2142            CS     MODREG
 2143            CS     A
 2144            TC     DSP2BIT
 2145            XCH    DSPMMTEM        RESTORE DSPCOUNT
 2146            TS     DSPCOUNT
 2147  4ENDSPMM1 TC     UPDATRET
R2148   RECALTST IS ENTERED DIRECTLY AFTER DATA IS
R2149   LOADED, TERMINATE VERB IS EXECUTED, OR THE PROCEED WITHOUT DATA VERB IS
R2150  2EXECUTED. IT WAKES UP JOB THAT DID TC ENDIDLE.
R2151   IF NVSUB INITIATED LOAD, AND ENDIDLE WAS NOT USED, THEN IT RELEASES
R2152  2DISPLAY SYST. (NEEDED FOR DATAWAIT)
 2153  2         SETLOC SWTAB  +4
 2154   RECALTST CCS    CADRSTOR
 2155            TC     RECAL1
 2156            TC     ENDOFJOB        NORMAL EXIT IF KEYBOARD INITIATED
 2157            TC     RECAL1
 2158            TS     CADRSTOR        -0. CONCLUSION OF NVSUB INITIATED LOAD.
 2159            TC     RECAL3          +0 INTO CADRSTOR, RELEASE DISPLAY,
A2160                                      AND ENDOFJOB. NEEDED FOR DATAWAIT.
 2161   RECAL1   CAF    ZERO
 2162            XCH    CADRSTOR
 2163            INHINT
 2164            TC     JOBWAKE
 2165            CCS    LOADSTAT
 2166            TC     DOPROC          + PROCEED WITHOUT DATA
 2167            TC     ENDOFJOB        PATHALOGICAL CASE EXIT
 2168            TC     DOTERM          -   TERMINATE
 2169            CS     TWO
 2170   RECAL2   INDEX  LOCCTR
 2171            AD     LOC             LOC IS - FOR BASIC JOBS
 2172            INDEX  LOCCTR
 2173            TS     LOC
 2174            RELINT
 2175   RECAL3   TC     RELDSP1         DOES NOT SEARCH LIST
 2176  2         TC     ENDOFJOB
 2177   DOTERM   CAF    ZERO
 2178  2         TC     RECAL2
 2179   DOPROC   CS     ONE
 2180            TC     RECAL2
P2182  4THE FOLLOWING REFERS TO THE NOUN TABLES
 2183  2         SETLOC DSPMM1  +6
R2184  2COMPONENT CODE NUMBER           INTERPRETATION
R2185   00000                           1 COMPONENT
R2186   00001                           2 COMPONENT (EACH S P)
R2187  400010                           3 COMPONENT (EACH SP)
R2188  2SF ROUTINE CODE NUMBER          INTERPRETATION
R2189   00000    OCTAL ONLY
R2190   00001    STRAIGHT FRACTIONAL
R2191   00010    DEGREES (XXX.XX)
R2192   00011    ARITHMETIC SF
R2193   00100    ARITH DP1   OUT(MULT BY 2/14 AT END)      IN(STRAIGHT)
R2194   00101    ARITH DP2   OUT(STRAIGHT)                 IN(SL 7 AT END)
R2195   00110    OPTICS DEGREES(XX.XXX MAX 89.999) OR (XXX.XX MAX 179.99)
R2196   00111    ARITH DP3   OUT ( SL 7 AT END)       IN ( STRAIGHT)
R2197  4END OF SF ROUTINE CODE NUMBERS
R2198  2SF CONSTANT CODE NUMBER         INTERPRETATION
R2199   00000                           WHOLE
R2200   00000                           TIME SEC(XXX.XX)SAME AS WHOLE(ARITH DP1)
R2201   00001                           TIME HOURS(XXX.XX) USE ARITH DP2
R2202   00010                           DEGREES
R2203   00010                           OPTICS DEGREES
R2204   00011                           GYRO DEGREES(XX.XXX) USE ARITH DP1
R2205   00100                           GYRO BIAS DRIFT .BBXXXXX MILLIRAD/SEC
R2206   00101                           GYRO AXIS ACCEL. DRIFT
R2207                                   .BBXXXXX (MILLIRAD/SEC) / (CM/SEC SEC)
R2208   00110                           PIPA BIAS X.XXXX CM/SEC SEC
R2209   00111                           PIPA SCALE FACTOR ERROR
R2210                                       XXXXX. PARTS/MILLION
R2211   01000                           POSITION(XXXX.X KILOMETERS) USE ARITHDP3
R2212   01001                           VELOCITY(XXXX.X METERS/SEC) USE ARITHDP2
R2213   01010                           TIME HOURS(XXX.XX)WEEKS INSIDE(ARITHDP2)
R2214   01011                           ELEVATION DEGREES(89.999MAX) USE ARITH
R22141  01100                           VG FOR 501 (XXXX.X MET/SEC)  USE ARITH
R2215  4END OF SF CONSTANT CODE NUMBERS
R2216   FOR GREATER THAN SINGLE PRECISION SCALES, PUT ADDRESS OF MAJOR PART INTO
R2217   NOUN TABLES.
R2218   OCTAL LOADS PLACE +0 INTO MAJOR PART, DATA INTO MINOR PART.
R2219   OCTAL DISPLAYS SHOW MINOR PART ONLY.
R2220   TO GET AT BOTH MAJOR AND MINOR PARTS (IN OCTAL), USE NOUN 01.
P2221   THE FOLLOWING ROUTINES ARE FOR READING THE NOUN TABLES AND THE SF TABLES
R2222   (WHICH ARE IN A SEPARATE BANK FROM THE REST OF PINBALL). THESE READING
R2223  4ROUTINES ARE IN THE SAME BANK AS THE TABLES. THEY ARE CALLED BY SWCALL.
R2224   LODNNTAB LOADS NNADTEM WITH THE NNADTAB ENTRY, NNTYPTEM WITH THE
R2225   NNTYPTAB ENTRY. IF THE NOUN IS MIXED, IDAD1TEM IS LOADED WITH THE FIRST
R2226   IDADDTAB ENTRY, IDAD2TEM THE SECOND IDADDTAB ENTRY, IDAD3TEM THE THIRD
R2227  2IDADDTAB ENTRY. MIXBR IS SET FOR MIXED OR NORMAL NOUN.
 2228            SETLOC ENDEXTVS
 2229   LODNNTAB XCH    Q
 2230            TS     IDAD3TEM        SAVE RETURN ADDRESS IN IDAD3TEM
 2231            INDEX  NOUNREG
 2232            CAF    NNADTAB
 2233            TS     NNADTEM
 2234            INDEX  NOUNREG
 2235            CAF    NNTYPTAB
 2236            TS     NNTYPTEM
 2237            CS     NOUNREG
 2238            AD     MIXCON
 2239            CCS    A
 2240            TC     LODNORM         NOUN L/ FIRST MIXED NOUN
 2241   MIXCON   OCT    55              FIRST MIXED NOUN = 55.
 2242            TC     +1
 2243   LODMIXNN CAF    TWO             NOUN G/E FIRST MIXED NOUN
 2244            TS     MIXBR
 2245            CAF    LOW10
 2246            MASK   NNADTEM
 2247            TS     Q               IDADDREL INTO Q
 2248            INDEX  A
 2249            CAF    IDADDTAB
 2250            TS     IDAD1TEM        LOAD IDAD1TEM WITH FIRST IDADDTAB ENTRY.
 2251            INDEX  Q
 2252            CAF    IDADDTAB +1
 2253            TS     IDAD2TEM        LOAD IDAD2TEM WITH 2ND IDADDTAB ENTRY.
 2254            INDEX  Q
 2255            CAF    IDADDTAB +2     LOAD IDAD3TEM WITH 3RD IDADDTAB ENTRY.
 2256   LODNLV   XCH    IDAD3TEM        PUT RETURN ADDESS INTO A.
 2257  2         TC     A
 2258   LODNORM  CAF    ONE
 2259            TS     MIXBR
 2260  4         TC     LODNLV
R2261  2GTSFOUT LOADS SFTEMP1, SFTEMP2 WITH THE DP SFOUTAB ENTRIES.
 2262   GTSFOUT  INDEX  SFTEMP2         SF CONUM ARRIVES IN SFTEMP2.
 2263            CAF    SFOUTAB1
 2264            TS     SFTEMP1
 2265            INDEX  SFTEMP2
 2266            CAF    SFOUTAB2
 2267            TS     SFTEMP2
 2268  4         TC     Q
R2269  2GTSFIN LOADS SFTEMP1, SFTEMP2 WITH THE DP SFINTAB ENTRIES.
 2270   GTSFIN   INDEX  SFTEMP2         SF CONUM ARRIVES IN SFTEMP2.
 2271            CAF    SFINTAB1
 2272            TS     SFTEMP1
 2273            INDEX  SFTEMP2
 2274            CAF    SFINTAB2
 2275            TS     SFTEMP2
 2276  4         TC     Q
A2277                                   NN   NORMAL NOUNS
 2278   NNADTAB  OCT    00000           00 NOT IN USE
 2279            OCT    40000           01 SPECIFY MACHINE ADDRESS (FRACTIONAL)
 2280            OCT    40000           02 SPECIFY MACHINE ADDRESS (WHOLE)
 2281            OCT    40000           03 SPECIFY MACHINE ADDRESS (DEGREES)
 2282            OCT    40000           04 SPECIFY MACHINE ADDRESS (HOURS)
 2283            OCT    40000           05 SPECIFY MACHINE ADDRESS (SECONDS)
 2284            OCT    40000           06 SPECIFY MACHINE ADDRESS (GYRO DEG)
 2285            OCT    40000           07 SPECIFY MACHINE ADDRESS (Y OPT DEG.)
 2286            OCT    00000           10 SPARE
 2287            OCT    00000           11 SPARE
 2288            OCT    00000           12 SPARE
 2289            OCT    00000           13 SPARE
 2290            OCT    00000           14 SPARE
 2291            OCT    77777           15 INCREMENT MACHINE ADDRESS
 2292            OCT    00035           16 TIME SECONDS
 2293            OCT    00035           17 TIME HOURS
 2294            ADRES  CDUX            20 ICDU
 2295            ADRES  PIPAX           21 PIPAS
 2296            ADRES  THETAD          22 NEW ANGLES I
 2297            ADRES  DSPTEM2         23 DELTA ANGLES I
 2298            ADRES  DSPTEM1         24 DELTA TIME (SEC)
 2299            ADRES  DSPTEM1         25 CHECKLIST
 2300            ADRES  DSPTEM1         26 PRIO/DELAY
 2301            ADRES  SMODE           27 SELF TEST ON/OFF SWITCH
 2302            ADRES  DSPTEM1         30 STAR NUMBERS
 2303            ADRES  FAILREG         31 FAILREG, SFAIL, ERCOUNT
 2304            ADRES  TDEC            32 DECISION TIME (MIDCOURSE)
 2305            ADRES  TET             33 EPHEMERIS TIME(MIDCOURSE)
 2306            ADRES  MEASQ           34 MEASURED QUANTITY (MIDCOURSE)
 2307            ADRES  ROLL            35 ROLL, PITCH, YAW
 2308            ADRES  LANDMARK        36 LANDMARK DATA 1
 2309            ADRES  LANDMARK +3     37 LANDMARK DATA 2
 2310            ADRES  DSPTEM1         40 VG FOR 501
 2311            OCT    00000           41 SPARE
 2312            OCT    00000           42 SPARE
 2313            OCT    00000           43 SPARE
 2314            OCT    00000           44 SPARE
 2315            OCT    00000           45 SPARE
 2316            OCT    00000           46 SPARE
 2317            OCT    00000           47 SPARE
 2318            OCT    00000           50 SPARE
 2319            OCT    00000           51 SPARE
 2320            ADRES  GBIASX          52 GYRO BIAS DRIFT
 2321            ADRES  ADIAX           53 GYRO INPUT AXIS ACCELERATION DRIFT
 2322  2         ADRES  ADSRAX          54 GYRO SPIN AXIS ACCELERATION DRIFT
A2323                                   NN  MIXED NOUNS
 2324            OCT    02000           55 OCDU
 2325            OCT    04002           56 UNCALLED MARK DATA (OCDU & TIME(SEC))
 2326            OCT    02005           57 NEW ANGLES OCDU
 2327            OCT    04007           60 IMU MODE STATUS
 2328            OCT    02012           61 TARGET AZIMUTH AND ELEVATION
 2329            OCT    04062           62 RE-ENTRY VARIABLES
 2330            OCT    02016           63 OCDUX AND TIME(SEC)
 2331            OCT    02020           64 OCDUY AND TIME(SEC)
 2332            OCT    02022           65 SAMPLED TIME (HOURS AND SECONDS)
A2333                                        (FETCHED IN INTERRUPT)
 2334            OCT    04024           66 SYSTEM TEST RESULTS
 2335            OCT    04027           67 DELTA GYRO ANGLES
 2336            OCT    04032           70 PIPA BIAS
 2337            OCT    04035           71 PIPA SCALE FACTOR ERROR
 2338            OCT    04040           72 DELTA POSITION
 2339            OCT    04043           73 DELTA VELOCITY
 2340            OCT    04046           74 MEASUREMENT DATA (MIDCOURSE)
 2341            OCT    04051           75 MEASUREMENT DEVIATIONS (MIDCOURSE)
 2342            OCT    04054           76 POSITION VECTOR
 2343  4         OCT    04057           77 VELOCITY VECTOR
A2344                                   NN        NORMAL NOUNS
 2345   NNTYPTAB OCT    00000           00 NOT IN USE
 2346            OCT    00040           01 1COMP  FRACTIONAL
 2347            OCT    00140           02 1COMP  WHOLE
 2348            OCT    00102           03 1COMP  DEGREES
 2349            OCT    00241           04 1COMP  HOURS
 2350            OCT    00200           05 1COMP  SECONDS
 2351            OCT    00203           06 1COMP  GYRO DEGREES
 2352            OCT    00302           07 1COMP  Y OPT DEGREES
 2353            OCT    00000           10        SPARE
 2354            OCT    00000           11        SPARE
 2355            OCT    00000           12        SPARE
 2356            OCT    00000           13        SPARE
 2357            OCT    00000           14        SPARE
 2358            OCT    00000           15 1COMP  OCTAL ONLY
 2359            OCT    00200           16 1COMP  SECONDS
 2360            OCT    00241           17 1COMP  HOURS
 2361            OCT    04102           20 3COMP  DEGREES
 2362            OCT    04140           21 3COMP  WHOLE
 2363            OCT    04102           22 3COMP  DEGREES
 2364            OCT    04102           23 3COMP  DEGREES
 2365            OCT    00200           24 1COMP  SECONDS
 2366            OCT    00140           25 1COMP  WHOLE
 2367            OCT    00140           26 1COMP  WHOLE
 2368            OCT    00140           27 1COMP  WHOLE
 2369            OCT    04140           30 3COMP  WHOLE
 2370            OCT    04000           31 3COMP  OCTAL ONLY
 2371            OCT    00252           32 1COMP  TIME WEEKS
 2372            OCT    00252           33 1COMP  TIME WEEKS
 2373            OCT    00350           34 1COMP  POSITION
 2374            OCT    04102           35 3COMP  DEGREES
 2375            OCT    04000           36 3COMP  OCTAL ONLY
 2376            OCT    04000           37 3COMP  OCTAL ONLY
 2377            OCT    04154           40 3COMP  VG FOR 501
 2378            OCT    00000           41        SPARE
 2379            OCT    00000           42        SPARE
 2380            OCT    00000           43        SPARE
 2381            OCT    00000           44        SPARE
 2382            OCT    00000           45        SPARE
 2383            OCT    00000           46        SPARE
 2384            OCT    00000           47        SPARE
 2385            OCT    00000           50        SPARE
 2386            OCT    00000           51        SPARE
 2387            OCT    04144           52 3COMP  GYRO BIAS DRIFT
 2388            OCT    04145           53 3COMP  GYRO AXIS ACCEL. DRIFT
 2389  2         OCT    04145           54 3COMP  GYRO AXIS ACCEL. DRIFT
A2390                                   NN        MIXED NOUNS
 2391            OCT    00102           55 2COMP  DEGREES, Y OPT DEGREES
 2392            OCT    00102           56 3COMP  DEGREES, Y OPT DEGREES, SECS
 2393            OCT    00102           57 2COMP  DEGREES, Y OPT DEGREES
 2394            OCT    00000           60 3COMP  OCTAL ONLY
 2395            OCT    00542           61 2COMP  DEGREES, ELEVATION DEGREES
 2396            OCT    00000           62 3COMP  SECS, WHOLE, WHOLE
 2397            OCT    00002           63 2COMP  DEGREES, SECS
 2398            OCT    00002           64 2COMP  Y OPT DEGREES, SECS
 2399            OCT    00001           65 2COMP  HOURS, SECONDS
 2400            OCT    00000           66 3COMP  WHOLE, FRACTIONAL, WHOLE
 2401            OCT    06143           67 3COMP  GYRO DEGREES FOR EACH
 2402            OCT    14306           70 3COMP  PIPA BIAS FOR EACH
 2403            OCT    16347           71 3COMP  PIPA SCALE FACTOR ERR.FOR EACH
 2404            OCT    20410           72 3COMP  POSITION FOR EACH
 2405            OCT    22451           73 3COMP  VELOCITY FOR EACH
 2406            OCT    00412           74 3COMP  TIME WEEKS, POSITION, WHOLE
 2407            OCT    20450           75 3COMP  POSITION, VELOCITY, POSITION
 2408            OCT    20410           76 3COMP  POSITION FOR EACH
 2409  4         OCT    22451           77 3COMP  VELOCITY FOR EACH
 2410   SFINTAB1 OCT    00006           WHOLE,TIME(SEC)              HIGH PART
 2411            OCT    00253           TIME HOURS(=1.3-, PT. BETWEEN BITS 7-8)
 2412            OCT    0               DEGREES
 2413            OCT    00021           GYRO DEGREES
 2414            OCT    00001           GYRO BIAS DRIFT
 2415            OCT    00011           GYRO AXIS ACCEL. DRIFT
 2416            OCT    00004           PIPA BIAS
 2417            OCT    00314           PIPA SCALE ERROR
 2418            OCT    23420           POSITION
 2419            OCT    00201           VELOCITY (POINT BETWEEN BITS 7-8)
 2420            OCT    01371           TIME WEEKS (POINT BETWEEN BITS 7-8)
 2421            OCT    00001           ELEVATION DEGREES
 24211           OCT    00003           VG FOR 501
R2422  4END OF SFINTAB1
 2423   SFINTAB2 OCT    03240           WHOLE, TIME(SEC)             LO PART
 2424            OCT    25124           TIME HOURS
 2425            OCT    0               DEGREES ( SFCON IN DEGINSF)
 2426            OCT    30707           GYRO DEGREES
 2427            OCT    02133           GYRO BIAS DRIFT
 2428            OCT    30322           GYRO AXIS ACCEL. DRIFT
 2429            OCT    14021           PIPA BIAS
 2430            OCT    31463           PIPA SCALE ERROR
 2431            OCT    00000           POSITION
 2432            OCT    30327           VELOCITY
 2433            OCT    34750           TIME WEEKS
 2434            OCT    03434           ELEVATION DEGREES
 24341           OCT    04000           VG FOR 501
R2435  4END OF SFINTAB2
 2436   SFOUTAB1 OCT    05174           WHOLE, TIME(SEC)             HIGH PART
 2437            OCT    27670           TIME HOURS
 2438            OCT    0               DEGREES
 2439            OCT    01631           GYRO DEGREES
 2440            OCT    35753           GYRO BIAS DRIFT
 2441            OCT    03216           GYRO AXIS ACCEL. DRIFT
 2442            OCT    07237           PIPA BIAS
 2443            OCT    00120           PIPA SCALE ERROR
 2444            OCT    00321           POSITION (POINT BETWEEN BITS 7-8)
 2445            OCT    37441           VELOCITY
 2446            OCT    05300           TIME WEEKS
 2447            OCT    34631           ELEVATION DEGREES
 24471           OCT    12172           VG FOR 501
R2448  4END OF SFOUTAB1
 2449   SFOUTAB2 OCT    13261           WHOLE, TIME(SEC)             LO PART
 2450            OCT    31357           TIME HOURS
 2451            OCT    0               DEGREES
 2452            OCT    23146           GYRO DEGREES
 2453            OCT    32323           GYRO BIAS DRIFT
 2454            OCT    06400           GYRO AXIS ACCEL. DRIFT
 2455            OCT    37776           PIPA BIAS
 2456            OCT    00000           PIPA SCALE ERROR
 2457            OCT    26706           POSITION
 2458            OCT    14247           VELOCITY
 2459            OCT    20305           TIME WEEKS
 2460            OCT    23146           ELEVATION DEGREES
 24601           OCT    34121           VG FOR 501
R2461  4END OF SFOUTAB2
A2462                                   MIXNOUN  SF ROUT        REG
 2463   IDADDTAB CADR   OPTX    +04000  01       DEGREES        52
 2464            CADR   OPTY    +14000  01       Y OPT DEGREES  53
 2465            CADR   DSPTEM1 +04000  02       DEGREES        627
 2466            CADR   DSPTEM1 +14001  02       Y OPT DEGREES  630
 2467            CADR   DSPTEM1 +10002  02       SEC            631
 2468            CADR   DESOPTX +04000  03       DEGREES        724
 2469            CADR   DESOPTX +14001  03       Y OPT DEGREES  725
 2470            CADR   IN3             04       OCTAL ONLY
 2471            CADR   WASKSET         04       OCTAL ONLY
 2472            CADR   OLDERR          04       OCTAL ONLY
 2473            CADR   DSPTEM1 +04000  05       DEGREES
 2474            CADR   DSPTEM1 +06001  05       ELEVATION DEGREES
 2475            OCT    00000           N 62 WAS 2COMP. CHANGED TO 3COMP. MOVED
 2476            OCT    00000           TO END OF IDADDTAB TO PRESERVE TABLE.
 2477            CADR   OPTX    +04000  07       DEGREES        52
 2478            CADR   TIME2   +10000  07       SEC            35
 2479            CADR   OPTY    +14000  10       Y OPT DEGREES  53
 2480            CADR   TIME2   +10000  10       SEC            35
 2481            CADR   SAMPTIME +12000 11       HOURS          655
 2482            CADR   SAMPTIME +10000 11       SECONDS        655
 2483            CADR   DSPTEM2 +06000  12       WHOLE          632
 2484            CADR   DSPTEM2 +02001  12       FRACTIONAL     633
 2485            CADR   DSPTEM2 +06002  12       WHOLE          634
 2486            CADR   OGC     +10000  13       GYRO DEGREES
 2487            CADR   OGC     +10002  13       GYRO DEGREES
 2488            CADR   OGC     +10004  13       GYRO DEGREES
 2489            CADR   PBIASX  +06000  14       PIPA BIAS
 2490            CADR   PBIASY  +06000  14       PIPA BIAS
 2491            CADR   PBIASZ  +06000  14       PIPA BIAS
 2492            CADR   PIPASCFX +06000 15       PIPA SCALE FACTOR ERROR
 2493            CADR   PIPASCFY +06000 15       PIPA SCALE FACTOR ERROR
 2494            CADR   PIPASCFZ +06000 15       PIPA SCALE FACTOR ERROR
 2495            CADR   DELR    +16000  16       POSITION
 2496            CADR   DELR    +16002  16       POSITION
 2497            CADR   DELR    +16004  16       POSITION
 2498            CADR   DELVEL  +12000  17       VELOCITY
 2499            CADR   DELVEL  +12002  17       VELOCITY
 2500            CADR   DELVEL  +12004  17       VELOCITY
 2501            CADR   TDEC    +12000  20       TIME WEEKS
 2502            CADR   MEASQ   +16000  20       POSITION
 2503            CADR   MEASMODE +06000 20       WHOLE
 2504            CADR   DSPTEM1 +16000  21       POSITION
 2505            CADR   DSPTEM1 +12002  21       VELOCITY
 2506            CADR   DELTAQ  +16000  21       POSITION
 2507            CADR   DSPTEM1 +16000  22       POSITION
 2508            CADR   DSPTEM1 +16002  22       POSITION
 2509            CADR   DSPTEM1 +16004  22       POSITION
 2510            CADR   DSPTEM1 +12000  23       VELOCITY
 2511            CADR   DSPTEM1 +12002  23       VELOCITY
 2512            CADR   DSPTEM1 +12004  23       VELOCITY
 2513            CADR   TIME2   +10000  06       SEC
 2514            CADR   V       +06000  06       WHOLE
 2515            CADR   THETAH  +06000  06       WHOLE
 2516            OCT    00000                    SPARE
 2517            OCT    00000                    SPARE
 2518            OCT    00000                    SPARE
P2520  4MISCELLANEOUS SERVICE ROUTINES
 2521  2         SETLOC DATWAIT1 +2
 2522   R1D1     OCT    16
 2523   R2D1     OCT    11
 2524  2R3D1     OCT    4
 2525   RIGHT5   TS     CYR
 2526            CS     CYR
 2527            CS     CYR
 2528            CS     CYR
 2529            CS     CYR
 2530            XCH    CYR
 2531  2         TC     Q
 2532   LEFT5    TS     CYL
 2533            CS     CYL
 2534            CS     CYL
 2535            CS     CYL
 2536            CS     CYL
 2537            XCH    CYL
 2538  2         TC     Q
 2539   SLEFT5   DOUBLE
 2540            DOUBLE
 2541            DOUBLE
 2542            DOUBLE
 2543            DOUBLE
 2544  4         TC     Q
 2545   LOW5     OCT    37
 2546   MID5     OCT    1740
 2547  2         OCT    76000           MUST STAY HERE.
 2548   TCNOVAC  TC     NOVAC
 2549   TCWAIT   TC     WAITLIST
 2550   TCTSKOVR TC     TASKOVER
 2551  4TCFINDVC TC     FINDVAC
 2552   VD1      OCT    23
 2553   ND1      OCT    21
 2554  2MD1      OCT    25
 2555  2BINCON   DEC    10
 2556  2TEN      EQUALS BINCON
 2557   FALTON   INHINT                 TURN PROGRAM CHECK LIGHT ON
 2558            CS     BIT5            OUT1,BIT5(ALSO KNOWN AS ILLEGAL ORDER)
 2559            MASK   OUT1
 2560            AD     BIT5
 2561            TS     OUT1
 2562            RELINT
 2563  2         TC     Q
 2564   FALTOF   INHINT                 TURN PROGRAM CHECK LIGHT OFF
 2565            CS     BIT5
 2566            MASK   OUT1
 2567            TS     OUT1
 2568            RELINT
 2569  2         TC     Q
 2570   RELDSPON INHINT                 TURN ON RELEASE DISPLAY SYST LIGHT
 2571            CS     BIT3
 2572            MASK   OUT1
 2573            AD     BIT3
 2574            TS     OUT1
 2575            RELINT
 2576  2         TC     Q
 2577   DSPLOCK0 CS     BIT4
 2578            INHINT                 DSPLOCK = BIT4 OF STATE
 2579            MASK   DSPLOCK
 2580            TS     DSPLOCK
 2581            RELINT
 2582  2         TC     Q
 2583   DSPLOCK1 CS     BIT4
 2584            INHINT                 DSPLOCK = BIT 4 OF STATE
 2585            MASK   DSPLOCK
 2586            AD     BIT4
 2587            XCH    DSPLOCK         LEAVES OLD C(DSPLOCK) IN A.
 2588            RELINT
 2589  2         TC     Q
 2590   TSTDSPLK CAF    BIT4            SIMULATES CCS DSPLOCK
 2591            MASK   DSPLOCK
 2592            CCS    A
 2593            TC     Q               DSPLOCK = 1, RETURN TO L+1
 2594            INDEX  Q
 2595            TC     1               DSPLOCK = 0, RETURN TO L+2
P2596   INTERNAL ROUTINES THAT USE THE KEYBOARD AND DISPLAY SYSTEM(THRU
R2597   NVSUB) MUST  TC GRABDSP  BEFOREHAND , TO GRAB THE DISPLAY SYSTEM AND
R2598  2MAKE IT BUSY TO OTHER INTERNAL USERS.
R2599         WHEN FINISHED , THERE MUST BE A TC FREEDSP , TO RELEASE THE
R2600  2SYSTEM FOR OTHER INTERNAL USERS.
R2601         THE CALLING SEQUENCES ARE
R2602   L        TC     GRABDSP
R2603   L+1      RETURN HERE WHEN SYSTEM IS ALREADY GRABBED
R2604  2L+2      RETURN HERE MEANS YOU HAVE IT
R2605   L        TC     NVSUB
R2606   L+1      RETURN HERE IF OPERATOR HAS INTERVENED
R2607  4L+2      RETURN HERE AFTER EXECUTION
R2608         A ROUTINE CALLED GRABUSY IS PROVIDED (USE IS OPTIONAL) TO PUT YOUR
R2609   JOB TO SLEEP UNTIL  THE SYSTEM IS FREED BY THE JOB HOLDING IT.
R2610  2YOUR CADR IS PUT AT FIRST AVAILABLE SLOT IN A WAITING LIST (FIFO).
R2611         THE CALLING SEQUENCE IS
R2612            CAF    WAKECADR
R2613  2         TC     GRABUSY
R2614         A ROUTINE CALLED  NVSUBUSY IS PROVIDED (USE IS OPTIONAL)  TO PUT
R2615   YOUR JOB TO SLEEP UNTIL THE OPERATOR RELEASES IT. YOUR CADR IS PUT
R2616  2ON TOP OF A WAITING LIST (FIFO). IT ALSO TURNS ON KEY RELEASE LIGHT.
R2617   THE CALLING SEQUENCE IS
R2618   CAF WAKECADR
R2619  4TC NVSUBUSY
R2620   AFTER A TC FREEDSP, THE INTERNAL INTERLOCK IS KEPT BUSY FOR 10 SECONDS,
R2621   AFTER WHICH A CADR IS CALLED FROM THE LIST. THIS INSURES THAT ALL
R2622  4DISPLAYS WAITING WILL BE VISIBLE.
R2623   GRABLOCK IS THE INTERNAL INTERLOCK FOR THE USE OF THE KEYBOARD
R2624   AND DISPLAY SYSTEM.
R2625   +0  FREE
R2626   +1  SOME INTERNAL ROUTINE HAS GRABBED DSP SYST
R2627  4+2  SOME INTERNAL ROUTINE HAS GONE TO NVSUBUSY
 2628   GRABDSP  CCS    GRABLOCK
 2629            TC     Q               GRABBED. RETURN TO L+1
 2630            CAF    ONE             NOT GRABBED, SET TO +1
 2631            TS     GRABLOCK        AND RETURN TO L+2
 2632            INDEX  Q
 2633  4         TC     1
 2634   PREGBSY  CAF    LOW10           SPECIAL ENTRANCE FOR ROUTINES IN BANKS
 2635            MASK   Q               DESIRING THE CADR OF 1 + (LOC FROM WHICH
 2636            AD     BANKREG         TC PREGBSY WAS DONE) TO BE ENTERED.
 2637   GRABUSY  TC     POSTJUMP
 2638            CADR   GRABUSYB
 2639  2         SETLOC ENDSPMM1 +1
 2640   GRABUSY1 TS     CADRTEM
 2641            CCS    GRABLOCK
 2642            TC     +3              STILL GRABBED
 2643            XCH    CADRTEM         NOT GRABBED SO DO DIRECT CALL
 2644            TC     BANKJUMP
 2645            CAF    TWO
 2646            TS     LSTPTR
 2647            INDEX  LSTPTR          SEARCH LIST FOR FIRST AVAILABLE SPACE
 2648            CCS    DSPLIST         FROM BOTTOM.
 2649            TC     +2
 2650            TC     PUTINLST        SPACE FOUND
 2651            CCS    LSTPTR          DECREMENT POINTER
 2652            TC     -6
 2653            TC     LSTFULL
 2654   PUTINLST XCH    CADRTEM
 2655            INDEX  LSTPTR
 2656            TS     DSPLIST
 2657  4         TC     JOBSLEEP
 2658            SETLOC GRABUSY  +2
 2659   PRENVBSY CS     6K+3            SPECIAL ENTRANCE FOR ROUTINES IN BANKS
 2660            AD     Q               DESIRING THE CADR OF (LOC FROM WHICH THE
 2661            AD     BANKREG         TC PRENVBSY WAS DONE) -2 TO BE ENTERED.
 2662   NVSUBUSY TC     POSTJUMP
 2663            CADR   NVSUBSYB
 2664  26K+3     OCT    6003            TC PRENVBSY WAS DONE) -2 TO BE ENTERED.
 2665            SETLOC PUTINLST  +4
 2666   NVSUBSY1 TS     CADRTEM
 2667            TC     TSTDSPLK        TEST IF REALLY LOCKED OUT
 2668            TC     +3              STILL BUSY
 2669            XCH    CADRTEM         DSPLOCK = +0 SO RETURN DIRECTLY
 2670            TC     BANKJUMP
 2671            CAF    TWO             SET FOR GRABBED STATE AND NVSUBUSY USE
 2672            TS     GRABLOCK
 2673            XCH    CADRTEM
 2674            XCH    DSPLIST +2      ENTER CADR INTO FIRST POSITION OF LIST
 2675            XCH    DSPLIST +1              (BOTTOM)
 2676            XCH    DSPLIST
 2677            CCS    A
 2678            TC     LSTFULL
 2679            TC     +2
 2680            TC     LSTFULL
 2681            TC     RELDSPON
 2682            CS     DSPLIST +2
 2683            COM
 2684  2ENDNVBSY TC     JOBSLEEP
 2685  2         SETLOC NVSUBUSY +3
 2686   RELDSP   XCH    Q               SET DSPLOCK TO +0, TURN RELDSP LIGHT
 2687            TS     RELRET          OFF,  SEARCH DSPLIST
 2688            CAF    NEG1
 2689            AD     GRABLOCK
 2690            CCS    A               SEARCH LIST ONLY IF GRABLOCK = +2
 2691            TC     +4                  (SOMEONE USED NVSUBUSY)
 2692            TC     CCSHOLE
 2693            TC     RELDSP2
 2694            TC     RELDSP2
 2695            CAF    ZERO
 2696            XCH    DSPLIST
 2697            XCH    DSPLIST  +1
 2698            XCH    DSPLIST  +2
 2699            TS     CADRTEM
 2700            CCS    A
 2701            TC     +2
 2702            TC     RELDSP2         LIST EMPTY
 2703            XCH    CADRTEM
 2704            INHINT
 2705            TC     JOBWAKE
 2706            CAF    ONE
 2707            TS     GRABLOCK
 2708   RELDSP2  CS     BIT3
 2709            MASK   OUT1
 2710            TS     OUT1
 2711            TC     DSPLOCK0        0 INTO DSPLOCK (BIT4 OF STATE)
A2712                                   RELINT IS DONE IN DSPLOCK0.
 2713            TC     RELRET
 2714   RELDSP1  XCH    Q               SET DSPLOCK TO +0, RELDSP LIGHT OFF,
 2715            TS     RELRET          NO LIST SEARCH
 2716            INHINT
 2717  4         TC     RELDSP2
 2718   FREEDSP  XCH    Q
 2719            TS     FREERET
 2720            INHINT
 2721            CAF    SHOTIME
 2722            TC     WAITLIST
 2723            CADR   FREEWAIT
 2724            RELINT
 2725  2         TC     FREERET
 2726   SHOTIME  DEC    175             SET FOR 1.75 SECS FOR 501
 2728  2         SETLOC ENDNVBSY +1
 2729   FREEWAIT CAF    PRIO31          CALLED BY T3RUPT
 2730            TC     NOVAC
 2731            CADR   FREDSPDO
 2732  4         TC     TASKOVER
 2733   FREDSPDO CAF    ZERO            CALLED BY EXECUTIVE
 2734            XCH    DSPLIST
 2735            XCH    DSPLIST +1
 2736            XCH    DSPLIST +2
 2737            TS     CADRTEM
 2738            CCS    A
 2739            TC     +2
 2740            TC     LSTEMPTY
 2741            XCH    CADRTEM
 2742            INHINT
 2743            TC     JOBWAKE
 2744            RELINT
 2745            CAF    ONE             SET FOR GRABBED CONDITION
 2746            TS     GRABLOCK
 2747            TC     ENDOFJOB
 2748   LSTEMPTY CAF    ZERO            SET FOR FREE CONDITION
 2749  4         TC     -3
 2750   LSTFULL  TC     ABORT
 2751            OCT    01206           PINBALL WAITING LINE FULL.
L       501 MISSION CONTROL PROGRAM
 0001            SETLOC 64000
 0002   LIFTOFF  INHINT
 0003            TC     READTIME +1     SAVE TIME OF LIFTOFF
 0004            CS     RUPTSTOR
 0005            TS     TLIFTOFF
 0006            CS     RUPTSTOR +1
 0007  2         TS     TLIFTOFF +1
 0008            COM
 0011  2         TS     TBASE4
 0035   CALL4.11 CAF    ELEVEN
 0036            TC     NEWPHASE
 0037  2         OCT    00004
 0038            CCS    A
 0039            TC     SETLIFT
 0040  2         TC     SETLIFT
 0041            INHINT
 0042            CAF    2SEC            ALLOW 2 SECS FOR BACK-UP GRR COMPUTATION
 0043            TC     WAITLIST
 0044  2         CADR   TARGTASK
 0045   SETLIFT  TC     FLAG1UP
 0046  2         OCT    00002
 0047  2         TC     JAMTERM         FLUSH V75 GRR BACKUP.
 0049   TARGTASK CAF    THIRTY1
 00491           TC     NEWPHASE
 00492 2         OCT    00004
 00493           CAF    ZERO
 00494 2         TS     TBASE3
 00496           CAF    ONE
 00497           TC     NEWPHASE
 00498 2         OCT    00003
 00499           CAF    ZERO            FIX UP TBASE5 FOR READACCS RESTART AND
 0050            AD     TBASE5            LOAD 2 SECS INTO TIME COUNTERS (I.E.
 00506           AD     TLIFTOFF +1       ZERO THE AGC CLOCK AT LIFT-OFF)
 00507           AD     NEG1/2
 00508           AD     NEG1/2
 00509 2         XCH    TBASE5
 0051            CAF    200DEC
 00511 2         TS     TIME1
 00512           CAF    THIRTY2
 00513           TC     NEWPHASE
 00514 2         OCT    00004
 00515           CS     200DEC          CALL ON BOOST MONITOR
 00516           AD     TROLL +1
 00517           TC     WAITLIST
 00518 2         CADR   MON1TASK
 005194 REDO4.32 CAF    PRIO12
 005195          TC     FINDVAC
 0052  2         CADR   TARGJOB
 00521           CAF    ZERO            FINALLY ZERO TIME2
 0052152         TS     TIME2
 00525 2         TC     TASKOVER
 00526  REDO4.31 CAF    PRIO35
 00527           TC     NOVAC
 00528 2         CADR   ENEMA
 00529 4         TC     TARGTASK +3
 0052952         BANK   24
 0053   TARGJOB  TC     BANKCALL        COMMAND IMUCDU TO ATT. CONTROL MODE
 0054  2         CADR   IMUATTC
 00544           TC     NEWMODE         SET MAJOR MODE TO BOOST ATTITUDE MONITOR
 00546 2         OCT    00011
 0055  2         TC     SETHETAD        FORCE THETAD,+1,+2 TO EQUAL CDUX,Y,Z
 0056  2         TC     INTPRET
 0057            DSU    0               TARGET VECTORS INITIALLY REFERENCED TO
 0058                   TLIFTOFF        GRR. WILL NOW UPDATE THEM TO LIFT-OFF
 0059                   TIME2GR
 0060  2         STORE  DTEAROT
 0061            DMOVE  0
 0062                   TPACIF1
 0063  2         STORE  TPACIFC
 0064            DMOVE  0
 0065                   TATLAN1
 0066  2         STORE  TATLANT
 0069            VMOVE  0
 0070                   RTPACIF1
 0071  2         STORE  RTINIT
 0072            ITC    0
 0073  2                EARROT1
 0074            NOLOD  0
 0075  2         STORE  RTPACIFC
 0076            VMOVE  0
 0077                   RTATLAN1
 0078  2         STORE  RTINIT
 0079            ITC    0
 0080  2                EARROT1
 0081            NOLOD  0
 0082  2         STORE  RTATLANT
 0083  2         EXIT   0
 0084   TARGET   TC     BANKCALL        WAIT FOR COMPLETION OF MODE SWITCH
 0085            CADR   IMUSTALL
 0086  2         TC     CURTAINS        TRAP IF INCOMPLETE
 0091            CS     ONE
 0092            TC     NEWPHASE
 0093  2         OCT    00004
 0094  8         TC     ENDOFJOB
 00945 2         BANK   32
 0095   MON1TASK CAF    PRIO5
 0096            TC     FINDVAC
 0097  2         CADR   MONITJOB
 0098            TC     FLAG1UP         SET MONIT FLAG
 0099  2MONITMSK OCT    00040
 0100  4         TC     TASKOVER
 0101   MONITJOB TC     PHASCHNG
 0102  2         OCT    03203
 0103  2         TC     INTPRET
 0104            RTB    1               FORM TIME SINCE START OF MONITOR
 0105            DSU
 0106                   LOADTIME
 0107                   TPITCH
 0108  2         STORE  TMONITOR        SCALED AT 2(+28) CS
 01081           NOLOD  2               TEST IF TIME TO START PITCH MONITOR
 01082           BPL    LODON
 01083           DMOVE
 01084                  +3
 01085                  DPZERO          NO
 01086 2         STORE  TMONITOR
 0109   PITCH1   NOLOD  3               TEST IF TIME TO STOP MONITOR
 0110            DSU    BMN
 0111            LODON  DMOVE
 0112            SWITCH
 0113                   TENDPTCH
 0114                   +4
 0115                   TENDPTCH        IF IT IS, SET TMONITOR TO MAX AND REMOVE
 0116                   MONITFLG          MONIT FLAG
 0117  2         STORE  TMONITOR
 0118            DMOVE  2               DO SIGN AGREE AND RESCALE TO 2(+14) CS
 0119            RTB    TSLT
 0120            RTB    TSLT
 0121                   TMONITOR
 0122                   SGNAGREE
 0123                   14D
 01231                  POLYENT1        SOLVE PITCH POLYNOMIAL
 01232                  4
 01233 2         STORE  20D             CHI SCALED AT 1 REV.
 0124            SIN    0
 0126  2                20D
 01265           DMOVE  0
 0127  2                DPZERO
 0128            COS    1
 0129            VDEF
 0130                   20D
 0131  2         STORE  22D             UNIT VECTOR ALONG VEHICLE ROLL AXIS
 0132            NOLOD  0
 0133  2         STORE  XSCD
 0134            DMOVE  0
 0135                   XSCD +4
 0136  2         STORE  22D             FORM VECTOR (XSCD +4, 0, -XSCD) AT 22D
 0138            COMP   0
 0139                   XSCD
 0140  2         STORE  26D
 0141   ROLLER   RTB    4               FORM DESIRED ROLL EXCURSION
 01415           DSU    DDV
 0142            DSU    BMN
 0143            LODON  DMOVE
 0144            RTB
 01445                  LOADTIME
 0145                   TROLL
 0146                   1/RLLRTE
 0147                   MAXROLL
 0148                   +3
 0149                   DPZERO          IF EXCEEDS MAX VALUE, SET ROLL ATTITUDE
 0150  2                FRESHPD           TO ZERO
 0151            NOLOD  0
 0152  2         STORE  20D             ROLL ANGLE SCALED AT 1 REV.
 0153            NOLOD  1
 0154            SIN
 0155  2         STORE  18D
 0156            NOLOD  1
 01565           TSLT   VXSC
 0157                   1
 0158                   22D
 0159  2         STORE  YSCD
 0160            COS    1
 0161            COMP
 0162                   20D
 0163  2         STORE  YSCD +2
 0164            NOLOD  2
 0165            COMP   VXSC
 0166            VSLT
 0167                   22D
 0168                   1
 0169  2         STORE  ZSCD
 0170            DMOVE  0
 0171                   18D
 0172  2         STORE  ZSCD +2
 0173            ITC    0               RESOLVE INTO NB COORDS.
 0174  2                CALCSCNB
 0175            ITC    0               EXTRACT EULER ANGLES FROM XNB MATRIX
 0176  2                CALCCDU
 0177            NOLOD  0               STORE THE ANGLES
 0178  2         STORE  THETAD
 0178022         EXIT   0
 017804          CAF    BIT6            TEST IF MONIT FLAG SET
 017806          MASK   FLAGWRD1
 017808          CCS    A
 01781 2         TC     MONITJOB        IT IS. RECYCLE MONITJOB
 017812          INHINT                 CALL TUMBLE MONITOR IN TTUMON SECS
 017814          CS     TTUMON
 017816          COM
 017826          TC     WAITLIST
 0178282         CADR   TUMBTSK1
 017829          CS     TIME1
 01783 2         TS     TBASE3
 017831          CAF    TWO
 017832          TC     NEWPHASE
 0178342         OCT    00003
 0178364         TC     ENDOFJOB
 017838 POLYENT1 CAF    TWELVE          RTB HERE PRIOR TO ENTERING ERASABLE FOR
 01784           TS     POLYORDR          POLYNOMIAL
 0178422         TC     POLYENTR
 0179   TUMBTSK1 CAF    TWENTY7
 01791           TC     NEWPHASE
 01792 2         OCT    3
 01793           CAF    PRIO22
 0180            TC     FINDVAC
 0181  2         CADR   TUMBJOB1
 0182  4         TC     RESET1
 0183   TUMBJOB1 TC     BANKCALL        SWITCH IMUCDU MODE TO FINE ALIGN
 0184  2         CADR   IMUFINNW
 0185            TC     BANKCALL        WAIT FOR COMPLETION OF MODE SWITCH
 0186            CADR   IMUSTALL
 0187  2         TC     CURTAINS
 0188            TC     NEWMODE         SET MAJOR MODE TO TUMBLE MONITOR
 0189  2         OCT    00014
 01891 2         TC     INTPRET         ...NO 01407 ALARMS, PLEASE....
 01892           AXT,1  1
 01893           ITC
 01894                  6
 01895 2                CDUTRIG
 01896           VMOVE  0
 01897                  CDUTEMP
 01898 2         STORE  DUPCDU
 01899 2         EXIT   0
 0190  2         TC     ENDOFJOB
 0191   TUMBTASK CAF    PRIO22
 0192            TC     FINDVAC
 0193  2         CADR   TUMBJOB
 0194            CAF    BIT1            TEST IF TUMBLE FLAG SET
 0195            MASK   FLAGWRD1
 0196            CCS    A
 0197  2         TC     RESET1          IT IS. CONTINUE TO MONITOR
 0198            CS     FLAGWRD2        TEST IF BURN IS TUMBLE ARREST (I.E. HAS
 0199            MASK   BIT1            CORRECTIVE ACTION STARTED)
 0200            CCS    A
 0201            TC     TUMTEST1        IT HAS NOT
 0202            CS     OUT1            IT HAS. TEST IF ENGINE ON YET. IF NOT,
 0203            MASK   BIT13           WAIT BEFORE TURNING IT OFF AGAIN
 0204            CCS    A
 0205  2         TC     RESET1
 0206            TC     POSTJUMP        LEAP TO CUT SPS ENGINE
 0207  2         CADR   ENGINOFF
 0208   TUMTEST1 CAF    NOTUMASK        TEST IF NEXT BURN HAS BEEN SET
 0209            MASK   FLAGWRD2
 0210            CCS    A
 0211  2         TC     TASK3OUT
 0212   RESET1   CAF    1SEC32          RECALL IN 1 SEC
 0213            TC     WAITLIST
 0214  2         CADR   TUMBTASK
 0215  2         TC     TASKOVER
 0216   TASK3OUT CS     ONE
 0217            TC     NEWPHASE
 0218  2         OCT    00003
 0219  2         TC     TASKOVER        IT HAS. KILL TUMBLE MONITOR
 0220  8NOTUMASK OCT    00016           (OR OF SPS1, ABRT, TABT)
 02205 2         BANK   24
 0221   TUMBJOB  CAF    NOTUMSK1        SKIP THIS JOB IF NEXT BURN HAS BEEN SET
 0222            MASK   FLAGWRD2
 0223            CCS    A
 0224  2         TC     ENDOFJOB
 0227  2         TC     INTPRET
 0228            VMOVE  0               SAVE PRESENT CDUX,Y,Z
 0229                   DUPCDU
 0230  2         STORE  CDUBUF
 0231            AXT,1  1               FORM DP CDUX,Y,Z
 0232            ITC
 0233                   6
 0234  2                CDUTRIG
 0235            VMOVE  0               SAVE DUPLICATE CDUX,Y,Z
 0236                   CDUTEMP         SCALED AT 1 REV
 0237  2         STORE  DUPCDU
 0238            NOLOD  1
 0239            VSU    AXT,1
 0240                   CDUBUF
 0241                   6
 0242  2         STORE  CDUTEMP
 0243            ITC    0               COMPUTE SIN OF CDUX,Y,Z
 0244  2                SINCOS          DIFFERENCES AND PUT IN SINCDU,+2,+4
 0245            ABVAL  2
 0246            DSU    BMN
 0247            EXIT
 0248                   SINCDU
 0249                   CRIT
 0250  2                NOTUMBLE
 0251            TC     FLAG1UP         SET TUMB FLAG
 0252  2         OCT    00001
 0253  2         TC     ENDOFJOB
 0254   NOTUMBLE EXIT   0
 0255            TC     FLAG1DWN        REMOVE TUMBLE FLAG
 0256  2         OCT    00001
 0257  2         TC     ENDOFJOB
 02575  NOTUMSK1 OCT    16
 0258  8CRIT     2DEC   0.010905        SIN(5DEG/2) SCALED AT 2(+2)
 02585 4         BANK   32
 0259   S4BSMSEP CS     TIME1           BRANCH HERE ON RECEIPT OF S4B/CSM SEP
 0260  2         TS     TBASE4
 02604           TC     FLAG1DWN        RESET UPDAT FLAG
 02606 2         OCT    20000
 0261            TC     RELAYON         SET SCS +X TRANS, ATTITUDE CONTROL MODE,
 0262  2         OCT    40221           GIMBAL MOT POWER DISCRETES (C27,23,30)
 0263            CAF    BIT1            TEST IF TUMB FLAG SET
 0264            MASK   FLAGWRD1
 0265            CCS    A
 0266  2         TC     SETUMB2
 0267            TC     FLAG1UP         SET INTP FLAG
 0268  2INTPMASK OCT    01000
 0269            TC     PHASCHNG
 0270  2         OCT    01404
 0271            INHINT
 0272            CAF    1.7SEC          WAIT 1.7 SECS FOR RECEIPT OF ABORT SIG.
 0273            TC     WAITLIST
 0274  2         CADR   ABRTWAIT
 02741  TRYGRAB  TC     GRABDSP         TRY TO GRAB DISPLAY
 02742 2         TC     CLEANOUT        ALREADY GRABBED. FLUSH OUT GRABBER
 02743 2         TC     FREEDSP         WE HAVE IT. AND LET IT GO
 0275   SETS4SEP TC     FLAG1UP         SET S4BSM FLAG
 0276  2         OCT    00200
 0277  2         TC     ENDOFJOB
 02771  CLEANOUT INHINT
 02772           CAF    PRIO35          MAKE HIGH PRIO JOB TO FLUSH OUT PINBALL
 02773           TC     NOVAC
 02774           CADR   ENEMA
 02775 2         RELINT
 02776 2         TC     SETS4SEP
 0278   ABRTWAIT CAF    PRIO25          CONTINUE WITH SAME PRIORITY AS S4BSMSEP
 0279            TC     NOVAC
 0280            CADR   ABORTEST
 0281  2         TC     TASKOVER
 0282   ABORTEST CAF    ONE             SET VGCNTR FOR 2 PASSES THRU CALCVGB
 0283  2         TS     VGCNTR
 02832           TC     FLAG1DWN        RESET UPDAT FLAG
 02834 2         OCT    20000
 0284            CAF    BIT14           TEST IF ABORT SIGNAL RECEIVED
 0285            MASK   STATE
 0286            CCS    A
 0287  2         TC     SETABORT        IT WAS. BRANCH TO ABORT
 0288            INHINT
 0289            CAF    8.3SEC          SET CALL TO TURN OFF +X 10 SEC AFTER SEP
 0290            TC     WAITLIST
 0291            CADR   PLUSXOFF
 0292  2         RELINT
 0293            TC     SETBRNSW        SET BURN TO SPS1
 0294  2SPS1MASK OCT    00010
 029402          CAF    SPS1LOC         SET LOCATION FOR NOMINAL SPS1 VR COMP
 0294042         TS     VRCADR
 02942           TC     PHASCHNG
 02944 2         OCT    02504
 0299   REDO4.21 TC     NEWMODE         SET MAJOR MODE TO PRE-SPS1
 0300  2         OCT    00031
 0303  2         TC     JAMTERM         FLUSH V75 S4BSMSEP BACKUP.
 0304  2SPS1LOC  CADR   501SPS1
 03042  SETABORT TC     SETBRNSW        SET BURN TO ABORT
 03044 2         OCT    00002
 0305            TC     PHASCHNG
 0306  2         OCT    02004
 0307            INHINT
 0308            CAF    3.8SEC          START ENGINE IN 4.3 SECS
 0309            TC     WAITLIST
 0310            CADR   ATTCNOFF
 0311  2         RELINT
 0312   REDO4.16 TC     BANKCALL        SET IMU TO ATT. CONTROL MODE
 0313  2         CADR   IMUATTC
 0314  2         TC     SETHETAD        SET THETAD,+1,+2 TO AGREE WITH CDUX,Y,Z
 0315            CAF    ABORTLOC        SET LOCATION FOR ABORT VR COMPUTATIONS
 0316  2         TS     VRCADR
 0317            CAF    TWO             SET VGCNTR FOR THREE PASSES THROUGH
 0318  2         TS     VGCNTR          CALCVGB BEFORE ISSUING STEER COMMANDS
 0319            CAF    35DEG           SET THRUST ANGLE TO 35 DEG ABOVE HORIZON
 0320  2         TS     LOOKANG
 0321            TC     FLAG1UP         SET STEER FLAG FOR ABORT STEERING
 0322  2         OCT    00010
 0323            TC     NEWMODE         SET MAJOR MODE TO ABORT BURN
 0324  2         OCT    00073
 0325            TC     BANKCALL        WAIT FOR MODE SWITCH TO COMPLETE
 0326            CADR   IMUSTALL
 0327  2         TC     CURTAINS        CATCH-ALL FOR FAILURE TO IMU MODE SWITCH
 0328  2         TC     JAMTERM         FLUSH OUT V75
 0329  2ABORTLOC CADR   501ABORT
 0330   SETUMB2  TC     SETBRNSW        SET BURN TO TUMBLE ARREST
 0331  2ARRSTMSK OCT    00001
 0332            CAF    FIFTN
 0333            TC     NEWPHASE
 0334  2         OCT    4
 0335            INHINT
 0336            CAF    2.5SEC          START ENGINE AT 3.0 SECS AFTER SEP.
 0337            TC     WAITLIST        SEPARATION
 0338            CADR   ATTCNOFF
 0339  2         RELINT
 0340            TC     NEWMODE         SET MAJOR MODE TO TUMBLE ARREST BURN
 0341  2         OCT    00074
 0342  2         TC     TRYGRAB
 0347   ABORTRPT TC     STATEUP         COME HERE ON RECEIPT OF UPLINK ABORT
 0348  2         OCT    20000             VERB,NOUN. SET THE ABORT SIGNAL
 0349            TC     RELAYON         SET SCS BACKUP ABORT DISCRETE (C33)
 0350  2         OCT    42000
 0351  2         TC     ENDOFJOB
 0352   8.3SEC   DEC    830
 0353   1.7SEC   DEC    170
 0354   93.8SEC  DEC    9380
 03545  10.5SEC  DEC    1050
 0355  83.8SEC   DEC    380
 0360   GIMPOWON TC     RELAYON         SET SCS GMP DISCRETE (C30)
 0361  2         OCT    40200
 0362            CAF    TWENTY4
 0363            TC     NEWPHASE
 0364  2         OCT    00004
 03643           CS     TIME1
 03646 2         TS     TBASE4
 0365            CAF    TWENTY5
 0366            TC     NEWPHASE
 0367  2         OCT    00004
 0368            CAF    11.5SEC
 0369            TC     WAITLIST
 0370  2         CADR   ATTCNOFF
 0371  2         TC     TASKOVER
 0372   ATTCNOFF CAF    EIGHTN
 0373            TC     NEWPHASE
 0374  2         OCT    00004
 0375            CS     TIME1
 0376  2         TS     TBASE4
 03763           TC     RELAYOFF        REMOVE SCS ATT. CONTROL DISCRETE (C23)
 03766 2         OCT    40001
 0377            CAF    NINETEEN
 0378            TC     NEWPHASE
 0379  2         OCT    00004
 0382            CAF    0.25SEC
 0383            TC     WAITLIST
 0384  2         CADR   DVMODEON
 0385  2         TC     TASKOVER
 0390   DVMODEON TC     RELAYON         SET SCS DV MODE DISCRETE (C24)
 0391  2         OCT    40002
 0392            CAF    TWENTY0
 0393            TC     NEWPHASE
 0394  2         OCT    00004
 0395            CAF    0.25SEC
 0396            TC     WAITLIST
 0397  2         CADR   ENGINEON
 0398  2         TC     TASKOVER
 0399   TASK4OUT CS     ONE
 0400            TC     NEWPHASE
 0401  2         OCT    00004
 0402  2         TC     TASKOVER
 0407   ENGINEON CS     BIT13           SET BIT13, OUT1 TO 1  (ENGINE ON)
 0408            TS     DVCNTR          MUST BE NEGATIVE INITIALLY
 0409            MASK   OUT1
 0410            AD     BIT13
 0411  2         TS     OUT1
 0412            TC     READTIME +1
 0413            CS     RUPTSTOR
 0414            TS     TENGON
 0415            CS     RUPTSTOR +1
 0416  2         TS     TENGON +1
 0417            TC     FLAG1UP         SET DVMON, STEER FLAGS
 0418  2         OCT    00030
 0419            CAF    TWENTY4         SEE IF THIS EITHER A SPS1 OR SPS2 BURN
 0420            MASK   FLAGWRD2
 0421            CCS    A
 04215           TC     +2              YES
 0422  2         TC     TUMTEST2        NO
 04281           CCS    PHASE2          TEST FOR PHASE2 VALUE.
 04282           AD     NEG3            WAS IT GREATER THAN 4 ORIGINALLY...
 04283           CCS    A               TEST NEW SUM.
 0429            TC     ROLLTASK -3
 04291           TC     ROLLTASK -3     GOES UNLESS PHASE2 WERE +1,2,3, OR 4.
 04292 2         TC     +1              1,2 OR 3 FALL IN HERE
 04293           CS     ONE             +4 COMES HERE.
 04294           TC     NEWPHASE        IN WHICH CASES, WE MAKE GROUP 2 INACTIVE
 04295 2         OCT    2
 04296           CAF    PRIO35          AND THEN FLUSH OUT EVERYTHING.
 04297           TC     NOVAC
 04298 2         CADR   ENEMA           FORCE A PROGRAMMED RESTART
 04299 4         TC     ROLLTASK -3
 0430   3OR4TEST CAF    SPS34MSK
 0431            MASK   FLAGWRD2
 0432            CCS    A
 0433            TC     +2
 0434  2         TC     TUMTEST2        IT IS NOT
 0435            CAF    TWENTY3
 0436            TC     NEWPHASE
 0437  2         OCT    00004
 0438            CAF    3SEC            SHUT ENGINE DOWN IN 3 SECS
 0439            TC     WAITLIST
 0440  2         CADR   ENGINOFF
 0441   STEEROFF TC     FLAG1DWN
 0442  2STEERMSK OCT    00010
 0443  2         TC     TASKOVER
 0444   TUMTEST2 CAF    ARRSTMSK        TEST IF BURN IS TUMBLE ARREST
 0445            MASK   FLAGWRD2
 0446            CCS    A
 0447  2         TC     STR4OUT
 0448            CAF    TWENTY2
 0449            TC     NEWPHASE
 0450  2         OCT    4
 0451   ROLLTASK CS     FLAGWRD1        TEST IF STEER FLAG SET
 0452            MASK   STEERMSK
 0453            CCS    A
 0454  2         TC     TASKOVER        IT IS NOT. KILL ROLLTASK
 0455            CAF    PRIO10          SUBMIT JOB TO DO ROLL STEERING
 0456            TC     FINDVAC
 0457  2         CADR   ROLLJOB
 0458   REDO4.22 CAF    5SEC32          RECALL ROLLTASK IN 5 SECS
 0459            TC     WAITLIST
 0460  2         CADR   ROLLTASK
 0461  2         TC     TASKOVER
 0462   STR4OUT  TC     FLAG1DWN
 0463  2         OCT    00010
 0464  2         TC     TASK4OUT
 0465   PLUSXOFF TC     RELAYOFF        REMOVE SCS +X TRANS DISCRETE (C27)
 0466  2         OCT    40020
 04662           TC     FLAG1UP         SET INITFLAG TO ENABLE MANEUVER TO SPS1
 04664 2         OCT    00400             BURN ATTITUDE
 04665           CAF    89.5SEC         START ENGINE IN 90 SECS
 04666           TC     WAITLIST
 04667 2         CADR   ATTCNOFF
 04668           CAF    THIRTEEN
 04669           TC     NEWPHASE
 0466952         OCT    00004
 0467  2         TC     TASKOVER
 0468   0.25SEC  DEC    25
 0469   1SEC32   DEC    100
 0471   2.5SEC   DEC    250
 0472   3SEC     DEC    300
 0473   3.5SEC   DEC    350
 0474   5SEC32   DEC    500
 0475   6SEC     DEC    600
 0476   15SEC    DEC    1500
 04765  89.5SEC  DEC    8950
 0477   SHTDNMSK EQUALS BIT12
 0478  8SPS34MSK OCT    00140
 0479   ENGINOFF CS     BIT13           SET ENGINE OFF
 0480            MASK   OUT1
 0481  2         TS     OUT1
 0482            TC     READTIME +1     SAVE TIME OF CUTOFF
 0483            CS     RUPTSTOR
 0484            TS     TCUTOFF
 0485            CS     RUPTSTOR +1
 0486  2         TS     TCUTOFF +1
 0487            TC     FLAG1DWN        DISABLE DV MONITOR
 0488  2         OCT    00020
 04881           CS     PIPAX           SAVE DELTAV AT ENGINE OFF TIME.
 04882           TS     VAVEGON
 04883           CS     PIPAY
 04884           TS     VAVEGON + 1     USE VAVEGON AREA FOR THIS.
 04885           CS     PIPAZ
 04886 2         TS     VAVEGON + 2
 04887           TC     RELAYOFF        REMOVE SCS +X TRANS DISCRETE (C27)
 04888 2         OCT    40020
 0489            CS     FLAGWRD2        TEST IF THAT WAS A TUMBLE BURN
 0490            MASK   ARRSTMSK
 0491            CCS    A
 0492  2         TC     SPS1TEST
 0493            CAF    ONE
 0494  2         TS     VGCNTR
 0495            TC     FLAG1UP         SET INTP,INIT FLAGS
 0496  2         OCT    01400
 04961           CAF    BIT14           TEST IF ABORT SIGNAL RECEIVED
 04962           MASK   STATE
 04963           CCS    A
 04964 2         TC     VRCAD           IT WAS, JUMP TO DO TUMBLE ABORT BURN
 049643          CAF    93.8SEC         START ENGINE IN 94.3 SECS
 049644          TC     WAITLIST
 0496452         CADR   ATTCNOFF
 049646          CAF    SPS1LOC         SET LOCATION FOR NOMINAL SPS1 VR COMP
 0496472         TS     VRCADR
 04965           CAF    PRIO25          ESTABLISH MORE PRE-SPS1 BURN LOGIC
 04966           TC     NOVAC
 04967 2         CADR   REDO4.21
 049672          CAF    THIRTEEN
 049674          TC     NEWPHASE
 0496762         OCT    4
 049677 REDO4.13 TC     SETBRNSW        SET BURN TO SPS1
 0496782         OCT    00010
 04968 2         TC     TASK3OUT
 0497   VRCAD    CAF    ABORTLOC        SET LOCATION TO ABORT VR COMPUTATION
 0498  2         TS     VRCADR
 0502            CAF    THREE
 0503            TC     NEWPHASE
 0504  2         OCT    00003
 0505   REDO3.3  TC     SETBRNSW        SET BURN TO ABORT AFTER TUMBLE
 0506  2TABTMASK OCT    00004
 0507  2         TC     TASKOVER
 0508   SPS1TEST CAF    TWENTY8
 05081           TC     NEWPHASE
 05082 2         OCT    4
 05083           CS     TCUTOFF +1
 0509            TS     TBASE3
 0510  2         TS     TBASE4
 0511            CS     FLAGWRD2        TEST IF THAT WAS A SPS1 BURN
 0512            MASK   SPS1MASK
 0513            CCS    A
 0514  2         TC     SETMOD23
 0515            CAF    10.5SEC         CALL COAST PHASE IN 10.5 SECS
 0516            TC     WAITLIST
 0517  2         CADR   COASTPHS
 0518            CAF    7SEC            DUPLICATE GMPOFF SEQUENCE BEFORE SETTING
 0519            TC     WAITLIST        BURN SWITCH.  (FOR RESTART LOGIC.)
 0520  2         CADR   GIMPOWOF
 0521            CAF    FOUR            3.4 RESTART KEEPS POWER OFF SEQ. GOING.
 0522            TC     NEWPHASE
 0523  2         OCT    3
 0524            CAF    THREE
 0525            TC     NEWPHASE
 0526  2         OCT    00004
 0527   REDO4.3  TC     SETBRNSW        SET BURN TO SPS2
 0528  2SPS2MASK OCT    00020
 0529  2         TC     TASKOVER
 0530   SPS2TEST CS     FLAGWRD2        TEST IF THAT WAS A SPS2 BURN
 0531            MASK   SPS2MASK
 0532            CCS    A
 0533  2         TC     SPS3TEST
 0534            CAF    0.75SEC
 0535            TC     WAITLIST
 0536  2         CADR   CGTASK
 0537            CAF    6SEC            CALL FOR GMP ON IN 6 SECS
 0538            TC     WAITLIST
 0539  2         CADR   GIMPOWON
 0540            CAF    SEVEN
 0541            TC     NEWPHASE
 0542  2         OCT    00003
 0543            CAF    TEN
 0544            TC     NEWPHASE
 0545  2         OCT    00004
 0546   REDO4.10 TC     SETBRNSW        SET BURN TO SPS3
 0547  2SPS3MASK OCT    00040
 0548  2         TC     TASKOVER
 0549   SPS3TEST CS     FLAGWRD2        TEST IF THAT WAS A SPS3 BURN
 0550            MASK   SPS3MASK
 0551            CCS    A
 0552  2         TC     SETMOD23        IT WAS NOT. (EITHER A, TABT, OR SPS4)
 0556            CAF    FOURTN
 0557            TC     NEWPHASE
 0558  2         OCT    00004
 0559   GMPON    CAF    6SEC            CALL FOR ENGINE ON IN 10 SECS
 0560            TC     WAITLIST
 0561  2         CADR   GIMPOWON
 05612  REDO4.14 CAF    PRIO7
 05614           TC     NOVAC
 05616 2         CADR   MODE44
 0562            TC     SETBRNSW        SET BURN TO SPS4
 0563  2SPS4MASK OCT    00100
 0564  2         TC     TASKOVER
 0565   SETMOD23 CAF    PRIO7           MAKE JOB TO CHANGE MODE
 0566            TC     NOVAC
 0567  2         CADR   MODE23
 0568            CAF    NINE
 0569            TC     NEWPHASE
 0570  2         OCT    00003
 0571            CS     ONE
 0572            TC     NEWPHASE
 0573  2         OCT    00004
 0576   GMPOFF   CAF    7SEC
 0577            TC     WAITLIST
 0578  2         CADR   GIMPOWOF
 0579            CAF    FOUR
 0580            TC     NEWPHASE
 0581  2         OCT    00003
 0582  2         TC     TASKOVER
 0583   GIMPOWOF CAF    3.5SEC          CALL FOR DV MODE OFF IN 3.5 SECS
 0584            TC     WAITLIST
 0585  2         CADR   DVMODOFF
 0586            TC     RELAYOFF
 0587  2         OCT    40200
 0588            CAF    FIVE
 0589            TC     NEWPHASE
 0590  2         OCT    00003
 0591  2         TC     TASKOVER
 0592   GMPOFF3  TC     RELAYOFF        REMOVE SCS GMP DISCRETE (C30)
 0593  2         OCT    40200
 0594  2         TC     TASK3OUT
 0595   DVMODOFF TC     RELAYOFF        REMOVE SCS DV MODE DISCRETE (C24)
 0596  2         OCT    40002
 0597            CAF    SIX
 0598            TC     NEWPHASE
 0599  2         OCT    00003
 0600            CAF    0.25SEC
 0601            TC     WAITLIST
 0602  2         CADR   ATTCONON
 0603  2         TC     TASKOVER
 0604   ATTCONON TC     RELAYON         SET SCS ATT. CONT. DISCRETE (C23)
 0605  2         OCT    40001
 0606  2         TC     TASK3OUT
 0607   MODE23   TC     NEWMODE         SET MAJOR MODE TO ATTITUDE HOLD
 0608            OCT    00023
 0609  2         TC     ENDOFJOB
 0610   MODE44   TC     NEWMODE         SET MAJOR MODE TO SPS4
 0611            OCT    00044
 0612  4         TC     ENDOFJOB
 061202 0.75SEC  DEC    75
 061204 1SEC     DEC    100
 061206 7SEC     DEC    700
 061208811.5SEC  DEC    1150
 06125 2         BANK   24
 0613   COASTPHS TC     FLAG1UP         GET SET TO START COAST PHASE ACTIVITY
 0614  2COASTMSK OCT    40000           SET COAST FLAG
 0615            CAF    289.5SEC +1     SET UP LONGCALL TO FDAONTSK IN 289.5 SEC
 0616            TS     LONGTIME +1
 0617            CAF    289.5SEC
 0618  2         TS     LONGTIME
 0619            CAF    FDAILOC
 0620  2         TS     CALLCADR
 0621            TC     IBNKCALL        MAKE WAITLIST CALL MORE THAN 120 SECS
 0622  2         CADR   LONGCALL
 0623            CAF    PRIO12          ESTABLISH INITIAL VERTICAL JOB
 0624            TC     FINDVAC
 0625  2         CADR   SOAKINIT
 0626            CAF    TWO
 0627            TC     NEWPHASE
 0628  2         OCT    00002
 0629            CAF    FOUR
 0630            TC     NEWPHASE
 0631  2         OCT    00004
 0632  2         TC     TASKOVER
 0633   FDAILOC  CADR   FDAONTSK
 0634  4289.5SEC 2DEC   28950
 0635   FDAONTSK TC     RELAYON         SET SCS FDAI ALIGN DISCRETE (C31)
 0636  2         OCT    40400
 0637            CAF    10SEC
 0638            TC     WAITLIST
 0639  2         CADR   FDAOFTSK        CALL FDAI OFF IN 10 SECS
 0640            CAF    FIVE
 0641            TC     NEWPHASE
 0642  2         OCT    00004
 0643  2         TC     TASKOVER
 0644   FDAOFTSK CAF    -310SEC +1
 0645            AD     TCOAST +1
 0646  2         TS     LONGTIME +1
 0647            CAF    ZERO
 0648            AD     -310SEC
 0649            AD     TCOAST
 0650  2         TS     LONGTIME
 0651            CAF    UPTSKLOC
 0652  2         TS     CALLCADR
 0653            TC     IBNKCALL
 0654  2         CADR   LONGCALL
 06541           CAF    SIX
 06542           TC     NEWPHASE
 06543 2         OCT    4
 0655   FDOFTSK1 TC     RELAYOFF        REMOVE SCS FDAI ALIGN DISCRETE (C31).
 0656  2         OCT    40400
 0660  2         TC     TASKOVER
 0661   10SEC    DEC    1000
 06615  -310SEC  2DEC   -31000
 0662  4UPTSKLOC CADR   UPTASK
 07055 2         BANK   14
 0706   CGTASK   CAF    PRIO21          ESTABLISH CGJOB TO REMOVE ANGULAR CG
 0707            TC     FINDVAC         MOTION DEVELOPED DURING SPS2 BURN
 0708  2         CADR   CGJOB
 0709            CAF    1.25S14
 0710            TC     WAITLIST
 0711  2         CADR   GMPOFF3
 0712            CAF    EIGHT
 0713            TC     NEWPHASE
 0714  2         OCT    3
 0715  2         TC     TASKOVER
 0716   CGJOB    TC     NEWMODE         SET MAJOR MODE TO SPS3 BURN
 0717  2         OCT    00043
 0718  2         TC     INTPRET
 0719            VMOVE  1               GET NOMINAL SPS2 CG CHANGE ABOUT IMU
 0720            RTB    EXIT            GIMBAL AXES INTO VAC, SCALED AT KE/2 REV
 0721                   DELCDU          (KE =1.5), AND DECREMENT THETAD, +1, +2
 0722  2                INCRCDUS
 0723  2         TC     ENDOFJOB
 07233 21.25S14  DEC    125
 07235 8         BANK   32
 0724   READACCS CAF    PIPCADR         BRANCH TO PIPA READ ROUTINE
 0725  2         TC     ISWCALL
 0726            CAF    TWO
 0727            TC     NEWPHASE
 0728  2         OCT    00005
 0729   REDO5.2  CS     PIPTIME +1
 0730  2         TS     TBASE5
 0731            CAF    TWO
 0732  2         TS     PIPAGE
 0733            CAF    ENTRYMSK        TEST IF ENTRY FLAG SET
 0734            MASK   FLAGWRD1
 0735            CCS    A
 0736  2         TC     SETUPENT
 0737            CS     FLAGWRD1        TEST IF COAST FLAG SET
 0738            MASK   CSTMASK
 0739            CCS    A
 0740            TC     CCSHOLE
 0741  2         TC     SETUPSOK        IT IS. DO NOT RESET READACCS
 0742            CAF    ABORT32         TEST IF ABORT BURN IS SET. IF SO, NEED
 0743            MASK   FLAGWRD2        2.5SECS COMPUTING INTERVAL
 0744  2         CCS    A
 0745  2         TC     CHANGEDT        IT IS
 0746            CAF    2SEC            IT IS NOT. CALL READACCS IN 2 SECS
 0747            TC     WAITLIST
 0748  2         CADR   READACCS
 0749   MAKESERV CAF    PRIO16          ESTABLISH SERVICER ROUTINE
 0750            TC     FINDVAC
 0751  2         CADR   SERVICER
 07511           CAF    THREE
 07512           TC     NEWPHASE
 07513 2         OCT    5
 0752  2         TC     TASKOVER
 0753   SETUPENT CAF    2SEC            CALL ENTRY ROUTINES IN 2 SECS
 0754            TC     WAITLIST
 0755  2         CADR   PIPUP
 0756  2         TC     MAKESERV
 0757   SETUPSOK CAF    2SEC            CALL SOAKTASK IN 2 SECS
 0758            TC     WAITLIST
 0759  2         CADR   SOAKTASK
 0760  2         TC     MAKESERV
 0761   CHANGEDT CAF    BIT1            FORCE SERVICER TO SET DELTAT TO 2.5 SECS
 0762  2         TS     DELTAT +1
 0763            CAF    2.5SEC32        CALL READACCS IN 2.5 SECS
 0764  2         TC     MAKESERV -2
 0765   REREADAC CAF    ABORT32         READACCS RESTART LOCATION
 0766            MASK   FLAGWRD2
 0767            CCS    A
 0768  2         TC     SET2.5S
 0769   CAFREPIP CAF    REPIPCAD
 0770  2         TC     READACCS +1
 0771   SET2.5S  CS     2.5SEC32
 0772            AD     TBASE5
 0773            AD     TIME1
 0774  2         XCH    RUPTSTOR
 0775            CCS    RUPTSTOR
 0776            TC     CAFREPIP
 0777            TC     CAFREPIP
 0778            CAF    2.5SEC32
 0779  2         AD     RUPTSTOR
 0780            AD     POSMAX
 07801           TS     A
 07802 2         TC     CAFREPIP
 07803           CS     RUPTSTOR
 0781            TC     WAITLIST
 0782  2         CADR   CAFREPIP
 0783  2         TC     TASKOVER
 0784   PIPCADR  CADR   PIPASR
 0785   REPIPCAD CADR   REPIPASR
 0786   CHDTMASK EQUALS BIT11
 0787   ENTRYMSK EQUALS BIT3
 0788   READMASK EQUALS BIT11
 07885  CSTMASK  OCT    40000
 0789   ABORT32  OCT    6
 0790   2.5SEC32 DEC    250
 0791  84SEC     DEC    400
 0794   SERVICER TC     BANKCALL        COMPENSATE THE PIPA DATA IN THE DELV
 0795  2         CADR   1/PIPA          REGISTERS.
 079502          CS     STATE           TEST IF PIPAS BIAS IS TO BE DISREGARDED
 079504          MASK   BIT12
 079506          CCS    A
 0795082         TC     REDO5.3         NO
 07951           TS     DELV            YES, CLEAR OUT DELV AS LONG AS BIAS FLAG
 079512          TS     DELV +1              IS SET.
 079514          TS     DELV +2
 079516          TS     DELV +3
 079518          TS     DELV +4
 07952 2         TS     DELV +5
 0796  2REDO5.3  TC     INTPRET
 07961           ITC    0               SEE IF TIME FOR STATE VECTOR UPDATE.
 07962 2                501UPCHK        (501 & 2 ONLY).
 0797   REGSTEP  ITC    0
 0798  2                CALCRVG
 07981  AVGRET   CAF    ELEVEN          ROUTINE CYCLES 12 TIMES TO SAVE OLD VR,
 07982  AGAIN    TS     MPAC              VN FOR RESTARTS
 07983           INDEX  MPAC
 07984           CS     VR
 07985           INDEX  MPAC
 07986           TS     VR1             (TEMPORARIES IN AMEMORY)
 07987           CCS    MPAC
 07988 2         TC     AGAIN
 079881          CS     VGCNTR          SAVE FOR RESTARTS
 079882          TS     VGCNT1
 079883          CS     DVCNTR
 0798842         TS     DVCNT1
 07989           TC     PHASCHNG
 0798952         OCT    02705
 0799  2RE5.23   TC     INTPRET
 0800            TEST   0               TEST IF ENTRY FLAG SET
 0801                   ENTRYFLG
 0802                   GETFF           IT IS NOT
 0803            DMOVE  0
 08035                  LAD
 0804  2         STORE  INITL/D
 08042           AXT,1  1
 08045           TEST   AXT,1
 08055                  0
 0806                   ABORTSIG
 08065                  PACIFIC
 0807                   8D
 0811   PACIFIC  COMP*  0
 0812                   TPACIFC,1
 0813  2         STORE  DTEAROT
 0814            VMOVE* 0
 0815                   RTPACIFC,1
 0816  2         STORE  RTINIT
 0817            ITC    0
 0818  2                EARROT1
 0819  2         EXIT   0
 0820            CAF    ZERO            RESET DELTAT +1 TO ZERO
 0821  2         TS     DELTAT +1
 0822            TC     POSTJUMP        GO TO ENTRY INITIALIZATION ROUTINE.
 0823  2         CADR   STARTENT
 08231  GETFF    ITC    0               COMPUTE TIME TO FREE-FALL TO RTERM
 08232 2                CALCTFF
 0824   COASTEST TEST   1               TEST IF COAST FLAG SET
 0825            VMOVE  VSRT
 0826                   COASTFLG
 0827                   TFFTEST
 0828                   RN              IT IS. TRANSFER RN,VN TO ORBITAL
 08281                  RSCALE -15D
 0829  2         STORE  RRECT           INTEGRATION ROUTINE
 0830            VMOVE  0
 0831                   VN
 0832  2         STORE  VRECT
 0832022         EXIT   0
 083204          CS     TFF             SEE IF TFF IS POSMAX (I.E.- WILL NOT
 083206          AD     POSMAX            INTERSECT 400,000 FT)
 0832082         CCS    A
 08321           TC     STATEUP         ALL O.K., SO SET TFF2 FLAG TO ENABLE
 083212          OCT    10000             (TFF - TFFMIN) CALCULATIONS FOR SPS2
 0832142         TC     NOMCASE           IGNITION SEQUENCE
 083216          CS     TFFNOM          WILL NOT INTERSECT 400,000 FT, SO SET
 083217          COM                      TFF TO NOMINAL VALUE TO COMPUTE
 0832182         TS     TFF               TAVEGON AND TCOAST FOR A SPS2 BURN
 08322           CS     TFFNOM +1
 083221          COM
 0832222         TS     TFF +1
 083224          TC     STATEDWN        RESET TFF2 FLAG SO THAT SPS2 IGNITION IS
 0832262         OCT    10000             SCHEDULED A FIXED TIME AFTER AVE G. ON
 0832282NOMCASE  TC     INTPRET
 0833            DSU    0               TIME TO TURN AVE G ON =TFF-23MIN.
 0834                   TFF
 0835                   23MIN
 0836  2         STORE  TAVEGON
 0837            NOLOD  2               TIME OF COAST = PIPTIME + (TFF-25MIN)
 0838            DSU    BMN             - TCUTOFF
 0839            DSU    DAD
 08391                  2MIN
 08392                  SPS2NOW         TAVEGON TOO SMALL-SCHEDULE SPS2 NOW
 08393                  TCUTOFF
 08394                  PIPTIME
 08395 2         STORE  TCOAST
 0840  2         EXIT   0
 0841            CS     PIPTIME +1      START UP FREE-FALL GYRO DRIFT COMP.
 0842            COM
 0843  2         TS     OLDBT1
 0844            TC     FLAG2UP         BEGINS WITH NEXT IDLETASK. SET DRIFTFLG
 0845  2         OCT    40000
 0846  2         TC     ENDOFJOB        SERVICER DIES HERE AT START OF COASTPHS.
 0846052SPS2NOW  EXIT   0
 08461           TC     FLAG1UP         SET INIT FLAG TO ENABLE MANEUVER TO
 0846152         OCT    00400             SPS2 BURN ATTITUDE
 08462           CAF    ONE
 0846252         TS     VGCNTR
 08463           TC     FLAG1DWN        REMOVE COAST FLAG TO CANCEL COLD SOAK
 0846352         OCT    40000
 08464           CS     ONE             LET ENEMA KILL COLD SOAK MANUEVER
 084645          TC     NEWPHASE
 08465 2         OCT    00002
 084655          CS     ONE             LET ENEMA KILL CALL FOR FDAONTSK
 08466           TC     NEWPHASE
 0846652         OCT    00004
 08467           CAF    PRIO15          DO AN EMEMA AFTER THIS JOB
 084675          TC     NOVAC
 08468 2         CADR   ENEMA           RESTART READACCS AND WAIT FOR TFFMIN
 0846852         TC     INTPRET
 0847   TFFTEST  TEST   1               TEST IF TFFMIN SHOULD BE CHECKED.
 084702          DSU    BPL             TFF2 FLAG SET AT SPS1 CUTOFF
 084704                 TFF2FLAG
 084706                 TFFTEST1
 084708                 TFF
 08471                  TFFMIN
 084712                 TFFTEST1
 0847142         EXIT   0
 084716 TESTTFF  INHINT
 084718          CAF    90SEC32
 08472           TC     WAITLIST
 0847222         CADR   PLUSX2
 084724          CCS    S2SWITCH        SEE IF 2ND BURN ATTITUDE TO BE COMPUTED
 084726          TC     SET32           NO
 084728          TC     SET32
 08473           TC     +1
 084812          TC     FLAG1UP         SET INIT FLAG TO RE:MANEUVER TO SPS2
 0848132         OCT    00400             BURN ATTITUDE
 084814          CAF    ONE
 0848152         TS     VGCNTR
 084816 SET32    TC     NEWMODE         SET MAJOR MODE TO PRE-SPS2
 0848172         OCT    00032
 084818          TC     SETBRNSW        SET BURN TO SPS2 BACK UP SETTING
 0848192         OCT    00020
 08482           CS     TIME1
 0848222         TS     TBASE4
 084825          CAF    THIRTY
 084826          TC     NEWPHASE
 08483 2         OCT    00004
 084835          TC     STATEDWN        REMOVE TFF2FLAG
 08484 2         OCT    10000
 0848452         TC     INTPRET
 0849   TFFTEST1 TEST   2               TEST IF INTP FLAG SET
 0850            ABS    DSU
 0851            BMN    TEST
 0852                   INTPFLAG
 0853                   INITEST         IT IS NOT. CONTINUE AT INITEST
 0854                   TFF             TEST IF TFF LESS THAN 95 SECS
 0855                   DP95SEC
 0856                   SHUTDWN1        IT IS. PREPARE TO FREE-FALL RE-ENTER
 0857                   INT1FLAG        TEST IF FIRST INTERUPT FLAG SET
 0858  2                +3              IT IS NOT
 0859            EXIT   0               IT IS. WAIT FOR 95 SEC INTERUPT
 0860  2         TC     ENDSER32
 0861            NOLOD  1               TEST IF TFF LESS THAN 200 SECS
 0862            DSU    BPL
 0863                   DP105SEC
 0864  2                INITEST         IT IS NOT. CONTINUE
 0865            EXIT   0
 0866            TC     BANKCALL        IT IS. BRANCH TO SHUTDOWN ROUTINES
 0867  2         CADR   SHUTDOWN
 0868            TC     FLAG1UP
 0869  2         OCT    00100
 0870  2         TC     SHTFLGUP
 0871   SHUTDWN1 EXIT   0
 0872            TC     BANKCALL
 0873  2         CADR   SHUTDOWN
 0874            TC     FLAG1DWN        REMOVE INTP FLAG (DISABLE TFF DECISIONS)
 0875  2         OCT    01000
 0876   SHTFLGUP TC     FLAG1UP         SET SHTDN FLAG
 0877  2         OCT    04000
 0878  4         TC     ENDSER32
 08781  REDO5.23 CAF    ELEVEN          RE-ESTABLISH VR, DIFFVECT IN CASE OF
 08782           TS     MPAC            5.23 RESTART
 08783           INDEX  MPAC
 08784           CS     VR1
 08785           INDEX  MPAC
 08786           TS     VR
 08787           CCS    MPAC
 08788 2         TC     REDO5.23 +1
 087881          CS     VGCNT1
 087882          TS     VGCNTR
 087883          CS     DVCNT1
 0878842         TS     DVCNTR
 08789 4         TC     RE5.23
 0879   DP2SEC   DEC    0.0
 0880   2SEC     DEC    200
 088001 23MIN    2DEC   138000 B-28
 088002 2MIN     2DEC   12000 B-28
 088003 OCT77    OCT    00077
 088004 90SEC32  DEC    9000
 0881   DP105SEC 2DEC   10500
 0882  8DP95SEC  2DEC   9500
 0884   INITEST  EXIT   0
 0885            CS     FLAGWRD1        TEST IF THIS IS AN INITIAL PASS
 0886            MASK   INITMASK
 0887            CCS    A
 0888  2         TC     DVMNTEST        IT IS NOT
 0889            CS     FLAGWRD2        TEST IF BURN IS ABORT AFTER TUMBLE ARRET
 0890            MASK   TABTMASK
 0891            CCS    A
 0892  2         TC     INITISE         IT IS NOT
 0893            TC     NEWMODE         SET MAJOR MODE TO POST TUMBLE RECOVERY
 0894  2         OCT    00071
 0895            CAF    31.8DEG         TO REGAIN ATTITUDE AFTER TUMBLE SET AN
 0896  2         TS     LOOKANG         AVERAGE ANGLE TO HORIZON OF 31.8 DEGS.
 0897  2INITISE  TC     INTPRET
 08972           VMOVE  0               DEFINES TRAJECTORY PLANE FOR YAW
 08974                  VN                STEERING. USED IN CALCVGB
 08976 2         STORE  VIGNTION
 0898            ITC    0               BRANCH TO VG, B VECTOR COMPUTATIONS
 0899  2                CALCVGB
 0900  2         EXIT   0
 0901            CCS    VGCNTR          WAIT FOR SECOND PASS THRU CALCVGB BEFORE
 0902            TC     +2              COMPUTING THRUST ATTITUDE
 0903  2         TC     +3
 0904            TS     VGCNTR
 0905  2         TC     ENDSER32
 0906  2         TC     INTPRET
 0907            ITC    0
 0908  2                BURNINIT
 0909  2         EXIT   0
 0910            INHINT
 0911            CAF    PRIO12          ESTABLISH JOB TO COMPUTE MANEUVER TO
 0912            TC     FINDVAC         BURN INITIAL ATTITUDE
 0913  2         CADR   ATTIJOB
 0914            CAF    ONE             SET VGCNTR FOR TWO PASSES THROUGH
 0915  2         TS     VGCNTR          CALCVGB BEFORE ISSUINS STEER COMMANDS
 0916            CAF    35DEG           RESTORE ANGLE TO HORIZON TO 35 DEGS
 0917  2         TS     LOOKANG
 0918            TC     PHASCHNG
 0919  2         OCT    00402
 0920            TC     FLAG1DWN        REMOVE INIT FLAG
 0921  2         OCT    00400
 0922  2         TC     ENDSER32
 0923   31.8DEG  DEC    0.088333        SCALED AT 1 REV
 0924   35DEG    DEC    0.097222
 0925  2INITMASK EQUALS BIT9
 0926  2VRFAIL   EXIT   0               EXIT HERE IF FAILURE TO COMPUTE ABORT VR
 0927            CCS    VGCNTR          TEST IF THIS IS LAST PASS
 0928            TC     +2
 0929  2         TC     ENDSHUT         IT IS. DO SHUTDOWN
 0930            TS     VGCNTR          WAIT FOR MORE
 0931  2         TC     ENDSER32
 0932   DVMNTEST CS     FLAGWRD1        TEST IF DV MONITOR IS ENABLED
 0933            MASK   DVMONMSK
 0934            CCS    A
 0935  2         TC     ENDSER32        IT IS NOT
 0936  2         TC     INTPRET
 0937            ABVAL  2               TEST IF DELV MAG. EXCEEDS DVMIN
 0938            DSU    BMN
 0939            EXIT
 0940                   DELV
 0941                   DVMIN
 0942  2                NODELTAV        IT DOES NOT. START DV MONITOR
 0943            CS     ONE             IT DOES. (DVCNTR NORMALLY NEGATIVE)
 0944  2         TS     DVCNTR
 0945            TC     BANKCALL
 0946  2         CADR   STRTEST
 0947   NODELTAV EXIT   0
 0948  2         CCS    DVCNTR
 0949            TC     DVALARM         AFTER FIRST TIME SET ALARM
 0950  2         TC     SHUTDWN3        5 PASSES UP. PREPARE FOR RE-ENTRY
 0951            CAF    NINE            FIRST TIME SET DVCNTR FOR 10 PASSES
 0952  2         TS     DVCNTR
 0953  2         TC     ENDSER32
 0954   DVALARM  TC     ALARM
 0955  2         OCT    01402
 0958            CCS    DVCNTR
 0959  2         TS     DVCNTR
 0961  2         TC     ENDSER32
 0962   SHUTDWN3 CS     FLAGWRD2
 096205          MASK   SPS1MASK
 09621           CCS    A
 0962152         TC     SHUTDWN4        SHUT DOWN IF NOT DOING SPS1 BURN
 09622           INHINT                 CALL ON ENGINE-OFF IMMEDIATELY IF SPS1
 096225          CAF    ONE
 09623           TC     WAITLIST
 096235          CADR   ENGINOFF
 09624 2         RELINT
 096245          TC     FLAG1DWN        REMOVE STEER FLAG
 09625 2         OCT    00010
 096255          TC     PHASCHNG
 09626 2         OCT    04104
 0962652         TC     ENDSER32
 09627  SHUTDWN4 TC     FLAG1UP         ENABLE FREE-FALL INTERRUPT
 0963  2         OCT    01000
 0964   ENDSHUT  TC     BANKCALL
 0965  2         CADR   SHUTDOWN
 0966   ENDSER32 TC     BANKCALL        EXIT FROM SERVICER FROM BANK 32
 0967  2         CADR   ENDSERV
 0969            SETLOC 66000
 0970   DVMONMSK EQUALS BIT5
 0971   DVMIN    2DEC   0.000318008     2FT/S SCALED AT 19.16928 M/CS
 0972   STRTEST  CS     FLAGWRD1        TEST IF STEER FLAG SET
 0973            MASK   BIT4
 0974            CCS    A
 0975  2         TC     ENDSERV         IT IS NOT
 0976  2         TC     INTPRET
 0977            ITC    0
 0978  2                CALCVGB
 0979  2         EXIT   0
 0980            TC     PHASCHNG
 0981  2         OCT    00505
 0982   REDO5.5  CCS    VGCNTR
 0983            TC     +2              BEFORE TESTING VG AND GENERATING STEERIN
 0984  2         TC     JUMP10          COMMANDS
 0985            TS     ERRORSUM        ZERO STEER ERROR SUM
 0986            TS     ERRORSUM +1
 0987            TS     ERRORSUM +2
 0988            TS     ERRORSUM +3
 0989            TS     ERRORSUM +4
 0990  2         TS     ERRORSUM +5
 0991            CAF    MDTINIT
 0992            TS     MDT
 0993  2         TS     MDT +1
 0996            CCS    VGCNTR
 0997  2         TS     VGCNTR
 0998  2         TC     ENDSERV
 0999  2MDTINIT  DEC    0.00381         16FT/S/S FOR 2.5 SECS AT 2(+5)M/CS
 1000   JUMP10   TC     FLAG2DWN        REMOVE CALC FLAG (KILLS ATTITUDE MAN-
 1001  2         OCT    02000           EUVER IF STILL ACTIVE)
 1002  2         TC     INTPRET
 1003            VXSC   1
 1004            BVSU   UNIT
 1005                   DELV
 1006                   KPIP
 1007                   CBDT
 1008  2         STORE  UNITMDT
 1009            NOLOD  1               TEST IF VG INCREASING WITH THRUST
 1010            DOT    BPL
 1011                   VG
 1012                   VGALARM         IT IS. BRANCH TO CUT ENGINE AND WAIT
 1013  2         STORE  26D             VG ACTUAL
 1014            DAD    0               SUM TWO INTERVALS OF MDT
 1015                   30D
 1016  2                MDT
 1025   JUMP9    DMP    3               RESCALE VG ACTUAL TO 2(+5)M/CS
 1026            TSLT   BOV
 1027            DDV    BOV             IF NO OVER FLOW ON DIVISION, LESS THAN
 1028            DMP    ITC             2 INTERVALS OF VG LEFT
 1029                   26D
 1030                   0.995
 1031                   3
 1032                   STEERLAW
 1033                   -
 1034                   STEERLAW
 1035                   DELTAT
 1036  2                SETTGO          BRANCH TO SET TIME-TO-GO TO CUT-OFF
 1037   STEERLAW DMOVE  0               SAVE NEW VALUE OF MDT
 1038                   30D
 1039  2         STORE  MDT
 1040            DMP    0
 1041                   K1STEER         =(0.815...)(STEER GAIN)
 1042  2                DELTAT
 1043            ABVAL  3               STEERING CROSS PRODUCT COMPUTED HERE
 1044            TSLC   BDDV
 1045            VXSC   VXV
 1046            VSLT*
 1047                   VG
 1048                   X2
 1049                   -
 1050                   VG
 1051                   UNITMDT
 1052                   0,2
 1053            STORE  STEERROR        FIRST TERM IN STEERLAW OUTPUT. SCALED
A1054                                   AT ONE REVOLUTION
 1055            NOLOD  1               INCREMENT SUM OF STEER ERRORS
 1056            VXSC   VAD
 1057                   K2STEER         =(INTEGRATOR GAIN)/(STEER GAIN)
 1058  2                ERRORSUM
 1059            NOLOD  2               TEST IF MAGNITUDE OF INTEGRATED STEER
 1060            ABVAL  DSU             ERROR EXCEEDS MAX ALLOWABLE
 1061            BPL
 1062                   ERRORMAX
 1063  2                SUMPOINT
 1064            VMOVE  0
 1065  2         STORE  ERRORSUM        STORE NEW STEER ERROR SUM
 1066   SUMPOINT VAD    1               SUM ERROR AND INTEGRATED ERROR TERMS
 1067            RTB    ITC
 1068                   STEERROR
 1069                   ERRORSUM
 1070                   FRESHPD
 1071                   CDUDRIVE        BRANCH WITH TOTAL STEERLAW OUTPUT IN VAC
A1072                                   SCALED AT ONE REVOLUTION
 10721  STREXIT  VSLT   1
 10722           COMP   EXIT            RESCALE VG TO 2(+5)M/CS FOR DISPLAY
 10723                  VG
 10724 2                2
 107241          TC     GRABDSP         TRY TO GRAB DISPLAY
 1072422         TC     NODISP          ALREADY GRABBED. SKIP VG DISPLAY
 10725           INDEX  FIXLOC          LOAD UPPER REGISTERS OF VG INTO DSPTEM1
 10726           CS     VAC
 10727 2         TS     DSPTEM1
 10728           INDEX  FIXLOC
 10729           CS     VAC +2
 1073  2         TS     DSPTEM1 +1
 10731           INDEX  FIXLOC
 10732           CS     VAC +4
 10733 2         TS     DSPTEM1 +2
 10734           CAF    V06N40
 10735           TC     NVSUB
 10736 2         TC     RELDSPON
 10737 2         TC     FREEDSP
 10738 2NODISP   TC     ENDSERV
 1074   V06N40   OCT    00640           VERB 06 NOUN 40
 1075   1.523    2DEC   1.523 B-3
 1076   0.995    2DEC   0.995
 1077   K1STEER  2DEC   0.101859164     (STEER GAIN =1/8)
 1078   K2STEER  2DEC   0.08            (INTEGRATOR GAIN =0.01)
 1079   ERRORMAX 2DEC   0.001388888     1 DEGREE SCALED AT 2 REVS
 1080   SETTGO   NOLOD  2               COME HERE TO SET ENGINE-OFF CALL
 1081            TSRT   COMP
 1082            TEST   EXIT
 1083                   4               C(MPAC) = TIME-TO-CUTOFF SINCE PIPTIME
 1084                   STEERFLG        SCALED AT 2(+14) CS
 1085  2                STREXIT
 10852           XCH    MPAC
 10854 2         TS     LONGTIME        SAVE MPAC  (USED IN RESTARTS)
 1086   REDO4.1  INHINT
 1087            CS     TIME1
 1088            TS     TBASE4
 1089            AD     PIPTIME +1
 1090            CCS    A
 1091            AD     BIT15
 1092            TC     +3
 1093            AD     ONE
 1094  2         COM
 1095            AD     LONGTIME        (TEMP FOR MPAC)
 1096            AD     TDECAY          EFFECTIVE THRUST DECAY TIME
 1097            TS     LONGTIME +1
 1098            CCS    A               TEST FOR - OR 0 WAITLIST CALLS
 1099            TC     +3
 1100            TC     +2
 1101            CAF    ZERO
 1102            AD     ONE
 1103            TC     WAITLIST
 1104  2         CADR   ENGINOFF
 1105            TC     PHASCHNG
 1106  2         OCT    00104
 1107            TC     FLAG1DWN        REMOVE STEER FLAG
 1108  2         OCT    00010
 1109            TC     PHASCHNG
 1110  2         OCT    00204
 1111  2         TC     ENDSERV
 1112   VGALARM  EXIT   0
 1113            TC     ALARM
 1114  2         OCT    01401
 1115            TC     BANKCALL
 11155 2         CADR   SHUTDWN3
 1121   ENDSERV  CCS    DELTAT +1       IF BIT1 PRESENT IN DELTAT +1, SET DELTAT
 1122            CAF    HALFSEC         1/PIPADT TO 2.5SECS (FOR ABORT STEERING)
 1123            AD     TWOSEC
 1124            TS     DELTAT
 1125            DOUBLE
 1126  2         TS     1/PIPADT
 1127            TC     PHASCHNG
 1128  2         OCT    00105
 1129  2         TC     ENDOFJOB
 1130   HALFSEC  DEC    50 B-9
 1131   TWOSEC   DEC    200 B-9
 1132  8ALLABORT OCT    7
 1134   BURNINIT AXC,1  2               C(X1)= 0  (TABT,ABRT,SPS1)
 1135            ITA    TEST                 =-2  (SPS2)
 1136            AXC,1
 1137                   0
 1138                   S2
 1139                   SPS2FLAG
 1140                   +2
 1141  2                2
 1142            ITC    0               COMPUTE DESIRED THRUST DIRECTION
 1143  2                CALCXSC
 1144            RTB    1               SET UP CG ROTATION MATRIX IN PD
 1145            SMOVE*
 1146                   ZEROVAC
 1147                   CGZ,1
 1148  2         STORE  6
 1149            NOLOD  1
 1150            COMP   AST,1
 1151                   6
 1152  2         STORE  2
 1153            SMOVE* 0
 1154                   CGY,1
 1155  2         STORE  4
 1156            NOLOD  1
 1157            COMP   AXT,1
 1158                   18D
 1159  2         STORE  12D
 1160   REPEAT2  VMOVE* 2               COMPUTE DESIRED SPACECRAFT ATTITUDE
 1161            VXM    VAD*            MATRIX FROM DESIRED THRUST ATT. MATRIX
 11615           UNIT
 1162                   18D,1
 1163                   XSC
 1164                   XSC +18D,1
 1165  2         STORE  XSCD +18D,1
 1166            TIX,1  1
 1167            ITCI
 1168                   REPEAT2
 1169  8                S2
 1170  2ROLLJOB  TC     INTPRET
 11701           AXT,1  1               GET SIN,COS OF THETAD,+1,+2
 11702           AST,2  ITC
 11703                  6
 11704                  ROLLEXIT
 11705 2                THETRIG
 1171            ITC    0               COMPUTE NAV. BASE CORRDINATES
 1172  2                CALCSMNB
 1173            VXSC   0               COMPUTE XSC
 1174                   XNB
 1175  2                COS33
 1176            VXSC   2
 11761           VAD    TEST
 11762           COMP
 11763                  ZNB
 11764                  SIN33
 11765                  -
 11766                  SPS2FLAG        IF SPS2, INVERT XSC
 11767                  HEADWN1
 11768 2         STORE  22D
 1181   HEADWN1  NOLOD  3
 1182            VXV    UNIT            =KR(TVC)(UNIT(XSC*RN)*YSC), WHERE
 1183            VXV    VXSC                 DT(MAX) = 10 SECS,
 1184            VSLT   ITC                  MAX ROLL GAIN = 1.0
 1185                   RN
 1186                   YNB             ( =YSC)
 1187                   KR(TVC)         TVC ROLL CONTROL GAIN
 1188                   3
 1189  2                CDUDRVE2        SUBENTRY OF CDUDRIVE
 1194  2ROLLEXIT EXIT   0
 1195            CS     FLAGWRD1        TEST IF STEER FLAG SET BEFORE SETTING
 1196            MASK   BIT4            BURN MAJOR MODE
 1197            CCS    A
 1198  2         TC     ENDOFJOB
 1199            CAF    BIT5            TEST IF BURN SWITCH IS SET TO SPS2
 1200            MASK   FLAGWRD2
 1201            CCS    A
 1202  2         TC     SPS2MODE        IT IS
 1203            CS     FLAGWRD2        TEST IF BURN IS SPS1
 1204            MASK   BIT4
 1205            CCS    A
 1206  2         TC     ENDOFJOB        IT IS NOT
 1207            TC     NEWMODE         SET MAJOR MODE TO SPS1
 1208            OCT    00041
 1209  2         TC     ENDOFJOB
 1210   SPS2MODE TC     NEWMODE         SET MAJOR MODE TO SPS2
 1211  2         OCT    00042
 1212  2         TC     ENDOFJOB
 1213  8KR(TVC)  2DEC   0.0204          ROLL GAIN =0.05,  DT =5.0 SECS
R1214   THIS ROUTINE CONTROLS THE USE OF CALCMANU IN COMPUTING, TIMING AND PERFO
 1215  9RMING THE SEQUENCE OF MANEUVERS DURING
R1216   A LARGE ATTITUDE MANEUVER. FLIGHT 501 INVOLVES SUCH A MANEUVER WHEN ORIE
 1217  9NTING TO
R1218            1.  ABORT BURN INITIAL ATTITUDE AFTER A TUMBLE ARREST
R1219            2.  NOMINAL FIRST BURN INITIAL ATTITUDE
R1220            3.  LOCAL VERTICAL AFTER NOMINAL FIRST BURN
R1221            4.  NOMINAL SECOND BURN INITIAL ATTITUDE
R1222            5.  SM/CM SEPARATION ATTITUDE
R1223  4         6.  CM PRE-ENTRY ATTITUDE
 1224   ATTIJOB  TC     BANKCALL
 1225  2         CADR   IMUATTC
 1226  2         TC     SETHETAD
 1227            TC     BANKCALL
 1228            CADR   IMUSTALL
 1229  2         TC     CURTAINS
 1230  2         TC     INTPRET
 1231   ATTIJOB1 ITC    0
 1232  2                GETMANU
 1233  2         EXIT   0
 1234            INHINT
 1235            CAF    0.01SEC
 1236            TC     WAITLIST
 1237  2         CADR   DOMANU
 1238  4         TC     ENDOFJOB
 1239  2ATTIJOB2 TC     INTPRET
 1240            ITC    0
 1241  2                GETMANU
 1242            EXIT   0
 1243  4         TC     ENDOFJOB
 1244   SNAPOUT  NOLOD  0
 1245  2         STORE  THETAD
 1246            TEST   1               TEST IF SHTDN FLAG SET (I.E. HAS FREE-
 1247            TEST   EXIT            FALL INTERUPT OCCURRED)
 1248                   SHTDNFLG
 1249                   JUMP7
 1250                   CDUXFLAG        TEST IF CDUXFLAG SET (I.E. HAS CM/SM
 1251  2                ENDMANU         SEPARATION OCCURRED)
 1252            TC     FLAG1UP         SET ENTRY FLAG
 1253  2         OCT    00004
 1254            CS     ONE
 1255            TC     NEWPHASE
 1256  2         OCT    00003
 1257  2         TC     ENDOFJOB
 1258   JUMP7    TEST   1
 1259            EXIT
 1260                   COASTFLG
 1261  2                JUMP6
 1262            TC     FLAG1UP         SET SOAK FLAG FOR BEGINNING OF CONTROL
 1263  2         OCT    10000             AT COLD SOAK ATTITUDE
 1264            TC     NEWMODE
 1265  2         OCT    00022
 1266  2         TC     ENDMANU +1
 1267   JUMP6    TEST   0
 1268                   TABTFLAG
 1269  2                ENDMANU
 1270  2         EXIT   0
 1271            INHINT
 1272            CAF    0.01SEC
 1273            TC     WAITLIST
 1274  2         CADR   ATTCNOFF
 12742           CAF    TWO             SET VGCNTR FOR THREE PASSES THROUGH
 12744 2         TS     VGCNTR          CALCVGB BEFORE STARTING ABORT STEERING
 1275  2         TC     ENDMANU +1
 1276  2ENDMANU  EXIT   0
 1277            CS     ONE
 1278            TC     NEWPHASE
 1279  2         OCT    2
 1280  8         TC     ENDOFJOB
 1281   GETMANU  ITA    1
 1282            ITC
 1283                   EXITCAD1
 1284  2                CALCMANU
 1285            TEST   0
 1286                   CALCFLAG
 1287  2                SNAPOUT
 1288            AXC,1  2
 1289            TEST   AXC,1
 1290            TEST   AXC,1
 1291                   0
 1292                   ROLLFLAG
 1293                   SETDTH
 1294                   2
 1295                   CDUXFLAG
 1296                   SETDTH
 1297  2                4
 1298   SETDTH   DMOVE* 0
 1299                   DTH,1
 1300  2         STORE  DTHETA
 1301            ITCI   0
 1302  4                EXITCAD1
 1303  80.01SEC  EQUALS BIT1
 1304   DOMANU   TC     FLAG2UP         SET DOMANU FLAG
 1305  2DOMANMSK OCT    01000
 1306   DOMANU1  CS     FLAGWRD2        KILL DOMANU IF CALC FLAG NOT SET
 1307            MASK   BIT11           (CALCMASK)
 1308            CCS    A
 1309  2         TC     DOMANOFF
 1310            CAF    DOMANMSK        TEST IF DOMAN FLAG SET
 1311            MASK   FLAGWRD2
 1312            CCS    A
 1313  2         TC     SETMANU         IT IS
 1314            CAF    TPAD +1         IT IS NOT. START NEXT MANEUVER IN TPAD
 1315            TC     WAITLIST        SECS
 1316  2         CADR   DOMANU
 1317  2         TC     TASKOVER
 1318   SETMANU  CAF    PRIO23          ESTABLISH MANUJOB
 1319            TC     FINDVAC
 1320  2         CADR   MANUJOB
 1321            CAF    0.5SEC          RECALL DOMANU1 IN 0.5 SECS
 1322            TC     WAITLIST
 1323  2         CADR   DOMANU1
 1324  2         TC     TASKOVER
 1325   DOMANOFF TC     FLAG2DWN        REMOVE DOMANU FLAG
 1326  2         OCT    01000
 1327  4         TC     TASKOVER
 1328   TPAD     DEC    0.0
 1329   5SEC     DEC    500
 1330  40.5SEC   DEC    50
 1331  2MANUJOB  TC     INTPRET
 1332            DSU    1               TEST IF THETAMAN LESS THAN DTHETA.
 1333            BPL    COMP
 1334                   DTHETA
 1335                   THETAMAN
 1336                   JUMP4           IT IS. STORE REMAINING THETAMAN
 1337  2         STORE  THETAMAN
 1338            ITC    0
 1339  2                DRIVECDU
 1340   JUMP4    DMOVE  0               STORE REMAINING THETAMAN IN DTHETA
 1341                   THETAMAN
 1342  2         STORE  DTHETA
 1343  2         EXIT   0
 1344            TC     FLAG2DWN        REMOVE DOMAN FLAG
 1345  2         OCT    01000
 1346  2         TC     INTPRET
 1347   DRIVECDU VXSC   1               FORM INCREMENTAL MANEUVER VECTOR
 1348            VSLT   ITC
 1349                   WC
 1350                   DTHETA
 1351                   1
 1352  2                CDUDRIVE
 1353            TEST   0               TEST IF DOMAN FLAG SET
 1354                   DOMANFLG
 1355  2                NEXTMAN         IT IS NOT. GET NEXT MANEUVER
 1356            EXIT   0
 1357  2         TC     ENDOFJOB
 1365  2NEXTMAN  EXIT   0
 1366            INHINT
 1367            CAF    PRIO12          ESTABLISH ATTIJOB2 TO COMPUTE NEXT MAN.
 1368            TC     FINDVAC
 1369  2         CADR   ATTIJOB2
 1370  8         TC     ENDOFJOB
 1371   SOAKINIT TC     NEWMODE         SET MAJOR MODE TO MANEUVER TO COLDSOAK
 1372  2         OCT    00021
 1373  2         TC     INTPRET
 1374            SMOVE  0
 13745 2                ANGLEZ          COLDSOAK -  Z GIMBAL ANGLE
 1375            SMOVE  0
 13755 2                ANGLEY          COLDSOAK -  Y GIMBAL ANGLE
 1376            SMOVE  1
 13765           VDEF   COMP
 1377                   ANGLEX          COLDSOAK -  X GIMBAL ANGLE
 13775 2         STORE  CDUTEMP
 13776           AXT,1  1
 1378            ITC
 13781                  6
 13785 2                SINCOS
 1379            ITC    0
 13795 2                CALCSMNB        NAV BASE IN SM COORDINATES
 1380            ITC    0
 13805 2                CALCNBSC        SC IN SM COORDINATES
 1383            VMOVE  0
 13835                  XSC
 1384  2         STORE  XSCD
 13845           VMOVE  0
 1385                   YSC
 13855 2         STORE  YSCD
 1386            VMOVE  0
 13865                  ZSC
 1387  2         STORE  ZSCD
 1388            ITC    0               BRANCH TO DO MANEUVER
 1389  8                ATTIJOB1
 1390   SOAKTASK CS     ZERO            COME HERE FIRST TIME ONLY. CLEAR OUT
 1391            TS     DELV            DELV FOR FREE-FALL COMPUTATIONS
 1392            TS     DELV +1
 1393            TS     DELV +2
 1394            TS     DELV +3
 1395            TS     DELV +4
 1396  2         TS     DELV +5
 1397   SOAKTSK1 CAF    BIT15           TEST IF COAST FLAG SET
 1398            MASK   FLAGWRD1
 1399            CCS    A
 1400            TC     CCSHOLE
 1401  2         TC     TASKOVER
 1402            CAF    SEVEN
 1403            TC     NEWPHASE
 1404  2         OCT    00005
 1405   REDO5.7  CS     TIME1
 1406  2         TS     TBASE5
 1407            CAF    EIGHT
 1408            TC     NEWPHASE
 1409  2         OCT    00005
 1410            CAF    2SEC33
 1411            TC     WAITLIST
 1412  2         CADR   SOAKTSK1
 1413            CAF    PRIO13
 1414            TC     FINDVAC
 1415  2         CADR   SOAKJOB
 1416  2         TC     TASKOVER
 1421  82SEC33   DEC    200
 1423   SOAKJOB  CS     FLAGWRD1        TEST SOAKFLAG
 1424            MASK   BIT13
 1426            CCS    A
 1427            TC     SOAKEXIT        SOAKFLAG OFF
 1428  2         TC     INTPRET          SOAKFLAG ON
 1467            DMOVE  0               SET DELTAT TO 4 SECS FOR ORBITAL INT.
 1468                   DT4SEC
 1469  2         STORE  DELTAT
 14691           VMOVE  0               SAVE VRECT AND RRECT IN CASE OF RESTARTS
 14692                  RRECT
 14693 2         STORE  RRECCMEM
 14694           VMOVE  0
 14695                  VRECT
 14696 2         STORE  VRECCMEM
 1470            EXIT   0
 1471            TC     PHASCHNG
 1472  2         OCT    01205
 1473   REDO5.10 TC     FLAG1DWN        REMOVE COAST, SOAK FLAGS
 1474  2         OCT    50000
 1475  2         TC     INTPRET
 14751           VMOVE  0               RESTORE RRECT AND VRECT FROM CMEMORY.
 14752                  RRECCMEM
 14753 2         STORE  RRECT
 14754           VMOVE  0
 14755                  VRECCMEM
 14756 2         STORE  VRECT
 1476            ITC    0               BRANCH TO DO ORBITAL INTEGRATION
 1477  2                AVETOMD1
 1478            VMOVE  1
 14781           VSLT
 1479                   RIG-4SEC
 14791                  RSCALE -15D
 1480  2         STORE  RN              SET RN TO 4 SECS BEFORE IGNITION
 1481            RTB    1
 1482            ITC
 1483                   FRESHPD
 1484  2                CALCGRAV
 14842           VMOVE  0
 14844                  VIGNTION
 14846 2         STORE  VN              SET VN AT IGNITION
 1485            AXT,1  1               GET VR AT 4 SECS BEFORE IGNITION
 1486            SXA,1  ITC
 1487                   501SPS2
 1488                   VRCADR
 1489  2                CALCVGB
 1493            VMOVE  1
 14931           VSLT
 1494                   RIGNTION
 14941                  RSCALE -15D
 1495  2         STORE  RN              SET RN AT IGNITION
 1496            ITC    0
 1497  2                CALCGRAV
 1498            ITC    0
 1499  2                CALCVGB         GET VR AT IGNITION. COMPUTE CBDT
 1500            ITC    0
 1501  2                BURNINIT        INITIALISE BURN
 1502            DMOVE  0
 1503                   DT2SEC
 1504  2         STORE  DELTAT          RESTORE DELTAT TO 2 SECS FOR SPS2
 1505            VMOVE  0
 1506                   VAVEGON
 1507  2         STORE  VN              INITIALISE CALCRVG FOR TURN-ON
 1508            VMOVE  1
 15081           VSLT
 1509                   RAVEGON
 15091                  RSCALE -15D
 1510  2         STORE  RN
 1511            ITC    0
 1512  2                CALCGRAV
 1513  2         EXIT   0
 1514            CAF    ONE             SET VGCNTR FOR TWO PASSES THRU CALCVGB
 1515  2         TS     VGCNTR          BEFORE SPS2 STEERING
 1516            TC     NEWMODE         SET MAJOR MODE TO READY FOR R,V,T UPDATE
 1517  2         OCT    00024
 1520            TC     PHASCHNG        CHANGE PHASE TO 5.20 TO ENABLE V76 RST.
 1521  2         OCT    02405
 1523  2         TC     ENDOFJOB
 1527   SOAKEXIT TC     PHASCHNG
 1528  2         OCT    01305
 1529  2         TC     ENDOFJOB
 1530   DT2SEC   2DEC   200 B-9
 1531   DT4SEC   2DEC   400 B-9
 15345           BANK   24
P1535  2UPTASK AND UPJOB OCCUR 120 SECS BEFORE PLUSX2 AND INCORPORATE STATE VECT
 1536  9OR UPDATES VIA VERB 76
 1537   UPTASK   CAF    10SEC24         SCHEDULE FDAI ALIGN OFF IN 10 SECS
 1538            TC     WAITLIST
 1539  2         CADR   FDAIOFF2
 15392           TC     RELAYON         SET SCS FDAI ALIGN DISCRETE (C31)
 15394 2         OCT    40400
 1540            CAF    PRIO6           ESTABLISH UPJOB
 1541            TC     FINDVAC
 1542  2         CADR   UPJOB
 1543            CAF    SEVEN
 1544            TC     NEWPHASE
 1545  2         OCT    00004
 1546            CS     TIME1
 1547  2         TS     TBASE4
 15471           CS     ONE             REMOVE UPDATE RESTART CAPABILITY
 15472           TC     NEWPHASE
 15473 2         OCT    5
 1548            CAF    EIGHT
 1549            TC     NEWPHASE
 1550  2         OCT    00004
 1551  2         TC     TASKOVER
 1552   UPJOB    TC     NEWMODE         REVERT TO ATTITUDE HOLD WITH NO V76.
 1553  2         OCT    22
 1554            CAF    LDNLST1         REVERT BACK TO DOWNLIST 1.
 1555  2         TS     DNLSTADR
 1556  2         TC     INTPRET
 1557            TEST   2               NO FURTHER ACTION IF NO V76 COMPLETED.
 1558            DAD    DAD             IF SO, FORM DT FOR FINAL INTEGRATION.
 1559            DSU
 1560                   UPDATFLG
 1561                   NOSTATE
 1562                   TCUTOFF
 1563                   TCOAST
 1564                   DP120SEC
 1565                   STBUFF +12D
 1566  2         STORE  TAVEGON
 156602          MXV    1
 156603          VSLT
 156604                 RRECT
 156606                 REFSMMAT
 156607                 1               THIS ASSUMES THAT UPDATE SCALED 2(26)M
 1566082         STORE  RRECCMEM
 15661           MXV    1
 156611          VSLT
 156612                 VRECT
 156614                 REFSMMAT
 156615                 1               THIS ASSUMES THAT UPDATE SCALED 2(7)M/CS
 1566162         STORE  VRECCMEM
 156618          EXIT   0
 15662           TC     PHASCHNG
 1566222         OCT    03504
 156624 REDO4.29 TC     INTPRET
 156626          VMOVE  0
 156628                 RRECCMEM
 15663 2         STORE  RRECT
 156632          VMOVE  0
 156634                 VRECCMEM
 1566362         STORE  VRECT
 1567            ITC    0
 1568  2                AVETOMD2
 1569            VMOVE  0               LEAVE RAVEGON, VAVEGON IN RN, VN.
 1570                   VAVEGON
 1571  2         STORE  VN
 1572            VSLT   0
 1573                   RAVEGON
 15735                  RSCALE -15D
 1574  2         STORE  RN
 1575            RTB    1
 1576            ITC
 1577                   FRESHPD
 1578  2                CALCGRAV
 1579   NOSTATE  ITC    0               GO GET TFF
 1579052                CALCTFF
 15791           DSU    1               SEE IF TFF IS TOO HIGH
 157912          BPL    EXIT
 157914                 TFF
 157916                 TFFLIMIT
 1579182                TFF2DOWN        YES
 15792  SETMM23  TC     NEWMODE         HOLD ATTITUDE AFTER ORBITAL INTEGRATION
 15794 2         OCT    23
 1580            TC     PHASCHNG
 1581  2         OCT    01104
 1582  4REDO4.9  TC     JAMTERM         FLUSH OUT V76 IF STILL IN PINBALL
 158202 TFF2DOWN EXIT   0
 158204          TC     STATEDWN        RESET TFF2 FLAG
 158206          OCT    10000
 1582084         TC     SETMM23
 15821  FDAIOFF2 TC     RELAYOFF        REMOVE SCS FDAI ALIGN DISCRETE (C31)
 15822 2         OCT    40400
 15823           CAF    105SEC
 15824           TC     WAITLIST
 15825 2         CADR   PREAVGON
 15826 4         TC     TASKOVER
 1583   PREAVGON CAF    5SEC24
 1584            TC     WAITLIST
 1585  2         CADR   AVGON
 15852           TC     RELAYOFF        BACK-UP FDAI ALIGN OFF IN CASE OF
 15854 2         OCT    40400             RESTARTS
 1586            TC     FLAG1DWN        REMOVE UPDAT FLAG TO KILL ORB. INTEGR.
 1587  2         OCT    20000
 1588            CAF    TWENTY7
 1589            TC     NEWPHASE
 1590  2         OCT    4
 1591  2         TC     TASKOVER
 1592   DP120SEC 2DEC   12000
 15922  10SEC24  DEC    1000
 15924  105SEC   DEC    10500
 1593   5SEC24   DEC    500
 1594   TFFLIMIT 2DEC   .9              JUST SO ITS HIGH
P1595   SHUTDOWN IS A CLOSED SUBROUTINE WHICH IS ENTERED PRIOR TO CM/SM SEPARATI
 1596  9ON. ITS PURPOSE IS TO CLOSE OUT ALL SCS
R1597  4FUNCTIONS NOT CONCERNED WITH SEPARATION AND ENTRY, AND TO INITIATE THOSE
 1598  9 THAT ARE
 1600  2         BANK   33
 1601   SHUTDOWN INHINT
 1602            CAF    PRIO27          ESTABLISH HIGH PRIO JOB TO DO SHUTDOWN
 1603            TC     NOVAC
 1604            CADR   ENEMA           CLEANS OUT EXEC AND WAITLIST.
 1605  2         RELINT
 1606            CAF    ONE             EFFECTIVELY STOP ANY WAITLIST ACTIVITY
 1607  2         TS     TIME3
 1610            CS     ONE
 1611            TC     NEWPHASE
 1612  2         OCT    00004
 1613            CS     ONE
 1614            TC     NEWPHASE
 1615  2         OCT    00002
 1616            CAF    TEN
 1617            TC     NEWPHASE
 1618  2         OCT    00003
 1619  4         TC     SWRETURN        (LOCATION OF TC Q)
 1622   SHUTJOB  INHINT
 1623            CS     BIT13           SHUT OFF ENGINE BIT
 1624            MASK   OUT1
 1625  2         TS     OUT1
 1626            TC     RELAYOFF        REMOVE SCS +X TRANS DISCRETE
 1627  2         OCT    40020
 1628            TC     FLAG1DWN        REMOVE DVMON, STEER, INIT FLAGS
 1629  2         OCT    00430
 1630            TC     BANKCALL        SET IMUCDU TO ATT. CONTROL (MAY BE RE-
 1631  2         CADR   IMUATTC         DUNDANT CALL)
 1632  2         TC     SETHETAD        FORCE THETAD, +1, +2 TO READ CDUX,Y,Z
 1633            CAF    ALLABORT        TEST IF ANY ABORT BURN SET
 1634            MASK   FLAGWRD2
 1635            CCS    A
 1636  2         TC     +3              IT IS
 1637            TC     SETBRNSW        IT IS NOT. SET BURN TO LAST (SPS4)
 1638  2         OCT    00100
 1639            TC     BANKCALL        WAIT FOR MODE SWITCH TO COMPLETE
 1640            CADR   IMUSTALL
 1641  2         TC     CURTAINS        CATCH-ALL FOR MODE SWITCH FAILURES
 16412           CS     TIME1
 16414 2         TS     TBASE3
 1642            CAF    BIT10           TEST IF INTP FLAG SET (I.E. HAS 95 SEC
 1643            MASK   FLAGWRD1        INTERUPT OCCURRED)
 1644            CCS    A
 1645  2         TC     TESTGMP         IT HAS NOT
 1646            CAF    BIT7            TEST IF INT1 FLAG SET (I.E. HAS 200 SEC
 1647            MASK   FLAGWRD1        INTEREUPT OCCURRED)
 1648            CCS    A
 1649  2         TC     SHUTJOB1        IT HAS
 1650   TESTGMP  CAF    BIT8            TEST IF SCS GMP DISCRETE SET
 1651            MASK   DSPTAB +13D
 1652            CCS    A
 1653  2         TC     GMPOFF1         IF IT IS, TURN IT OFF
 1654            CAF    BIT2            TEST IF DV MODE SET
 1655            MASK   DSPTAB +13D
 1656            CCS    A
 1657  2         TC     DVMODOF1        IF IT IS, TURN IT OFF
 1658   SHUTJOB1 CS     FLAGWRD1        TEST IF SHUTDN FLAG SET
 1659            MASK   BIT12
 1660            CCS    A
 1661  2         TC     SETATTC         IT IS NOT. SHUTDOWN NOT DUE TO TFF
 1662            CAF    BIT10           TEST IF THIS IS 200 OR 95 SEC INTERRUPT
 1663            MASK   FLAGWRD1        (INTP FLAG)
 1664            CCS    A
 1665  2         TC     SETSEP          200 SEC INTERRUPT
 1666   KILLMANU TC     FLAG2DWN        REMOVE CALC FLAG (KILL ANY MANEUVER)
 1667  2         OCT    02000
 1668            INHINT                 ALLOW 5 SECS FOR CSM TO SETTLE FROM ANY
 1669            CAF    5SEC            ATTITUDE MANEUVER BEFORE SEPARATING
 1670            TC     WAITLIST
 1671            CADR   CDUXTASK
 1674            TC     PHASCHNG
 1675  2         OCT    01303
 1676  2         TC     ENDOFJOB
 1677   GMPOFF1  INHINT
 1678            CAF    2SEC33          CALL FOR SCS GMP OFF IN 2 SECS
 1679            TC     WAITLIST
 1680  2         CADR   GMPOFF2
 16802           TC     PHASCHNG
 16804 2         OCT    02703
 1681  2         TC     ENDOFJOB
 1682   DVMODOF1 INHINT
 1683            CAF    3.5SEC33        CALL FOR DV MODE OFF IN 3.5 SECS
 1684            TC     WAITLIST
 1685            CADR   DVMODOF2
 1686  2         RELINT
 16862           TC     PHASCHNG
 16864 2         OCT    03003
 1687  2         TC     ENDOFJOB
 1688   GMPOFF2  TC     RELAYOFF        REMOVE SCS GMP DISCRETE
 1689  2         OCT    40200
 1690            CAF    3.5SEC33        CALL FOR DV MODE OFF IN 3.5 SECS
 1691            TC     WAITLIST
 1692  2         CADR   DVMODOF2
 16921           CAF    TWENTY5
 16922           TC     NEWPHASE
 16923 2         OCT    3
 1693  2         TC     TASKOVER
 1694   DVMODOF2 TC     RELAYOFF        REMOVE SCS DV MODE DISCRETE
 1695  2         OCT    40002
 1696            CAF    0.25S33         CALL FOR SCS ATT. CONTROL IN U/4 SEC
 1697            TC     WAITLIST
 1698  2         CADR   SHUTASK
 1699  2         TC     TASKOVER
 1700   SHUTASK  CAF    PRIO27          ESTABLISH JOB TO RESUME SHUTDOWN PROCESS
 1701            TC     NOVAC
 1702  2         CADR   SHUTJOB1
 1703  2         TC     TASKOVER
 1704   SETSEP   INHINT
 1705            CAF    PRIO12
 1706            TC     FINDVAC         CM/SM SEPARATION ATTITUDE
 1707  2         CADR   SEPMANU
 1708   SETATTC  TC     RELAYON         SET SCS ATT. CONTROL DISCRETE (C23)
 1709  2         OCT    40001
 1710  2         TC     ENDOFJOB
 1711   0.25S33  DEC    25
 1712   3.5SEC33 DEC    350
 1713   5SEC33   DEC    500
 1714  87SEC33   DEC    700
 1715   SEPMANU  TC     NEWMODE         SET MAJOR MODE TO SEPARATION MANEUVER
 1716  2         OCT    00061
 1717  2         TC     INTPRET
 1718            UNIT   1               COMPUTE DESIRED S/C ORIENTATION FOR
 1719            VXSC   COMP            CM/SM SEPARATION
 1720                   VN
 1721  2                COS60
 1722            NOLOD  1
 1723            VXV    UNIT
 1724                   RN
 1725  2         STORE  YSCD            YSCD IS ALONG (RN*VN)
 1726            NOLOD  3
 1727            VXV    UNIT
 1728            VXSC   VAD
 1729            COMP
 1730                   VN
 1731                   SIN60
 1732  2         STORE  XSCD            XSCD IS 60 DEG ABOVE VELOCITY VECTOR
 1733            NOLOD  1
 1734            VXV    UNIT
 1735                   YSCD
 1736  2         STORE  ZSCD
 1737            ITC    0               BRANCH TO PERFORM MANEUVER TO THE
 1738  2                ATTIJOB1        SEPARATION ATTITUDE
 1739   SIN60    2DEC   0.86603
 1740  8COS60    2DEC   0.5
 1741   CDUXTASK CAF    5SEC            ALLOW 5 SECS FOR CDUX RESOLVER SCALE
 1742            TC     WAITLIST        CHANGE
 1743  2         CADR   CM/SMTSK
 1744            CAF    PRIO20
 1745            TC     FINDVAC
 1746  2         CADR   CDUXJOB
 1749            TC     RELAYOFF        SET SCS TO MONITOR MODE
 1750  2         OCT    40007
 1751            CAF    TWELVE
 1752            TC     NEWPHASE
 1753  2         OCT    00003
 1754  4         TC     TASKOVER
 1755   CDUXJOB  CS     THETAD
 1756            COM
 1757  2         TS     CDUTEMP
 1758            CCS    CDUTEMP         GET MAGNITUDE OF THETAD
 1759            AD     ONE
 1760            TC     +2
 1761            AD     ONE
 1762  2         TS     MPAC            AND SAVE IT
 1763            EXTEND                 FIND NEAREST INTEGER MULTIPLE OF 1/16
 1764            MP     15/16TH
 1765            AD     BIT11
 1766            MASK   HIGH4
 1767  2         XCH    MPAC            AND SAVE IT
 1768            EXTEND                 SHIFT ORIGINAL THETAD RIGHT 4 PLACES
 1769            MP     BIT11
 1770            AD     MPAC            AND ADD INTEGER MULTIPLE
 1771            INHINT
 1772  2         TS     THETAD
 1773            CCS    CDUTEMP         ATTACH SIGN OF ORIGINAL THETAD
 1774            XCH    MPAC            MPAC HAS POSITIVE CDUBIAS
 1775            TC     +4
 1776            CS     THETAD
 1777  2         TS     THETAD
 1778            CS     MPAC            COMPLEMENT INTEGER MULTIPLE
 1779            TS     K1ROLL          SCALED AT 1/2 REV FOR ENTRY
 1780            RELINT
 1781            TC     PHASCHNG
 1782  2         OCT    01503
 1783   REDO3.13 TC     FLAG2UP         SET CDUX FLAG
 1784  2         OCT    20000
 1785            TC     BANKCALL        CHANGE IMUCDU MODE TO RE-ENTRY
 1786  2         CADR   IMUREENT
 1787            TC     BANKCALL        WAIT FOR COMPLETION OF MODE SWITCH
 1788            CADR   IMUSTALL
 1789  2         TC     CURTAINS        CATCH-ALL FOR MODE SWITCH FAILURES
 1790            TC     PHASCHNG
 1791  2         OCT    01603
 1792  4         TC     ENDOFJOB
 1793   CM/SMTSK TC     RELAYON         SET SCS ENTRY MODE AND CM/SM SEPARATION
 1794  2         OCT    40014           DISCRETES
 1795            CAF    FIFTN
 1796            TC     NEWPHASE
 1797  2         OCT    00003
 1798            CAF    5SEC            SET CALL TO START PRE-ENTRY ATTITUDE
 1799            TC     WAITLIST        MANEUVER IN 5 SECS
 1800  2         CADR   ENTATASK
 1801  2         TC     TASKOVER
 1802   15/16TH  OCT    36000
 1803  8HIGH4    OCT    74000
 18034  ENTATASK CAF    PRIO12
 18035           TC     FINDVAC
 18036 2         CADR   ENTAJOB
 18037 4         TC     TASKOVER
 1804   ENTAJOB  TC     NEWMODE         SET MAJOR MODE TO PRE-ENTRY MANEUVER
 1805  2         OCT    00062
 1812            CAF    ZERO
 18122           TS     ROLLC           ROLLC = +0
 1813  2         TS     ROLLC + 1
 1814  2         TC     INTPRET
 18159  GOGETUNB ITC    0               COMPUTE DESIRED NAV BASE COORDS.
 1816  2                GETUNB
 1817            ITC    0               GET DESIRED S/C COORSD
 1818  2                CALCNBSC
 1819            VMOVE  0               TRANSFER DESIRED S/C UNIT VECTORS
 1820                   XSC
 1821  2         STORE  XSCD
 1822            VMOVE  0
 1823                   YSC
 1824  2         STORE  YSCD
 1825            VMOVE  0
 1826                   ZSC
 1827  2         STORE  ZSCD
 1828            ITC    0               BRANCH TO PERFORM MANEUVER TO PRE-ENTRY
 1829  2                ATTIJOB1        ATTITUDE
 1830  4ABORT33  OCT    00007           (OR OF ARRST,TABT,ABRT)
 18301 2         BANK   24
 18302  AVGON    CAF    PIPCAD24        CLEAR AND EXCHANGE PIPAS TO SAVE DELV
 18304 2         TC     ISWCALL         ACCUMULATED DURING COAST PERIOD
 18316           TC     FLAG2DWN        DISABLE FREE-FALL GYRO BIAS COMPENSATION
 18318 2         OCT    40000           (REMOVE DRIFT FLAG)
 183182          TC     STATEUP         SET BIAS FLAG
 1831842         OCT    04000
 1832            CS     PIPTIME +1
 18322 2         TS     TBASE5
 18324           CAF    SIX
 18326           TC     NEWPHASE
 18328 2         OCT    00005
 183296          CAF    BIT13           IF TFF2 FLAG NOT SET, DO WHAT SERVICER
 183298          MASK   STATE             WOULD HAVE DONE WHEN TFF = TFFMIN
 1833            CCS    A
 1833012         TC     GO/ON           TFF2 FLAG SET
 183302          TC     SETBRNSW        SET BURN TO SPS2 BACK UP SETTING
 1833032         OCT    00020
 183304          TC     FLAG1UP         SET INIT FLAG TO RE-MANEUVER TO SPS2 ATT
 1833052         OCT    00400
 183306          CAF    ONE
 1833072         TS     VGCNTR
 183308          CCS    REDOSPS1        TFF2 FLAG DOWN, SEE IF DO SPS1 AGAIN
 183309          TC     CONTINUE        NO
 18331           TC     CONTINUE
 1833112         TC     +1
 183312          TC     SETBRNSW        YES, SET BURN TO SPS1
 1833132         OCT    00010
 183314          CAF    LOCSPS1
 1833152         TS     VRCADR
 183316 CONTINUE CAF    THIRTY
 183317          TC     NEWPHASE
 1833182         OCT    00004
 183319          CS     TIME1
 18332 2         TS     TBASE4
 183321          CAF    2SEC24          START READACCS IN 2 SECS
 183322          TC     WAITLIST
 1833232         CADR   READACCS
 183324          CAF    90SEC24         SCHEDULE IGNITION IN 2 MINUTES
 183325          TC     WAITLIST
 1833262         CADR   PLUSX2
 18333           CAF    PRIO35
 183332          TC     NOVAC
 1833342         CADR   MODE32
 1833392         TC     TASKOVER
 18334  GO/ON    CAF    THREE
 183341          TC     NEWPHASE
 1833422         OCT    00002
 183343          CS     ONE
 183344          TC     NEWPHASE
 18335 2         OCT    00004
 18336           CAF    2SEC24          TURN ON READACCS IN 2 SECS
 18338           TC     WAITLIST
 1834  2         CADR   READACCS
 18342           CAF    PRIO35          JOB TO CHANGE MM AND FINISH DRIFT COMP
 18344           TC     NOVAC
 18346 2         CADR   MODE26
 183462 GO/ON1   CAF    PRIO12          DO ATTITUDE MANEUVER FOR SPS2 BURN
 183464          TC     FINDVAC
 1834662         CADR   ATTIJOB1 -1
 18348 2         TC     TASKOVER
 18349  2SEC24   DEC    200
 183495 90SEC24  DEC    9000
 183497 LOCSPS1  CADR   501SPS1
 1835  4PIPCAD24 CADR   PIPASR
 183502 MODE32   TC     NEWMODE         SET MAJOR MODE TO PRE-SPS2
 1835042         OCT    00032
 183506          TC     POSTJUMP        FINISH DRIFT COMPUTATIONS
 1835084         CADR   MODE26 +2
 18351  PLUSX2   CAF    18SEC24
 183512          TC     WAITLIST
 18352 2         CADR   GIMPOWON
 183521          TC     STATEDWN        REMOVE BIAS FLAG
 1835222         OCT    04000
 183523          TC     RELAYON         SET SCS +X TRANS DISCRETE (C27)
 1835242         OCT    40020
 183525          CAF    SEVENTN
 183526          TC     NEWPHASE
 1835272         OCT    4
 1835282         TC     TASKOVER
 183529418SEC24  DEC    1800
 18353  MODE26   TC     NEWMODE         SET MAJOR MODE TO HOLD SPS2 ATTITUDE
 1835312         OCT    00026             UNTIL TFFMIN
 183532          TC     FLAG1UP         SET INTP FLAG
 1835332         OCT    01000
 183534          CS     PIPTIME +1      CALL LASTBIAS ROUTINE
 183535          COM
 1835362         TS     MPAC
 183537          CAF    COMP2SEC
 183538          TC     POSTJUMP
 1835392         CADR   LASTBIAS
 18354 8COMP2SEC DEC    200 B +6
 18355 2         BANK   1
 18356  RELAYON  INDEX  Q
 1836            CS     0
 1837            INHINT
 1838            MASK   DSPTAB +13D
 1839            INDEX  Q
 1840            AD     0
 1841            TS     DSPTAB +13D
 1842            RELINT
 1843            INDEX  Q
 1844  2         TC     1
 1845   RELAYOFF INDEX  Q
 1846            CS     0
 1847            INHINT
 1848            MASK   DSPTAB +13D
 1849            AD     BIT15
 1850            TS     DSPTAB +13D
 1851            RELINT
 1852            INDEX  Q
 1853  2         TC     1
 1854   FLAG1UP  INDEX  Q
 1855            CS     0
 1856            INHINT
 1857            MASK   FLAGWRD1
 1858            INDEX  Q
 1859            AD     0
 1860            TS     FLAGWRD1
 1861            RELINT
 1862            INDEX  Q
 1863  2         TC     1
 1864   FLAG1DWN INDEX  Q
 1865            CS     0
 1866            INHINT
 1867            MASK   FLAGWRD1
 1868            TS     FLAGWRD1
 1869            RELINT
 1870            INDEX  Q
 1871  2         TC     1
 1872   FLAG2UP  INDEX  Q
 1873            CS     0
 1874            INHINT
 1875            MASK   FLAGWRD2
 1876            INDEX  Q
 1877            AD     0
 1878            TS     FLAGWRD2
 1879            RELINT
 1880            INDEX  Q
 1881  2         TC     1
 1882   FLAG2DWN INDEX  Q
 1883            CS     0
 1884            INHINT
 1885            MASK   FLAGWRD2
 1886            TS     FLAGWRD2
 1887            RELINT
 1888            INDEX  Q
 1889  2         TC     1
 188902 STATEUP  INDEX  Q
 188904          CS     0
 188906          INHINT
 188908          MASK   STATE
 18891           INDEX  Q
 188912          AD     0
 188914          TS     STATE
 188916          RELINT
 188918          INDEX  Q
 18892 2         TC     1
 188922 STATEDWN INDEX  Q
 188924          CS     0
 188926          INHINT
 188928          MASK   STATE
 18893           TS     STATE
 188932          RELINT
 188934          INDEX  Q
 1889362         TC     1
 1890   SETBRNSW CS     BURNMASK
 1891            INHINT
 1892            MASK   FLAGWRD2
 1893            INDEX  Q
 1894            AD     0
 1895            TS     FLAGWRD2
 1896            RELINT
 1897            INDEX  Q
 1898  2         TC     1
 1899  4BURNMASK OCT    00177
 1900   SETHETAD INHINT
 1901            CS     CDUX
 1902            COM
 1903            TS     THETAD
 1904            CS     CDUY
 1905            COM
 1906            TS     THETAD +1
 1907            CS     CDUZ
 1908            COM
 1909            TS     THETAD +2
 1910            RELINT
 1911  4         TC     Q
 1912   NINE     DEC    9
 1913   ELEVEN   OCT    00013
 19132  11DEC    EQUALS ELEVEN
 1914   TWELVE   OCT    00014
 1915   THIRTN   OCT    00015
 19152  THIRTEEN EQUALS THIRTN
 1916   FOURTN   OCT    00016
 1917   FIFTN    OCT    00017
 1918   SIXTN    OCT    00020
 1919   SEVENTN  OCT    00021
 1920   EIGHTN   OCT    00022
 1921   NINETEEN DEC    19
 1922   TWENTY0  OCT    00024
 19222  TWENTY   EQUALS TWENTY0
 1923   TWENTY1  OCT    00025
 1924   TWENTY2  OCT    00026
 1925   TWENTY3  OCT    00027
 1926   TWENTY4  OCT    00030
 1927  2TWENTY5  OCT    00031
 1928  2TWENTY6  DEC    26
 1929  2TWENTY7  DEC    27
 19292  TWENTY8  DEC    28
 19294  TWENTY9  DEC    29
 1930   THIRTY   DEC    30
 1931   30DEC    EQUALS THIRTY
 19315  THIRTY1  DEC    31
 19318  THIRTY2  DEC    32
 1932   FORTY    DEC    40
 1933   40DEC    EQUALS FORTY
 1934   FIFTY    DEC    50
 1935   50DEC    EQUALS FIFTY
 1936   SIXTY    DEC    60
 1937   60DEC    EQUALS SIXTY
 1940   100DEC   DEC    100
 1945   200DEC   DEC    200
 1950   300DEC   DEC    300
 1955   400DEC   DEC    400
 1960   500DEC   DEC    500
 1965   600DEC   DEC    600
 1966   SIXHNDRD EQUALS 600DEC
 1970   1000DEC  DEC    1000
 1975   2000DEC  DEC    2000
L       POWERED FLIGHT SUBROUTINES
R0001   THIS ROUTINE ENTERED AT CDUTRIG READS PRESENT CDU REGISTERS AND STORES T
 0002  9HEM SCALED AT ONE REVOLUTION AS A DP
R0003   VECTOR IN CDUTEMP. IT COMPUTES SIN,COS(CDUX,Y,Z) AND STORES THEM IN SINC
 0004  9DU,+2,+4 AND COSCDU,+2,+4 RESPECTIVELY
R0005   SCALED AT 2(+1). WHEN ENTERED AT THETRIG THE ROUTINE PERFORMS THE SAME F
 0006  9UNCTION WITH THE DESIRED CDU ANGLE REG-
R0007  4ISTERS THETAD,+1,+2. ENTER WITH C(X1) =6 FOR X,Y,Z ( =4 FOR Y,Z ONLY)
 0008            SETLOC 52000
 0009  2CDUTRIG  EXIT   0
 0010            INHINT
 0011            CS     CDUX
 0012            TS     CDUTEMP
 0013            CS     CDUY
 0014            TS     CDUTEMP +2
 0015            CS     CDUZ
 0016            TS     CDUTEMP +4
 0017            RELINT
 0018  2         TC     JUMP3
 0019  2THETRIG  EXIT   0
 0020            INHINT
 0021            CS     THETAD
 0022            TS     CDUTEMP
 0023            CS     THETAD +1
 0024            TS     CDUTEMP +2
 0025            CS     THETAD +2
 0026            TS     CDUTEMP +4
 0027  2         RELINT
 0028   JUMP3    CS     FLAGWRD2        TEST IF CDUX FLAG SET
 0029            MASK   BIT14           (CDUXFLAG MASK)
 0030            CCS    A
 0031            TC     JUMP8           IT IS NOT
 0032            CAF    LOW11
 0033            MASK   CDUTEMP
 0034            TS     CYL
 0035            CS     CYL
 0036            CS     CYL
 0037            CS     CYL
 0038            XCH    CYL
 0039  2         XCH    CDUTEMP
 0040  2JUMP8    TC     INTPRET
 0041   SINCOS   AST,1  0
 0042  2                2
 0043   REPEAT1  SMOVE* 1
 0044            COMP   RTB
 0045                   CDUTEMP +6,1
 0046                   CDULOGIC
 0047  2         STORE  CDUTEMP +6,1
 0048            NOLOD  1
 0049            SIN
 0050  2         STORE  SINCDU +6,1
 0051            COS*   0
 0052                   CDUTEMP +6,1
 0053  2         STORE  COSCDU +6,1
 0054            TIX,1  2
 0055            ABS    TSLT            TEST IF COS(THETAD+2) LESS THAN COS(60)
 00552           BOV    EXIT
 00554                  REPEAT1
 00556                  COSCDU +4
 00558                  2
 0056  2                NOGIMLOC        IT IS NOT. NO NEED TO ALARM
 00562           TC     ALARM
 00564 2         OCT    01407
 00566 2         TC     INTPRET
 00568 2NOGIMLOC ITCQ   0
 0057  8HIGH11   OCT    77760
R0058   THIS ROUTINE COMPUTES DESIRED CDU(GIMBAL) ANGLES GIVEN THE DESIRED NAV.
 0059  9BASE AXES IN XNB AS THREE HALF UNIT
R0060   VECTORS IN STABLE MEMBER COORDINATES. THE DESIRED CDUX,Y,Z APPEAR IN MPA
 0061  9C, +1, +2 AT THE SAME SCALING AS CDUX,
R0062  4Y,Z WITH THE INTERPRETER SET TO THE TP MODE
 0063   CALCCDU  ITA    1
 0064            ITC
 0065                   S1
 0066  2                CALCGTA
 0067            TEST   1               IF CDUXFLAG SET, RESCALE OGC TO 8 REVS
 0068            RTB
 0069                   CDUXFLAG
 0070                   GETOGC
 0071  2                CDUXFIX
 0072   GETOGC   VMOVE  1
 0073            RTB    ITCI
 0074                   OGC
 0075                   V1STO2S
 0076  8                S1
R0077   THIS ROUTINE COMPUTES THE MATRIX WHICH TRANSFORMS FROM STABLE MEMBER COO
 0078  9RDINATES TO NAV. BASE COORDINATES. IT
R0079   REQUIRES SIN,COS(CDUX,Y,Z) IN SINCDU, +2, +4 AND COSCDU, +2, +4 RESPECTI
 0080  9VELY SCALED TO ONE HALF. THE MATRIX IS
R0081  4STORED IN X,Y,ZNB AS THREE HALF UNIT ROW VECTORS
 0082   CALCSMNB DMP    1
 0083            COMP
 0084                   SINCDU +2
 0085  2                COSCDU +4
 0086            TSRT   0
 0087                   SINCDU +4
 0088  2                1
 0089            DMP    1
 0090            VDEF   VSLT
 0091                   COSCDU +2
 0092                   COSCDU +4
 0093                   1
 0094  2         STORE  XNB
 0095            DMP    1
 0096            TSLT
 0097                   SINCDU
 0098                   SINCDU +4
 0099                   1
 0100  2         STORE  26D
 0101            NOLOD  1
 0102            DMP
 0103  2                SINCDU +2
 0104            DMP    1
 0105            DSU
 0106                   COSCDU
 0107  2                COSCDU +2
 0108            DMP    1
 0109            COMP
 0110                   SINCDU
 0111  2                COSCDU +4
 0112            DMP    0
 0113                   COSCDU
 0114  2                SINCDU +2
 0115            DMP    2
 0116            DAD    VDEF
 0117            VSLT
 0118                   COSCDU +2
 0119                   26D
 0120                   -
 0121                   1
 0122  2         STORE  ZNB
 0123            NOLOD  1
 0124            VXV    VSLT
 0125                   XNB
 0126                   1
 0127  2         STORE  YNB
 0128  8         ITCQ   0
R0129   ROUTINE CALCSCNB TRANSFORMS A MATRIX OF HALF UNIT VECTORS ALONG SPACECRA
 0130  9FT AXES, XSCD, INTO A MATRIX OF HALF
R0131   UNIT VECTORS ALONG NAV. BASE AXES, XNB. ROUTINE CALCNBSC DOES THE INVERS
 0132  9E, STORING THE MATRIX OF UNIT VECTORS
R0133  4ALONG SPACECRAFT AXES IN XSC
 0134   CALCSCNB VXSC   0
 0135                   XSCD
 0136  2                COS33
 0137            VXSC   1
 0138            BVSU
 0139                   ZSCD
 0140                   SIN33
 0141  2         STORE  XNB
 0142            VMOVE  0
 0143                   YSCD
 0144  2         STORE  YNB
 0145            VXSC   0
 0146                   XSCD
 0147  2                SIN33
 0148            VXSC   1
 0149            VAD
 0150                   ZSCD
 0151                   COS33
 0152  2         STORE  ZNB
 0153  8         ITCQ   0
 0154   CALCNBSC VXSC   0
 0155                   XNB
 0156  2                COS33
 0157            VXSC   1
 0158            VAD
 0159                   ZNB
 0160                   SIN33
 0161  2         STORE  XSC
 0162            VMOVE  0
 0163                   YNB
 0164  2         STORE  YSC
 0165            VXSC   0
 0166                   XNB
 0167  2                SIN33
 0168            VXSC   1
 0169            VSU
 0170                   ZNB
 0171                   COS33
 0172  2         STORE  ZSC
 0173  2         ITCQ   0
 0174   SIN33    2DEC   0.544639000
 0175  8COS33    2DEC   0.838670600
R0176   THIS ROUTINE COMPUTES INCREMENTAL CHANGES IN CDU(GIMBAL) ANGLES FROM INC
 0177  9REMENTAL ANGULAR CHANGES ABOUT SM AXES.
R0178   IT REQUIRES SM INCREMENTS AS A DP VECTOR IN VAC SCALED AT ONE REVOLUTION
 0179  9, SIN,COS(CDUX,Y,Z) IN SINCDU, +2, +4
R0180  4AND COSCDU, +2, +4 RESPECTIVELY SCALED TO ONE HALF. CDU INCREMENTS APPEA
 0181  9R IN THE VAC SCALED AT ONE REV.
 0182   SMCDURES DMP    0
 0183                   32D
 0184  2                COSCDU +2
 0185            DMP    1
 0186            BDSU   DDV
 0187                   36D
 0188                   SINCDU +2
 0189                   -
 0190                   COSCDU +4
 0191  2         STORE  22D
 0192            NOLOD  2
 0193            DMP    TSLT
 0194            BDSU
 0195                   SINCDU +4
 0196                   1
 0197                   34D
 0198  2         STORE  24D
 0199            DMP    0
 0200                   32D
 0201  2                SINCDU +2
 0202            DMP    1
 0203            DAD    TSLT
 0204                   36D
 0205                   COSCDU +2
 0206                   -
 0207                   1
 0208  2         STORE  26D
 02085           VMOVE  1
 0209            ITCQ
 02095 8                22D
R0210   THIS ROUTINE COMPUTES INCREMENTAL ANGULAR CHANGES ABOUT NAV. BASE AXES F
 0211  9ROM INCREMENTAL CDU ANGLE CHANGES. IT
R0212   REQUIRES THE CDU INCREMENTS AS A DP VECTOR IN DCDU, +2, +4, SCALED AT ON
 0213  9E REVOLUTION. SIN,COS(CDUX,Y,Z) MUST BE
R0214   IN SINCDU, +2, +4, AND COSCDU, +2, +4 RESPECTIVELY SCALED AT ONE HALF. I
 0215  9NCREMENTAL NAV. BASE ANGLES APPEAR IN
R0216  4DNB, +2, +4 SCALED AT ONE REVOLUTION
 0217   CDUNBRES DMP    1
 0218            TSLT
 0219                   COSCDU +4
 0220                   DCDU +2
 0221                   1
 0222  2         STORE  26D
 0223            NOLOD  1
 0224            DMP
 0225  2                SINCDU
 0226            DMP    1
 0227            DSU
 0228                   COSCDU
 0229  2                DCDU +4
 0230            DMP    0
 0231                   26D
 0232  2                COSCDU
 0233            DMP    1
 0234            DAD
 0235                   SINCDU
 0236  2                DCDU +4
 0237            TSRT   0
 0238                   DCDU
 0239  2                1
 0240            DMP    2
 0241            DAD    VDEF
 0242            VSLT
 0243                   SINCDU +4
 0244                   DCDU +2
 0245                   -
 0246                   1
 0247  2         STORE  DNB
 0248  8         ITCQ   0
R0249   THIS ROUTINE COMPUTES INCREMENTAL CHANGES TO CDU ANGLES FROM INCREMENTAL
 0250  9 ANGULAR CHANGES ABOUT NAV. BASE AXES.
R0251   IT REQUIRES THE INCREMENTAL NAV. BASE ANGLES AS A DP VECTOR IN VAC SCALE
 0252  9D AT 1 REVOLUTION. SIN,COS(CDUX,Y,Z)
R0253   MUST BE IN SINCDU, COSCDU RESPECTIVELY SCALED AT 2(+1). IT LEAVES CDU IN
 0254  9CREMENTS AS A DP VECTOR IN DCDU AT THE
R0255  4SAME SCALING
 0256   NBCDURES DMP    0
 0257                   36D
 0258  2                SINCDU
 0259            DMP    1
 0260            DSU    DDV
 0261                   34D
 0262                   COSCDU
 0263                   -
 0264                   COSCDU +4
 0265  2         STORE  DCDU +2
 0266            NOLOD  2
 0267            DMP    COMP
 0268            TSLT   DAD
 0269                   SINCDU +4
 0270                   1
 0271                   32D
 0272  2         STORE  DCDU
 0273            DMP    0
 0274                   34D
 0275  2                SINCDU
 0276            DMP    1
 0277            DAD    TSLT
 0278                   36D
 0279                   COSCDU
 0280                   -
 0281                   1
 0282  2         STORE  DCDU +4
 0283  8         ITCQ   0
R0284   THIS ROUTINE RESOLVES THE SMALL ANGLE VECTOR STORED AS SM COMPONENTS IN
 0285  9VAC, SCALED TO ONE REVOLUTION, INTO
R0286   COMMANDED CDU ANGLE CHANGES VAC, +2,+4, SCALED TO ONE REVOLUTION, THROUG
 0287  9H THE DESIRED CDU ANGLES DEFINED BY
R0288  4THETAD,+1,+2. THE ROUTINE THEN INCREMENTS THETAD,+1,+2 IN 2S COMP. AT CD
 0289  9UX,Y,Z SCALING
 0290   CDUDRIVE ITA    1
 0291            AXT,1  ITC
 0292                   S2
 0293                   4
 0294  2                THETRIG
 0295   CDUDRVE2 ITC    0
 0296  2                SMCDURES
 0297            TEST   1               TEST IF CDUX FLAG SET
 0298            TSRT
 0299                   CDUXFLAG
 0300                   CDUDRVE1
 0301                   32D
 0302                   4
 0303  2         STORE  32D
 0304   CDUDRVE1 NOLOD  2               RESCALE DCDU AND BRANCH TO
 0305            VSLT   RTB             INCREMENT THETAD
 0306            ITCI
 0307                   1
 0308                   INCRCDUS
 0309  8                S2
R0367   THE FOLLOWING SERIES OF CLOSED SUBROUTINES COMPUTE THE REQUIRED VELOCITY
 0368  9 VR, SCALED TO 2(+8)M/CS, VELOCITY-TO-BE
R0369   -GAINED VG, SCALED TO 2(+7)M/CS, AND THE MDOIFIED B-VECTOR CBDT, SCALED
 0370  9TO 2(+4)M/CS, FOR THE DIFFERENT PHASES
R0371  4OF POWERED FLIGHT.
 0372   CALCVGB  VMOVE  0
 0373                   VR
 0374  2         STORE  CBDT            (CBDT USED HERE AS TEMP. STORAGE FOR VR)
 0375            ITA    1
 0376            LXA,1  ITCI
 0377                   S2
 0378                   XSHIFT
 0379  2                VRCADR
 0380   CALCCBDT NOLOD  1
 0381            VSU    VSLT
 0382                   CBDT            OLD VR
 0383  2                4               D(VR) TO PD SCALED AT 2(+4) M/CS
 0384            VXSC   1
 0385            VAD    VXSC
 0386                   GRAVITY
 0387                   DELTAT
 0388                   -
 0389                   CFACTOR         SCALED AT 2(+0)
 0390  2         STORE  CBDT            SCALED AT 2(+4) M/CS
 0391            VSLT   1
 0392            VSU    STZ
 0393                   VR
 0394                   1
 0395                   VN
 0396                   OVFIND          FIRST PASS THRU CALCVGB MAY OVERFLOW
 0397  2         STORE  VG              SCALED AT 2(+7) M/CS
 0398            ITCI   0
 0399  8                S2
R0400   THESE ROUTINES COMPUTE VR FOR THE TWO NOMINAL SPS BURNS OF FLIGHT 501
 0401   501SPS1  AXT,1  1               C(X1) = +0  (SPS1)
 0402            AXT,2  ITC             C(X2) =+1  (SPS1)
 0403                   0
 0404                   1
 0405  2                +5
 0406   501SPS2  AXC,1  1               C(X1) = -2  (SPS2)
 0407            AXC,2                  C(X2) =-1  (SPS2)
 0408                   2
 0409  2                1
 0410            DMOVE* 6
 0411            DDV    DSU
 0412            DSQ    DSU*
 0413            ABS    DMP
 0414            DDV*   TSRT
 0415            SQRT   SIGN
 0416            VXSC
 0417                   SEMILAT,1       SCALED AT 2(+27)M
 0418                   RMAG                      2(+25)M
 0419                   DP2(-2)
 0420                   ESQ(VR),1       SCALED AT 2(+4)
 0421                   MUE             SCALED AT 2(+38) M(+3)/CS(+2)
 0422                   SEMILAT,1
 0423                   5
 0424                   X2
 0425  2                UNITR           VRAD TO PD  SCALED AT 2(+11) M/CS
 0426            DMOVE  2
 0427            DMP*   DDV
 0428            SQRT
 0429                   MUE(41)
 0430                   SEMILAT,1
 0431                   RMAGSQ          SCALED AT 2(+50)M(+2)
A0432                                   VHOR MAG. TO PD SCALED AT 2(+9) M/CS
 0433            VXV    3
 0434            UNIT   VXV
 0435            VXSC   VAD
 0436            VSLT
 0437                   UNITR
 0438                   VIGNTION
 0439                   UNITR
 0440                   -
 0441                   -
 0442                   3
 0443  2         STORE  VR
 0453            ITC    0
 0454  8                CALCCBDT
R0455  4THIS ROUTINE COMPUTES VG, CBDT, FOR LANDING AREA CONTROL DURING BOOST AB
 0456  9ORTS ON FLIGHT 501
 0457   501ABORT VXV    1
 04571           VSLT
 0458                   RN
 0459                   VN
 04591 2                1               4 SCALED 2(+31) M(+2)/CS
 0460            NOLOD  1
 0461            UNIT
 0462  2         STORE  UNITRXV         UNIT NORMAL TO PLANE, IP  2(+1)
 0463            DSU    1
 0464            TSRT
 0465                   RINTALT
 0466                   RMAG
 0467  2                2               (RE - R) MAG SCALED 2(+27)
 0468            VXV    1
 0469            VSLT
 0470                   UNITRXV         IP
 0471                   UNITR           IR
 0472                   1               TIMES 2
 0473  2         STORE  UNITHORZ        UNIT HORIZONTAL IN PLANE, IHP  2(+1)
 0474            NOLOD  1
 0475            DOT
 0476  2                VN              IHP.V  SCALED 2(+8)
 0477            DOT    2
 0478            TSRT   DDV
 0479            DMP
 0480                   VN
 0481                   UNITR           IR.V  SCALED 2(+8)
 0482                   3               TIMES 2(-3)
 0483                   -               DIVIDE BY IHP.V SCALED 2(+8)
 0484  2                RINTALT         RE COT(GAMMA) SCALED  2(+28)
 0485            VSQ    1
 0486            DDV
 0487                   0               H SCALED 2(+31)
 0488  2                MUE             H(SQ)/MUE = P SCALED 2(+24)
 0489            VSQ    1
 0490            TSRT   DDV
 0491                   VN              V(SQ) 2(+14)
 0492                   4               TIMES 2(-4)
 0493  2                MUE             V(SQ)/MUE  SCALED 2(-20)
 0494            DDV    2
 0495            DSU    DMP
 0496            BDSU
 0497                   DP2(-4)
 0498                   RMAG
 0499                   -
 0500                   RINTALT
 0501  2                DP2(-4)         (1+RE((V**2/2 MUE)-1/R))  SCALED 2(+4)
 0502            NOLOD  2
 0503            BMN    SQRT
 0504            DMP    TSLT
 0505                   SMACHECK        SMA LESS THAN RE/2
 0506                   V400
 0507  2                2               VE TO PD SCALED 2(+7)  M/CS
 0508            DSU    1
 0509            BPL
 0510                   VCRIT           22,000 FT/SEC SCALED 2(+7) M/CS
 0511                   -               VE SCALED 2(+7) M/CS
 0512  2                GETRANGE        SET RANGE TO MINRANGE
 0513            DMP    2
 0514            DAD    DMP
 0515            DAD    TSLT
 0516                   14D             VE SCALED 2(+7)
 0517                   KRANGE2
 0518                   KRANGE1
 0519                   14D             VE SCALED 2(+7)
 0520                   KRANGE0
 0521                   4
 0522  2         STORE  20D             ENTRY RANGE ANGLE SCALED 2(+0) REVS.
 0523   GOTRANGE NOLOD  1
 0524            COS    VXSC
 0525  2                RTATLANT        RADIAL COMP UNIT TARG VECT  2(+2)
 0526            SIN    1
 0527            TSLT
 0528                   20D
 0529  2                1               SINE OF RANGE ANGLE  2(+0)
 0530            VXV    1
 0531            UNIT
 0532                   RTATLANT
 0533                   UNITR
 0534  2         STORE  22D             -UNITN, -IN, DESIRED NORMAL SCALED 2(+1)
 0535            NOLOD  2
 0536            VXV    VXSC
 0537            VAD    VSLT
 0538                   RTATLANT
 0539                   -
 0540                   -
 0541                   1
 0542  2         STORE  RTARG           UNIT TARGET VECTOR SCALED 2(+1)
 0543            DMP    5
 0544            DDV    DSU
 0545            BMN    SQRT
 0546            DMP    BDSU
 0547            BDDV   BOV
 0548            RTB    TSRT
 0549                   RINTALT         RE SCALED 2(+25)
 0550                   -
 0551                   -               P SCALED 2(+24)
 0552                   DP2(-6)
 0553                   GAMCHECK        COT(GAMMAE) SQ NEGATIVE
 0554                   RMAG            R COT(GAMMAE) SCALED 2(+28)
 0555                   -               RE COT(GAMMA) SCALED 2(+28)
 0556                   -               (RE - R) SCALED 2(+27)
 0557                   TANCHECK        TAN(THETAFF/2) EXCEEDS ----
 0558                   FRESHPD         ZERO PD POINTER
 0559  2                7D              X = TAN(THETAFF/2) SCALED 2(+6)
 0560            NOLOD  1
 0561            DSQ    DAD
 0562  2                DP2(-12)        DENOMINATOR SCALED 2(+12)
 0563            NOLOD  2
 0564            DSU    COMP
 0565            DDV
 0566                   DP2(-11)        1 - X(SQ) SCALED 2(+12)
 0567  2                2               COSEFF SCALED 2(+0)
 0568            DOT    2
 0569            TSLT   DSU
 0570            BPL
 0571                   UNITR
 0572                   RTARG
 0573                   2               COS ANGLE R TO TARG 2(+0)
 0574                   4               COS FREE FALL ANGLE 2(+0)
 0575  2                PASTIT          FF ANGLE EXCEEDS ANGLE TO TARGET
 0576            TSRT   1
 0577            DDV    VXSC
 0578                   0
 0579                   5
 0580                   2               SINEFF SCALED 2(+0)
 0581  2                UNITHORZ        IHP SINEFF SCALED 2(+1)
 0582            VXSC   1
 0583            VAD    VSU
 0584                   UNITR
 0585                   4               IR COSEFF 2(+1)
 0586                   -               UNIT VECTOR ALONG ENTRY-POINT VECT 2(+1)
 0587  2                RTARG           MINUS UNIT TARGET VECTOR  2(+1)
 0588            NOLOD  1
 0589            ABVAL
 0590  2         STORE  2               D SCALED 2(+2)
 0591            ABVAL  2
 0592            VXSC   DOT
 0593            TSRT
 0594                   VN
 0595                   UNITHORZ
 0596                   22D             -UNITN 2(+1)
 0597  2                1               DELTA V NORMAL SCALED 2(+11)
 0598            ABVAL  2
 0599            BDSU   TSLT
 0600            ABS
 0601                   DIFFVECT        MAG OLD DIFFVECT 2(+2) AFTER ABVAL
 0602                   2               NEW MAG DIFFVECT 2(+2)
 0603  2                1               DELD SCALED 2(+1)
 0604            NOLOD  0
 0605  2         STORE  0               DELD TO PD 0 ALSO
 0606            DMP    3
 0607            TSRT   DDV
 0608            DAD    BDDV
 0609            BOV    TSRT
 0610                   DELTAT
 0611                   2
 0612                   13D
 0613                   -
 0614                   TGOBIAS         5 SECS
 0615                   -               ATTEMPT TO COMPUTE NEW ANORMAL 2(-12)
 0616                   ANOVFLOW        IF OVF, ANORMAL = 8 FT/S/S SIGN DELTA V
 0617                   3               SCALE AN TRIAL BACK TO 2(-9)
 0618  2         STORE  ANORMAL         ANORMAL SCALED 2(-9) M/CS(+2)
 0619   GO-ON    NOLOD  1
 0620            VXSC
 0621  2                UNITRXV         ANORMAL ALONG IP SCALED 2(-8)
 0622            VXSC   1
 0623            ABVAL
 0624                   DELV
 0625                   KPIP
 0626  2         STORE  4               MEASURED DELTA V SCALED 2(+5)
 0627            NOLOD  3
 0628            DDV    DMP
 0629            TSLT   VXSC
 0630            VAD    UNIT
 0631                   DELTAT
 0632                   FULHAM          APPROX COS OF THRUST ONTO HORIZ PLANE
 0633                   5
 0634  2                UNITHORZ        COEF OF SIN TERM OF IT SCALED 2(+1)
 0635            DDV    1
 0636            ASIN   DAD
 0637                   RVH             RADIUS TO VISUAL HORIZON SCALED 2(+26) M
 0638                   RMAG            R SCALED 2(+25)
 0639  2                LOOKANG         PHI SCALED 2(+0) REV.
 0640            NOLOD  1
 0641            COS    VXSC
 0642  2                UNITR           COS(PHI) IR SCALED 2(+2)
 0643            SIN    2
 0644            VXSC   VSU
 0645            VSLT
 0646                   18D             PHI
 0647                   12D             SIN COEF SCALED 2(+1)
 0648                   -               COS(PHI) SCALED 2(+2)
 0649  2                1               UNIT FINAL, IT, SCALED 2(+1)
 0650            DMP    3
 0651            DDV    TSLT
 06515           BOV    TSRT
 0652            VXSC   RTB
 0653                   2               D  2(+2)
 0654                   4               DELTA V  2(+5)
 0655                   0               DELTA D  2(+1)
 06554                  1               IS MAG VG GR THAN 2(+5) M/CS
 06556                  FIXVG           IF YES, SET MAG VG TO 2(+5) M/CS
 06558                  1               IF NO, SCALE MAG VG BACK TO 2(+6)
 0656                   -               IT  2(+1)
 0657                   FRESHPD         ZERO PD POINTER
 0658  2         STORE  VG              VG SCALED 2(+7) M/CS
 0659   PREXIT   VMOVE  0
 0660                   6
 0661  2         STORE  DIFFVECT        SAVE NEW DIFFVECT SCALED 2(+1)
 0662            VMOVE  0
 0663                   ZEROVEC
 0664  2         STORE  CBDT            CBDT = 0 FOR 501 ABORTS
 0665            ITCI   0
 0666  2                S2              RETURN
 0667  2CHEKEXIT TC     INTPRET         EXIT FOR VR CHECK FAILURES
 0668            RTB    1
 0669            ITC
 0670                   FRESHPD         ZERO PD POINTER
 0671  2                VRFAIL
 0672   ANOVFLOW SIGN   0
 0673                   ANPSEUDO        AN = 8 FT/S/S SIGNED WITH DELTA V
 0674                   12D             DELTA V
 0675  2         STORE  ANORMAL
 0676            ITC    0
 0677  2                GO-ON
 06771  FIXVG    VMOVE  1
 06772           VXSC   RTB
 06773                  -               IT  2(+1)
 06774                  DP2(-1)
 06775                  FRESHPD         ZERO PD POINTER
 06776 2         STORE  VG              MAG VG 2(+5) M/CS SCALED 2(+7)
 06777           ITC    0
 06778 2                PREXIT          GO CLOSE OUT 501 ABORT
 0678   GETRANGE DMOVE  0
 0679                   MINRANGE
 0680  2         STORE  20D             FREEZE RANGE ANGLE AT MINRANGE
 0681            ITC    0
 0682  2                GOTRANGE        CONTINUE
 0683   PASTIT   EXIT   0
 0684            TC     ALARM
 0685            OCT    01403
 0686  2         TC     CHEKEXIT
 0687   SMACHECK EXIT   0
 0688            TC     ALARM
 0689            OCT    01404
 0690  2         TC     CHEKEXIT
 0691   GAMCHECK EXIT   0
 0692            TC     ALARM
 0693            OCT    01405
 0694  2         TC     CHEKEXIT
 0695   TANCHECK EXIT   0
 0696            TC     ALARM
 0697            OCT    01406
 0698  2         TC     CHEKEXIT
 0699   RINTALT  2DEC   6500085 B-25    400K FT RADIUS
 0700   DP2(-4)  2DEC   0.0625
 0701   DP2(-6)  2DEC   0.015625
 0702   DP2(-11) 2DEC   0.000488281
 0703   DP2(-12) 2DEC   0.000244141
 0704   KRANGE0  2DEC   0.188045173                     2(+4)
 0705   KRANGE1  2DEC   -.713839193                     2(+11)
 0706   KRANGE2  2DEC   0.681759381                     2(+18)
 0707   MINRANGE 2DEC   0.019010080     6.8436288 DEG   2(+0) REVS.
 0708   V400     2DEC   0.865198746     110.7454396     2(+7) M/CS
 0709   TGOBIAS  2DEC   0.000059605     5 SECS          2(+23) CS
 0710   VCRIT    2DEC   0.523875000     22,000 FT/SEC   2(+7) M/CS
 0711   ANPSEUDO 2DEC   0.124846080     8 FT/S/S        2(-9) M/CS/CS
 0712   RE       2DEC   0.190084130     6.378165 E6 M   2(+25) M
 0713   RVH      2DEC   0.095042065     6.378165 E6 M   2(+26) M
 0714  8FULHAM   2DEC   0.9397046       COS 20 DEG.
R0715  4THESE ROUTINES COMPUTE VR TO ACHIEVE A CIRCULAR EARTH- OR MOON-CENTERED
 0716  9ORBIT
 0717   EARTHORB DMOVE  1
 0718            ITC
 0719                   MUE
 0720  2                SQRTMU/R
 0721   LUNDEBST DMOVE  1
 0722            INCR,1
 0723                   MUM
 0724  2                6D
 0725   SQRTMU/R NOLOD  2
 0726            DDV    TSLT*
 0727            SQRT
 0728                   RMAG
 0729                   8D,1            C(X1) =14-N  (EARTH)
A0730                                         =20-N  (MOON)
 0731            VXV    1
 0732            UNIT   VXSC
 0733                   UNITR
 0734                   UNITN
 0735  2         STORE  VR              VR SCALED AT 2(+8)M/CS
 0736            ITC    0
 0737  8                CALCCBDT
R0738  4THIS ROUTINE COMPUTES VR TO ACHIEVE HYPERBOLIC VELOCITY VF FOR TRANSEART
 0739  9H INJECTION
 0740   TRANSEAR DDV    1
 0741            TSLT*
 0742                   MUM
 0743                   RMAG
 0744  2                4,1
 0745            UNIT   0
 0746                   VF              VF SCALED AT 2(+4)M/CS
 0747  2         STORE  UNITF
 0748            NOLOD  4
 0749            DOT    DAD
 0750            DMP    TSLT
 0751            BDDV   DAD
 0752            SQRT
 0753                   UNITR
 0754                   DP2(-2)
 0755                   28D             (VF SQ)
 0756                   3
 0757                   -
 0758                   DP2(-10)
 0759  2         STORE  26D             SCALED AT 2(+5)
 0760            NOLOD  1
 0761            DAD    VXSC
 0762                   DP2(-5)
 0763  2                UNITF
 0764            DSU    2
 0765            VXSC   VAD
 0766            VXSC   VSLT
 0767                   26D
 0768                   DP2(-5)
 0769                   UNITR
 0770                   -
 0771                   30D             (VF)
 0772                   2
 0773  2         STORE  VR              VR SCALED AT 2(+8)M/CS
 0774            ITC    0
 0775  2                CALCCBDT
 0776   DP2(-5)  2DEC   0.03125
 0777  8DP2(-10) 2DEC   0.000976563
R0778   THIS ROUTINE COMPUTES VR TO ACHIEVE A TRANSLUNAR ELLIPSE DEFINED BY A TA
 0779  9RGET VECTOR RTRNSLUN AND A SEMI MAJOR
R0780  4AXIS SMA
 0781   TRANSLUN TSLT   1
 0782            SQRT
 0783                   MUE
 0784  2                1
 0785            DMOVE  1
 0786            TSRT*
 0787                   30D             (RN)
 0788  2                10D,1           RN RESCALED TO 2(+26)M
 0789            VMOVE  2
 0790            VSRT*  BVSU
 0791            UNIT   VSRT
 0792                   RN
 0793                   10D,1           RTRNSLUN-RMAG SCALED AT 2(+25)M
 0794                   RTRNSLUN
 0795  2                1
 0796            VSRT   1
 0797            BVSU
 0798                   UNITR
 0799                   1
 0800  2         STORE  UNITD
 0801            NOLOD  1
 0802            VAD
 0803                   UNITR
 0804  2         STORE  UNITS
 0805            ABVAL  2
 0806            DAD    DAD
 0807            TSRT
 0808                   RTRNSLUN
 0809                   30D             (C)
 0810                   -               (RN)
 0811                   1
 0812  2         STORE  S               S SCALED AT 2(+26)M
 0813            NOLOD  1
 0814            DSU    TSLC
 0815                   30D             (C)
 0816                   X2
 0817  2         STORE  DN
 0818            NOLOD  1
 0819            TSRT*  BDSU
 0820                   6,2
 0821  2                SMA
 0822            DMP    3
 0823            BDDV   INCR,2
 0824            TSLT*  SQRT
 0825            SIGN   VXSC
 0826                   SMA
 0827                   DN
 0828                   -
 0829                   16D
 0830                   0,2
 0831                   SGNTHETA
 0832  2                UNITS
 0833            TSRT   1
 0834            BDSU   TSRT
 0835                   S
 0836                   6D
 0837                   SMA
 0838  2                4
 0839            DMP    4
 0840            BDDV   SQRT
 0841            TSRT   VXSC
 0842            VAD    VSLT
 0843            VXSC
 0844                   SMA
 0845                   S
 0846                   -
 0847                   6
 0848                   UNITD
 0849                   -
 0850                   9D
 0851  2         STORE  VR              VR SCALED AT 2(+8)M/CS
 0852            ITC    0
 0853  2                CALCCBDT
 0854   MUE      2DEC   0.145011008     3.98603223 E14 SCALED 2(+38)M(+3)/CS(+2)
 0855   MUM      2DEC   0.114151696     4.90277800 E08 SCALED 2(+32)M(+3)/CS(+2)
P0856   THIS ROUTINE COMPUTES THE DESIRED THRUST DIRECTION AS A HALF UNIT VECTOR
 0857  9 XSC. IT COMPUTES THE HALF UNIT VECTOR
R0858   YSC ALONG RN*XSC  (I.E. DEFINES A PITCH AXIS HORIZONTAL, YAW AXIS UP ROL
 0859  9L ATTITUDE) AND ZSC ALONG XSC*YSC. IT
R0860   REQUIRES PRIOR PASSES THROUGH ROUTINES CALCRVG AND CALCVGB TO ESTABLISH
 0861  9UNITR, VG, AND CBDT. X1 MUST CONTAIN
R0862  40,2,4... TO LOAD THE APPROPRIATE INTEGRATED INITIAL THRUST ACCELERATION
 0863  9MAGNITUDE ATDT
 0864   CALCXSC  UNIT   0
 0865                   VG
 0866  2         STORE  UNITVG
 0867            NOLOD  2
 0868            VPROJ  VSLT
 0869            BVSU
 0870                   CBDT            SCALED AT 2(+4) M/CS
 0871                   2
 0872  2                CBDT
 0873            NOLOD  5
 0874            ABVAL  DDV*
 0875            DSQ    BDSU
 0876            SQRT   DMP*
 0877            TSLT   VXSC
 0878            VAD    UNIT
 0879                   ATDT,1          SCALED AT 2(+5)M/CS
 0880                   NEARONE
 0881                   ATDT,1
 0882                   2
 0883                   UNITVG
 0884  2         STORE  XSC
 0885            NOLOD  2
 0886            VXV    UNIT
 0887            COMP
 0888                   UNITR
 0889  2         STORE  YSC
 08891           TEST   1
 08892           VMOVE  COMP
 08893                  SPS2FLAG
 08894                  HEADWN2
 08895                  YSC
 08896 2         STORE  YSC
 0890   HEADWN2  NOLOD  2
 0891            VXV    UNIT
 0892            COMP
 0893                   XSC
 0894  2         STORE  ZSC
 0895  8         ITCQ   0
R0896            THIS ROUTINE RESOLVES THE VECTOR IN RTINIT THROUGH AN ANGULAR R
 0897  9OTATION WIE(DTEAROT) SCALED AT ONE REV-
R0898   OLUTION ABOUT THE UNIT POLAR AXIS UMITW. IT REQUIRES DTEAROT SCALED AT 2
 0899  9(+28)CS. IT LEAVES THE RESOLVED
R0900   VECTOR IN RT WITH EASTERLY AND NORMAL COMPONENTS IN RTEAST AND RTNORM RE
 0901  9SPECTIVELY, AT THE SAME SCALING. FOR
R0902  4CONTINUOUS UPDATING ONLY ONE ENTRY AT EARROT1 IS REQUIRED, WITH SUBSEQUE
 0903  9NT ENTRIES AT EARROT2
 0904   EARROT1  VXV    1
 0905            VSLT
 0906                   UNITW
 0907                   RTINIT
 0908                   2
 0909  2         STORE  RTEAST
 0910            NOLOD  1
 0911            VXV    VSLT
 0912                   UNITW
 0913                   1
 0914  2         STORE  RTNORM
 0915   EARROT2  STZ    1               BRANCH TO OVERADAY UNTIL DTEAROT
 0916            DDV    BOV             LESS THAN ONE SIDEREAL DAY
 0917                   OVFIND
 0918                   DTEAROT
 0919                   1/WIE           TIME FOR ONE SIDEREAL REVOLUTION
 0920                   OVERADAY
 0921  2         STORE  30D
 0922            NOLOD  2
 0923            COS    DSU
 0924            VXSC
 0925                   DP2(-1)
 0926  2                RTNORM
 0927            SIN    2
 0928            VXSC   VAD
 0929            VAD
 0930                   30D
 0931                   RTEAST
 0932                   RTINIT
 0933  2         STORE  RT
 0934  2         ITCQ   0
 0935   OVERADAY SIGN   1
 0936            BDSU
 0937                   1/WIE
 0938                   DTEAROT
 0939                   DTEAROT
 0940  2         STORE  DTEAROT
 0941            BPL    0               GO BACK WITHOUT DISTURBING QPRET.
 0942                   1/WIE           ANY POSITIVE CONSTANT WILL DO.
 0943  2                EARROT2
 0944  81/WIE    2DEC   0.032098629     8.61641000 E4 SECS SCALED AT 2(+28)CS
R0945  2CONVERSION CONSTANTS FOR FREE FALL INTEGRATION PROGRAM
 0946   SCLRAVMD 2DEC   .512
 0947   SCLRMDAV 2DEC   1000 B-10
 0948   SCLTAVMD 2DEC   4.4384169 B-3
 0949   SCLVAVMD 2DEC   .64876819
 0950  3SCLVMDAV 2DEC   .770691300
R0951   POWERED FLIGHT CONSTANTS. DELCDU SCALED AT KE/2 REVS (KE =A/P GAIN=1.5)
 0952  9EVS (KE =A/P GAIN =1.5)
 0957   DELCDU   2DEC   0.00566                            ( =1.02 DEG)
 0958            2DEC   0.00462                            ( =0.83 DEG)
 0959            2DEC   0.00872                            ( =1.57 DEG)
 0960   MUE(41)  2DEC   .145011008 B-3  SCALED AT 2(+41)M(+3)/CS(+2)
P0963   ROUTINE CALCMANU COMPUTES THE SEQUENCE OF MANUEVERS REQUIRED IN GOING FR
 0964  9OM AN INITIAL ATTITUDE DEFINED BY THE
R0965   EULER ANGLES IN THETAD,+1,+2 WHICH ARE THE PRESENT OUTER, MIDDLE, INNER
 0966  9GIMBAL ANGLES, TO AN ATTITUDE DEFINED
R0967   BY THE MATRIX X,Y,ZSCD, THE DESIRED BODY AXES. CALCMANU WILL EXIT WITH A
 09671 9 MANEUVER ANGLE IN THETAMAN SCALED AT
R09672  1 REV, AND THE HALF UNIT VECTOR IN WC. ROTATIONS ARE BASED ON A PITCH/YA
 09673 9W-THEN ROLL POLICY. IF THIS
R09674  POLICY WOULD CAUSE GIMBAL LOCK, A ROLL-PITCH/YAW-ROLL IS ADOPTED. IN EXT
 09675 9REMELY RARE CASES, INVOLVING MANEU-
R09676  VERS FROM ONE GIMBAL LOCK AREA TO THE OTHER, THE POLICY MAY BE PITCH/YAW
 09677 9-ROLL-PITCH/YAW-ROLL, OR EVEN ROLL-
R09678  PITCH/YAW-ROLL-PITCH/YAW-ROLL. IN ALL CASES, IF THE MANEUVER IS A ROLL,
 09679 9ROLLFLAG WILL BE ON. IF THERE IS NO
R0968   MANEUVER REQUIRED,(VEHICLE LESS THAN ABOUT 3 DEGS AWAY FROM DESIRED ATTI
 09681 9TUDE),  CALCFLAG WILL BE OFF.
R09682  OTHERWISE, CALCFLAG IS ON. CALCMANU PRESUMES THAT INITIAL CONDITIONS AND
 0969  9 FINAL CONDITIONS ARE NOT IN GIMBAL LOCK
 0970            SETLOC 54000
 0971  2CALCMANU EXIT   0
 0972            TC     FLAG2UP
 0973  2         OCT    12000           SET BACKFLAG, CALCFLAG
 0974            TC     FLAG2DWN
 0975  2         OCT    04600           REMOVE ROLLFLAG  ,NEGFLAG,BEGINFLG
 0976  2         TC     INTPRET
 0977            AXT,1  1
 0978            ITA    ITC
 0979                   6
 0980                   EXITCADR
 0981  2                THETRIG
 0982            ITC    0
 0983  2                CALCSMNB        COMPUTE X,Y,ZNB
 0984            ITC    0
 0985  2                CALCNBSC        COMPUTE X,Y,ZSC
 0986            AXT,2  1
 0987            RTB                    SET X2 TO 0
 0988                   0
 0989  2                FRESHPD         SET PD POINTER TO 0
 0990            DOT    2
 0991            ABS    DSU
 0992            BPL
 0993                   XSC
 0994                   XSCD
 0995                   COSSIX
 0996  2                180/ZERO
 0997   NOT179   VXV    1
 0998            UNIT
 0999                   XSC
 1000                   XSCD
 1001  2         STORE  WC
 1002   ACCEPTWC ABS    1
 1003            DSU    BPL
 1004                   WC +2
 1005                   COS27           IF WC IS 27 OR LESS DEGS AWAY FROM
 1006  2                GETPTCH         +,- YSM, GIMBAL LOCK IS IMPOSSIBLE
 1007            VXV    1               PITCH/YAW MAY CAUSE GIMBAL LOCK. VARIOUS
 1008            VXV    UNIT            TESTS MUST BE MADE
 1009                   WC
 1010                   UNITY           MP IS POINT OF CLOSEST APPROACH TO +YSM
 1011  2                WC              MP TO PD AT 0
 10111           DMOVE  0
 10112                  ZEROVEC
 10113 2         STORE  15D
 1012            NOLOD  1
 1013            VXV
 1014  2                XSCD            MP*XSCD TO PD AT 6
 1015            VXV    1
 1016            DOT    BPL
 1017                   0
 1018                   XSC
 1019                   -               BRANCH TO BEGINARC IF ARC FROM XSC TO
 1020  2                BEGINARC        XSCD DOES NOT INCLUDE MP OR -MP
 1021            VAD    1
 1022            DOT    BPL
 1023                   XSC
 1024                   XSCD
 1025                   0
 1026  2                PLUSPOLE
 1027            SWITCH 0
 1028  2                NEGFLAG         -MP IS ON ARC
 1029   PLUSPOLE ITC    0
 1030  2                NORMLIMS
 1031            ITC    0
 1032  2                FILENORM
 1033   180/ZERO DOT    1
 1034            BMN
 1035                   XSC
 1036                   XSCD
 1037  2                180CASE
 10371           NOLOD  1
 10372           DSU    BMN
 10373                  COS3
 10374 2                NOGIMTST
 1038            DOT    3
 10382           VXSC   VSLT
 10384           VSU    COMP
 10386           UNIT   DOT
 10388                  ZSCD
 1039                   XSC
 10392                  XSC
 10394                  2
 10396                  ZSCD
 1040  2                ZSC             COSROLL TO PD AT 0 SCALED AT 2(2)
 1041            NOLOD  1
 1042            DSU    BPL
 1043                   COSSIX
 1044  2                CALCSNAP
 1045            VXV    1               ROLL IS REQUIRED
 1046            DOT
 1047                   ZSC
 1048                   ZSCD
 1049  2                XSC             XSC.(ZSC*ZSCD) TO PD AT 2
 1050            TSLT   1
 1051            ACOS   SIGN
 1052                   0
 1053                   1
 1054  2         STORE  THETAMAN
 1055            ABS    2
 1056            DSU    BMN
 1057            ITC
 1058                   XSC +2
 1059                   COS63
 1060                   NOTEST
 1061  2                ROLLTEST        SHORT ROLL MAY GO THROUGH GIMBAL LOCK
 1062   NOTEST   SIGN   1               ATTACH SIGN OF THETAMAN TO WC
 1063            VXSC
 1064                   NEARONE
 1065                   THETAMAN
 1066                   XSC
 1067  2         STORE  WC
 1068            ABS    0               THETAMAN MUST BE +VE FOR MANUJOB
 1069                   THETAMAN
 1070  2         STORE  THETAMAN
 1071  2         EXIT   0
 1072            TC     FLAG2UP
 1073  2         OCT    04000           SET ROLLFLAG
 1074  2         TC     INTPRET
 1075            ITCI   0
 1076  2                EXITCADR        EXIT ON THE ROLL WHEN PITCH/YAW IS OVER
 1077   CALCSNAP SWITCH 1               WE ARE THERE
 1078            ITC
 1079                   CALCFLAG        REMOVE CALCFLAG
 1080  2                CALCSCNB
 1081            ITC    0
 1082  2                CALCCDU         SET THETAD,S TO CORRECT VALUES
 1083            ITCI   0
 1084  2                EXITCADR        THIS IS THE LAST EXIT FROM CALCMANU
 1085   NORMLIMS ITA    2
 1086            RTB    AXC,1           SET PD TO 18
 1087            ABS    ACOS
 10875                  THETAMAN        (TEMPORARY STORAGE)
 1088                   SETPD18
 1089                   2               -2 TO X1
 1090  2                2               C TO 18
 1091   BACKLIM  NOLOD  1
 1092            BDSU
 1093  2                30DEG           30-C TO 20 AT 4PI
 1094            COS    0
 1095  2                20D             COS(30-C) TO PD AT 22
 1097            SIN    2
 1098            DDV    DMP
 1099            ACOS   TSRT
 1100                   20D
 1101                   -
 1102                   1/TAN33         (1/TAN33 SCALED AT 2(1) )
 1103  2                1               OKA TO 22 AT 4PI
 1104            DMOVE  0
 1105  2                90DEG           90 DEGREES TO 24
 1106            SMOVE  0
 1107  2                X1              X1 TO 26
 1108            DMOVE  2
 1109            COMP   SIGN
 1110            DAD    COMP
 1111  2                90DEG           -180 IF X1=-2,0 IF X1=0, TO 24
 1114            DMOVE  1
 1115            TEST   COMP
 1116                   90DEG           90DEG SCALED AT 4PI
 1117                   NEGFLAG
 1118                   POSPOLE
 1119  2         STORE  26D
A1120                                   +90 IN MPAC IF FLAG=0
A1121                                   -90 IN MPAC IF FLAG=1
 1122   POSPOLE  NOLOD  1
 1123            SIGN
 1124  2                WC +2
A1125                                   +90 IN 24 IF
A1126                                     A) FLAG=0, WC +2 POS
A1127                                     B) FLAG=1, WC +2 NEG
A1128                                   -90 IN 24 IF
A1129                                     A) FLAG=0, WC +2 NEG
A1130                                     B) FLAG=1, WC +2 POS
 1131            NOLOD  1
 1132            DSU
 1133  2                24D             180J-90SIGMIM TO 28
 1134            SMOVE  1
 1135            BZE
 1136                   X1
 1137  2                CNEGLIMS        TO CNEGLIMS IF X1 IS ZERO
 1138            DSU    0
 1139                   28D
 1140                   22D
 1141  2         STORE  6               NBL1 TO 6, SCALED AT 4PI
 1142            DAD    0
 1143                   22D
 1144  2         STORE  7               NEL1 TO 7
 1145            DSU    1
 1146            BPL
 1147                   18D
 1148                   3DEG
 1149  2                ENDNORMS
 1150            AXT,1  1
 1151            RTB    COMP
 1152                   0               SET X1 TO 0
 1153                   SETPD20
 1154                   18D             COMPLEMENT C
 11545 2         STORE  18D
 1155            ITC    0
 1156  2                BACKLIM         BACKLIMITS EXIST IF C LESS THAN 3
 1157   CNEGLIMS DSU    0
 1158                   28D
 1159                   22D
 1160  2         STORE  8D              NBL0 TO 8
 1161            DAD    2
 1162            LXA,1  SXA,1
 1163            AXT,1
 1164                   28D
 1165                   22D
 1166                   MPAC
 1167                   9D              NEL0 TO 9,PROTECTING 10
 1168  2                0               RESET X1 TO 0
 1169   ENDNORMS ITCI   0               END OF NORMLIMS CALCULATIONS
 1170  2                THETAMAN        END OF NORMLIMS CALCS
 1171   FILENORM SMOVE  0
 1172                   6D              6 INTO 10 IF X1=0 ,OR
 1173  2         STORE  10D,1           6 INTO 12 IF X1=-2
 1174            SMOVE  1               7 INTO 11 IF X1=0  , OR
 1175            INCR,2                 7 INTO 13 IF X1=-2
 1176                   7
 1177           -       2               MOVE LIMIT LIST POINTER BY -2 (TO -2)
 1178  2         STORE  11D,1
 1179            SMOVE  1
 1180            BMN    SWITCH
 1181                   X1
 1182                   SET15D
 1183  2                BACKFLAG        SET BACKFLAG
 1184            SMOVE  0
 1185                   8D
 1186  2         STORE  12D             8 INTO 12 IF X1=0
 1187            SMOVE  0
 1188                   9D
 1189  2         STORE  13D             9 INTO 13 IF X1=0
 11892  SET15D   DMOVE  1
 11893           TEST   COMP
 11894                  UNITX
 11895                  NEGFLAG
 11896                  PLUSMP
 11897 2         STORE  15D
 11898  PLUSMP   NOLOD  0
 11899 2         STORE  15D
 1190   BEGINARC AXT,1  1
 1191            SWITCH                 SET X1 TO 0
 1192                   0
 1193  2                BEGINFLG        SET BEGINFLG
 1194   ENDCHEK  RTB    1
 1195            EXIT
 1196  2                SETPD18
 1197            TC     FLAG2DWN
 1198  2         OCT    00400           REMOVE NEGFLAG
 1199  2         TC     INTPRET
 1200            ABS*   1
 1201            BDSU   BPL
 1202                   XSC +2,1
 1203                   COS63           IS END CLOSE TO A POLE Q.
 1204  2                OVERYET         BRANCH TO OVERYET IF NOT
 1205   SETWARN  TEST   1
 1206            SWITCH
 1207                   BEGINFLG
 1208                   DONTSET         SET ROLLFLAG IF BEGINNING OF ARC NEAR
 1209  2                ROLLFLAG          LOCK
 1210   DONTSET  DMOVE* 1
 1211            BPL    SWITCH
 1212                   XSC +2,1
 1213                   POSPOLE1        IF XSC +2,1 NEG, SET NEGFLAG
 1214  2                NEGFLAG
 1228   POSPOLE1 SMOVE  2
 1229            TEST   BMN
 1230            ITC
 1231                   15D
 1232                   NEGFLAG
 1233                   NEAR+MP
 1234                   OVERYET
 1235  2                F2
 1236   NEAR+MP  NOLOD  1
 1237            BZE    BPL
 1238                   F2
 1239  2                OVERYET
 1240   F2       DOT    0
 12401                  XSCD
 12402 2                0
 12403           DOT    2
 12404           DSU    TEST
 12405           COMP
 12406                  XSC
 12407                  0
 12408                  -
 12409                  NEGFLAG
 1241                   BEGIN1
 12411 2         STORE  DTEMP1
 12412  BEGIN1   NOLOD  1
 12413           TEST   COMP
 12414                  BEGINFLG
 1242                   BEGIN2
 12421 2         STORE  DTEMP1
 1243   BEGIN2   NOLOD  1
 12431           BPL
 12432 2                OVERYET
 1246   F3       SMOVE  2               SPLITMANU( IF IT HAPPENS) NEEDS TO KNOW
 1247            DSU    TEST            WHICH LIMITS REFER TO THE BEGINNING OF
 1248            COMP
 1249                   X2
 1250                   DP2(-13)
 1251                   BEGINFLG
 1252                   F4
 1253  2         STORE  S1
A1254                                   IF S1=+,-2, THEN THE LIMITS ABOUT TO BE
A1255                                   CALCULATED WILL END UP IN PD AT 0
A1256                                   IF S1=+,-4, THE LIMITS WILL END UP AT
A1257                                   2,4 IN PD
A1258                                   IF S1 IS NEG, THEN THE TAGGED LIMITS
A1259                                   ARE THE ONES NOT TO USE IN SPLTMANU
A1260                                   IF S1 IS POS, THE TAGGED LIMITS SHOULD
A1261                                   BE USED
 1262   F4       NOLOD  0
 1263  2         STORE  S1
 12631           DMOVE  1
 12632           TEST   COMP
 12633                  UNITX
 12634                  BEGINFLG
 12635                  F5
 12636 2         STORE  DTEMP1
 12637  F5       NOLOD  1
 12638           TEST   COMP
 12639                  NEGFLAG
 1264                   F6
 12641 2         STORE  DTEMP1
 12642  F6       NOLOD  1
 12643           SIGN
 12644                  WC +2
 12645 2         STORE  DTEMP1
 12646           ABS*   0
 12647 2                XSC +2,1        COSC TO 18 AT 2(1)
 12648           TSRT   2
 1265            DSU    INCR,2
 12655           BMN
 1267                   18D
 1268                   1
 1269                   COS3
 12695          -       2
 1270  2                SOMESUN
 1271            ITC    0
 12711 2                NORMLIMS
 1272            ITC    0
 1273  2                ALLSHADE
 12731  SOMESUN  VMOVE* 3
 12732           VXV    VXV*
 12733           UNIT   COMP
 12734           TEST   COMP
 12735                  XSC,1
 12736                  UNITY
 12737                  XSC,1
 12738                  NEGFLAG
 12739                  POSP1
 1274  2         STORE  20D
 12741  POSP1    LXA,1  1
 12742           NOLOD
 12743 2                X1
 12745           ACOS   1
 1275            TSRT
 1276                   18D
 1277  2                1               C/2 TO 26 SCALED AT 2PI
 1278            NOLOD  1
 1279            DSU    SIN
 1280  2                1.5DEG          SIN(C/2-1.5) TO 28
 1281            DSU    1
 1282            SIN    DMP
 1283                   31.5DEG
 1284  2                26D             SIN(C/2-1.5)SIN,31.5-C/2) TO 28
 1285            DAD    1
 1286            SIN
 1287                   26D             SIN(C/2+1.5) TO PD AT 30
 1288  2                1.5DEG
 1289            DAD    2
 1290            SIN    DMP
 1291            BDDV   SQRT
 1292                   26D
 1293                   31.5DEG
 1294  2         STORE  VACZ
 1295            DMOVE  0
 1296                   NEARONE
 1297  2         STORE  VACX
 1298            RTB    1               PD SET TO AVOID CONFLICT WITH ARCTAN
 1299            RTB    BDSU
 1300                   SETPD6
 1301                   ARCTAN
 1302                   DP2(-2)
 1303  2         STORE  26D             SA AT 26 SCALED AT 4PI
 1304            DOT    0
 1305                   WC
 1306  2                20D             TO PD TO SIGN AR IN NEXT EQUATION
 1308            VMOVE* 4
 1309            VXV    UNIT
 1310            DOT    COMP
 1311            TSLT   ACOS
 1312            TSRT   SIGN
 1313                   XSC,1           POINT.UNIT(WC*XSC,1)
 1314                   WC
 1315                   20D
 1316                   1
 1318                   1               AR TO THETAMAN, SCALED AT 4PI
 1319  2         STORE  THETAMAN
 1320            DSU    0
 1321                   THETAMAN
 1322                   26D
 1323  2         STORE  10D,2           AR-SA
 1324            RTB    1
 1325            DAD
 1326                   SETPD28
 1327                   THETAMAN
 1328  2         STORE  11D,2           AR+SA
 1329            VMOVE* 1
 1330            DOT    ABS
 1331                   XSC,1           ABS(XSC,1.MP) TO 26 AT 2(2)
 1332  2                0
 1333            ABS    1
 1334            ACOS
 1335  2                2               ACOS(ABS(MP.UNITY)) TO 28
 1336            NOLOD  2
 1337            DAD    COS
 1338            DMP    TSLT
 1339                   30DEG
 1340                   26D
 1341                   1
 1342  2         STORE  16D             COSB TO 16 AT 2(2)
 1343            DSU    3
 1344            ABS    COS
 1345            DMP    TSLT
 1346            BDSU   BPL
 1347                   30DEG
 1348                   -
 1349                   -
 1350                   1
 1351                   C33
 1352  2                OVERYET         IF C33-COSA POS
 1364            ITC    0
 1365  2                NORMLIMS
 1372            DSU    1
 1373            BMN
 1374                   C33
 1375                   16D
 1376  2                ALLSHADE
 1377            DMOVE* 0
 1378  2                11D,2           11D,2 TO PD FOR PROTECTION
 1381            BPL    0
 1382                   DTEMP1
 1383  2                11MANU
 1384            SMOVE  0
 1385                   6               NBL1 REPLACES AR-SA
 1386  2         STORE  10D,2
 1387            DMOVE  0
 1388  2         STORE  11D,2           NOW REINSERT 11,2
 1389            ITC    0
 1390  2                OVERYET
 1391   11MANU   SMOVE  0
 1392                   7
 1393  2         STORE  11D,2
 1394            ITC    0
 1395  2                OVERYET
 1396   ALLSHADE BPL    1
 1397            LODON  DMOVE
 1398                   DTEMP1
 1400                   12MANU
 1401                   6
 1402  2         STORE  10D,2
 1403            SMOVE  0
 1404                   9D
 1405  2         STORE  11D,2
 1406            ITC    0
 1407  2                OVERYET
 1408   12MANU   SMOVE  0
 1409                   8D
 1410  2         STORE  10D,2
 1411            SMOVE  0
 1412                   7
 1413  2         STORE  11D,2
 14131  OVERYET  SMOVE  1
 14132           DAD    BZE
 14133                  X2
 14134                  DP2(-12)
 14136 2                FINISHUP
 1414            TEST   2               ENDCHEK IS DONE TWICE, FOR THE
 1415            AXC,1  SWITCH          BEGINNING AND FOR THE END OF THE ARC
 1416            ITC
 1417                   BEGINFLG
 1418                   FINISHUP
 1419                   18D             -18 TO X1
 1420                   BEGINFLG        REMOVE BEGINFLG
 1421  2                ENDCHEK         GO BACK, GET LIMITS FOR END OF ARC
 1422   FINISHUP SMOVE  1
 1423            BZE
 1424                   X2
 1425  2                GETPTCH         NO LIMITS DETECTED
 1426            RTB    1
 1427            VXV
 1428                   SETPD20
 1429                   XNB
 1430  2                XSC             XNB*XSC TO PD AT 20
 1431            VXV    1
 1432            DOT
 1433                   WC
 1434                   XSC
 1435                   20D
 1436  2         STORE  18D             (WC*XSC).(XNB*XSC) TO 18
 1437            UNIT   3
 1438            DOT    COMP
 1439            TSLT   ACOS
 1440            SIGN   TSRT
 1441                   -
 1442                   WC
 1443                   1
 1444                   -
 1445                   1
 1446  2         STORE  12D,2           SCALED AT 4PI
 1447            SMOVE  1
 1448            AXC,2  AXT,1
 1449                   X2
 1450                   0
 1451                   0               0 INTO X2 AND X1
 1452  2         STORE  30D             SAVE X2
 1453   22MANU   SMOVE* 1
 1454            DSU
 1455                   13D,2
 1456  2                12D
 1457   23MANU   NOLOD  1
 1458            DSU    BPL
 1459                   360DEG
 1460  2                23MANU
 1461   20MANU   NOLOD  1
 1462            DAD    BMN
 1463                   360DEG
 1464                   20MANU
 1465  2         STORE  0,1
 1466            LXA,1  1
 1467            INCR,2 INCR,1
 1468                   X1
 1469           -       1
 1470  2        -       2
 1471            SMOVE  1
 1472            BDSU   BMN
 1473                   X2
 1474                   30D
 1475  2                22MANU
 1476            DAD    1
 1477            BZE
 1478                   30D
 1479                   DP2(-13)
 1480  2                EZCASE
 1481            DSU    1
 1482            BMN
 1483                   4
 1484                   0
 1485  2                30MANU
 1486            DSU    1
 1487            BMN
 1488                   2
 1489                   0
 1490  2                31MANU
 1491            DSU    1
 1492            BMN
 1493                   2
 1494                   4
 1495  2                SPLITMNU
 1496            DSU    1
 1497            BMN
 1498                   6
 1499                   0
 1500  2                GETPTCH
 1501            TEST   2
 1502            TSRT   DSU
 1503            ITC
 1504                   BACKFLAG        (BACKFLAG DOWN MEANS DO BACKTEST
 1505                   BACKTEST
 1506                   0
 1507                   1
 1508                   6
 1509  2                40MANU
 1510   31MANU   DSU    1
 1511            BMN
 1512                   6
 1513                   0
 1514  2                33MANU
 1515   333MANU  TEST   2
 1516            DAD    TSRT
 1517            DSU    ITC
 1518                   BACKFLAG
 1519                   BACKTEST
 1520                   0
 1521                   2
 1522                   1
 1523                   6
 1524  2                40MANU
 1525   33MANU   DSU    1
 1526            BMN    ITC
 1527                   6
 1528                   2
 1529                   333MANU
 1530  2                GETPTCH
 1531   30MANU   DSU    1
 1532            BMN
 1533                   2
 1534                   0
 1535  2                35MANU
 1536            DSU    1
 1537            BMN
 1538                   6
 1539                   4
 1540  2                GETPTCH
 1541   38MANU   TEST   2
 1542            TSRT   DSU
 1543            ITC
 1544                   BACKFLAG
 1545                   BACKTEST
 1546                   4
 1547                   1
 1548                   6
 1549  2                40MANU
 1550   35MANU   DSU    1
 1551            BMN
 1552                   2
 1553                   4
 1554  2                36MANU
 1555            DSU    1
 1556            BMN
 1557                   6
 1558                   2
 1559  2                37MANU
 1560            DSU    1
 1561            BPL    ITC
 1562                   6
 1563                   0
 1564                   38MANU
 1566  2                GETPTCH
 1567   36MANU   DSU    1
 15671           BMN
 15672                  6
 15673                  4
 15674 2                366MANU
 15675  368MANU  TEST   2
 1568            DAD    TSRT
 1569            DSU    ITC
 1570                   BACKFLAG
 1571                   BACKTEST
 1572                   4
 1573                   2
 1574                   1
 1575                   6
 1576  2                40MANU
 1577   37MANU   DSU    1
 1578            BMN    ITC
 1579                   6
 1580                   4
 1581                   GETPTCH
 1582  2                38MANU
 1583   366MANU  DSU    1
 1584            BMN    ITC
 1585                   6
 1586                   2
 1587                   368MANU
 1588  2                GETPTCH
 1591   40MANU   NOLOD  2               ROLL IS IN MPAC,MPAC +1,SCALED AT 4PI
 1592            DSU    BMN
 1593            DSU    ITC
 1594                   DP2(-2)
 1595                   41MANU
 1596                   DP2(-2)
 1597  2                42MANU
 1598   41MANU   NOLOD  2
 1599            DAD    BPL
 1600            DAD    ITC
 1601                   360DEG
 1602                   43MANU
 1603                   DP2(-2)
 1604  2                42MANU
 1605   43MANU   NOLOD  1
 1606            DSU
 1607  2                DP2(-2)
 1608   42MANU   NOLOD  1
 1609            TSLT
 1610                   1
 1611  2         STORE  THETAMAN        ROLL IN THETAMAN, SCALED AT 2PI
 1612            TEST   0
 1613                   ROLLFLAG        IF ROLLFLAG ISNT ON
 1614  2                DONE            WE ARE DONE
 1615            ITC    0
 1616  2                ROLLTEST        SHORT WAY ROLL MAY HIT GIMBAL LOCK
 1617            ITC    0
 1618  2                DONE
 1619   ROLLTEST RTB    2
 1620            VXV    VXV
 1621            UNIT
 1622                   FRESHPD
 1623                   XSC
 1624                   XNB
 1625  2                XSC             TEMP1 TO DP AT 0
 1626            SIGN   2
 1627            VXSC   VXV
 1628            VXV    UNIT
 1629                   NEARONE
 1630                   XSC +2
 1631                   XSC
 1632                   UNITY
 1633  2                XSC
 1634            DOT    1
 1635            TSLT   ACOS
 1636                   0
 1637                   6
 1638                   1
 1639  2         STORE  16D
 1640            ABS    1
 1641            DSU    BMN
 1642                   THETAMAN
 1643                   16D
 1644  2                ENDTST
 1645            VMOVE  2
 1646            VXV    DOT
 16465           BMN
 1647                   -
 1648                   -
 1649                   XSC
 1650  2                50MANU
 1651            DMOVE  1
 1652            BPL    DAD
 1653                   THETAMAN
 1654                   ENDTST
 1655                   NEARONE
 1656  2         STORE  THETAMAN
 1657  2         ITCQ   0
 1658   50MANU   DMOVE  1
 1659            BMN    DSU
 1660                   THETAMAN
 1661                   ENDTST
 1662                   NEARONE
 1663  2         STORE  THETAMAN
 1664  2ENDTST   ITCQ   0
 1665   BACKTEST LXA,2  1
 1666            SWITCH
 1667                   30D             RESET SAVED X2
 1668  2                BACKFLAG        TURN BACKFLAG ON (DONT DO AGAIN)
 1669            SMOVE  0
 1670                   10D
 1671  2         STORE  12D
 1672            LXA,1  1
 1673            SXA,1  ITC
 1674                   11D
 1675                   13D
 1677  2                FINISHUP
 1678   EZCASE   DSU    1
 1679            BMN
 1680                   2
 1681                   0
 1682  2                GETPTCH         NO ROLL REQ,D
 1683            TEST   2
 1684            TSRT   DSU
 1685            ITC
 1686                   BACKFLAG
 1687                   BACKTEST
 1688                   0
 1689                   1
 1690                   2
 1691  2                40MANU
 16911  180CASE  NOLOD  1
 16912           DAD    BPL
 16913                  COSONE
 16914 2                NOT179
 1692            DOT    2
 1693            ABS    DSU
 1694            BPL
 1695                   XSC
 1696                   UNITY
 1697                   COSONE
 1698  2                ZEROWC
 1699            VXV    1
 1700            VXV    UNIT
 1701                   XSC
 1702                   UNITY
 1703                   XSC
 1704  2         STORE  WC
 1705            ITC    0
 1706  2                ACCEPTWC
 1707   ZEROWC   VMOVE  0
 1708                   ZSC
 1709  2         STORE  WC
 1710            ITC    0
 1711  2                ACCEPTWC
 1720   NOGIMTST VXV    1
 1721            UNIT
 1722                   XSC
 1723                   XSCD
 1724  2         STORE  WC
 1725            ITC    0
 1726  2                GETPTCH
 1730   DONE1    ABS    1
 1731            DSU    BMN
 1732                   THETAMAN
 1733                   1.5DEG
 1734  2                GETPTCH
 1761            SIGN   1
 1762            VXSC
 1763                   NEARONE
 1764                   THETAMAN
 1765                   XSC
 1766  2         STORE  WC
 1767            ABS    0
 1768                   THETAMAN
 1769  2         STORE  THETAMAN
 1770  2         EXIT   0
 1771            TC     FLAG2UP
 1772  2         OCT    04000           SET ROLLFLAG
 1773  2         TC     INTPRET
 1774            ITCI   0               EXIT FOR ROLL THAT AVOIDS GIMBAL LOCK IN
 1775  2                EXITCADR        SUBSEQUENT PITCH/YAW MANEUVER
 1776   SPLITMNU SMOVE  3
 1777            ABS    DSU
 1778            BHIZ   LODON
 1779            SMOVE  BPL
 1780                   S1
 1781                   DP2(-13)
 1782                   SPLIT1
 1783                   S1
 1784  2                SPLIT3
 1785   SPLIT2   DSU    1
 1786            BMN
 1787                   6
 1788                   0
 1789  2                SPLIT5
 1790            TSRT   1
 1791            DSU    ITC
 1792                   0
 1793                   1
 1794                   6
 1795  2                40MANU
 1796   SPLIT3   DSU    1
 1797            BPL
 1798                   6
 1799                   4
 1800  2                SPLIT4
 1801            DSU    1
 1802            BPL
 1803                   6
 1804                   2
 1805  2                SPLIT5
 1806   SPLIT4   DAD    2
 1807            TSRT   DSU
 1808            ITC
 1809                   2
 1810                   4
 1811                   1
 1812                   6
 1813  2                40MANU
 1814   SPLIT1   SMOVE  1
 1815            BPL    ITC
 1816                   S1
 1817                   SPLIT2
 1818  2                SPLIT3
 1819   SPLIT5   ITC    0
 1820  2                CALCPTCH
 1821            DMOVE  1
 1822            TSRT
 1823                   THETAMAN
 1824                   1
 1825  2         STORE  THETAMAN
 1826            ITC    0
 1827                   GETPTCH2
 1832   GETPTCH  ITC    0
 1833  2                CALCPTCH
 1834  2GETPTCH2 EXIT   0
 1835            TC     FLAG2DWN
 1836  2         OCT    04000           REMOVE ROLLFLAG
 1837  2         TC     INTPRET
 1838            ITCI   0
 1839  2                EXITCADR        EXIT FOR PITCH/YAW PORTION OF MANEUVER
 1840   CALCPTCH DOT    1
 1841            TSLT   ACOS
 1842                   XSC
 1843                   XSCD
 1844                   1
 1845  2         STORE  THETAMAN
 1846  2         ITCQ   0
 18461           TC     CCSHOLE
 18465 2         TC     CCSHOLE
 1847   COS3     2DEC   .249657385      SCALED AT 2(4)
 1848   COS27    2DEC   .445503260      SCALED AT 2(1)
 1849   COS63    2DEC   .226995250      SCALED AT 2(1)
 1850   COS30    2DEC   .433012700      SCALED AT 2(1)
 1851   1/TAN33  2DEC   .76993250       SCALED AT 2(1)
 1852   1.5DEG   2DEC   .004166666      SCALED AT 2PI
 1853   31.5DEG  2DEC   .0875           SCALED AT 2PI
 1854   30DEG    2DEC   .08333333       SCALED AT 2PI
 1855   3DEG     2DEC   .00833333       SCALED AT 2PI
 1856   90DEG    2DEC   0.125           SCALED AT 4PI
 1861   DP2(-2)  2DEC   0.25
 1862   SIN30    EQUALS DP2(-2)
 1863   DP2(-13) 2OCT   0000200000
 1864   C33      2DEC   .209667643
 1865   UNITX    2DEC   0.5
 1866   ZEROVEC  2DEC   0.0
 1867            2DEC   0.0
 1868   UNITY    2DEC   0.0
 1869            2DEC   0.5
 1870            2DEC   0.0
 1871   SCNBMAT  2DEC   0.419335300
 1872            2DEC   0.0
 1873            2DEC   -.272319500
 1874            2DEC   0.0
 1875            2DEC   0.5
 1876            2DEC   0.0
 1877            2DEC   0.272319500
 1878            2DEC   0.0
 1879            2DEC   0.419335300
 1880   DTH      2DEC   0.005555        2.0 DEG SCALED AT 2PI
 1881            2DEC   0.01            3.6 DEG
 1882  4         2DEC   0.020833        7.5 DEG
 1883   SETPD16  CAF    SIXTN
 1884            AD     FIXLOC
 1885            TS     PUSHLOC
 1886  2         TC     RE-ENTER
 1887   SETPD6   CAF    SIX
 1888  2         TC     SETPD16 +1
 1889   SETPD18  CAF    EIGHTN
 1890  2         TC     SETPD16 +1
 1891   SETPD28  CAF    TWENTY8
 1892  2         TC     SETPD16 +1
 1893   SETPD20  CAF    TWENTY0
 1894  2         TC     SETPD16 +1
 18943  COSONE   2DEC   .2499625        SCALED AT 2(4)
 18945  COSSIX   2DEC   .2480300        SCALED AT 2(4)
 1895   180DEG   EQUALS UNITX           SCALED AT 2PI.
 1896   DP2(-1)  EQUALS UNITX
 1897   360DEG   EQUALS UNITX           SCALED AT 4PI.
 1900  2CFACTOR  EQUALS UNITX
 2001   DONE     DOT    2
 2002            DAD    BPL
 2003            LODON  VXV
 2005                   XSC
 2006                   XSCD
 2007                   COSSIX
 2008                   DONE1
 2009                   UNITY
 2010  2                XNB
 2011            SIGN   1
 2012            VXSC   UNIT
 2013                   NEARONE
 2014                   XNB +2
 2015  2         STORE  WC
 2016            DMOVE  1
 2017            TSRT
 2018                   30DEG
 2019                   1
 2020  2         STORE  THETAMAN
 2021            ITC    0
 2022  2                GETPTCH2
 20221  R280K    2DEC   6.463509 E6 B-24
 20222  R400K    2DEC   6.500085 E6 B-24
 20223  DP.36    2DEC   .36 B-6
L      8TIME OF FREE-FALL CALCULATIONS
P3600   CONIC TIME OF FLIGHT CALCULATION.   PROGRAM CALCULATES THE FREE-FALL TIM
 3601  9E OF FLIGHT FROM PRESENT POSITION RN
R3602   AND VELOCITY VN TO A RADIUS SPECIFIED BY RTERM, CORRESPONDING TO 280K OR
 3603  9400K FEET ALTITUDE.
R3604  2THE POSITION  RN MAY BE ON EITHER SIDE OF THE ELLIPSE, BUT  RTERM  IS
 3605  9CONSIDERED ON THE INBOUND SIDE.
R3606  2THE EQUATION IS    TFF = ( DEL E - (Q2-Q1) ) / (ALFA SQRT( ALFA MUE) )
R3607   AND                Q2 = -SQRT( RTERM ALFA (2-RTERM ALFA) -LCP ALFA )
 3608  9 (INBOUND SIDE)           LEQ +/-  LCE
R3609                           -  -
R3610  2                   Q1 = RN.VN  SQRT(ALFA/ MUE)
 3611  9                          LEQ +/-  LCE
R3612   PROGRAM REQUIREMENTS ON ENTERING.
R3613            1.  PUSHDOWN LIST IS ZEROED
R3614  2         2.  INPUTS: POSITION  RN 2(-24) M,  VELOCITY  VN  2(-7)  M/CS
R3615   THE PROGRAM EXITS WITH ONE OF THE FOLLOWING IN TFF.
R3617                    A. TFF = FLIGHT TIME.  NORMAL CASE FOR POSITIVE FLIGHT
 3618  9 TIME LESS THAN ONE ORBITAL PERIOD.
R3619                    B. TFF=+0.  THIS INDICATES THAT THE TRAJECTORY HAS GONE
 3620  9 PAST RTERM AND THE PRESENT ALTITUDE IS
R3621                       LESS THAN THE SPECIFIED TERMINAL ALTITUDE.
R3622                    C. TFF = POSMAX.  THIS INDICATES THAT THE ELLIPTICAL CO
 3623  9NIC FROM THE PRESENT POSITION WILL NOT
R3624                       RETURN TO THE SPECIFIED ALTITUDE.
R3625   THE FOLLOWING QUANTITIES REMAIN IN THE PUSHLIST
R3626            ALFA                2(+21) IN PDL 10D
R3627            (2-RTERM ALFA)      2(-3)  IN PDL 6
R3628            RTERM ALFA          2(-3)  IN PDL 4
R3629  2         LCP ALFA            2(-6)  IN PDL 2
R3630   THUS THE CALLING PROGRAM CAN CALCULATE TERMINAL VELOCITY, VTERM, AND COS
 3631  9 GAMMA OR SIN GAMMA USING RESIDUE FROM
R3632  2CALCTFF.
R3633                 2
R3634  2         VTERM  (RTERM/MUE) = (2-RTERM ALFA)
R3635               2
R3636  2         SIN GAMMA = 1 - (LCP ALFA / RTERM ALFA(2-RTERM ALFA)  )
R3637               2
R3638  2         COS GAMMA = LCP ALFA /(RTERM ALFA (2-RTERM ALFA)  )
R3643   QUANTITIES ARE NORMALIZED BY LCE TO OBTAIN BEST ACCURACY IN COMPUTING, E
 3644  9SPACIALLY FOR SPARCTAN.  PROGRAM
R3645   ACCEPTS LCE  LEQ 1.0.  THE SMALLEST LCE WHICH IS  NORMALIZED IS 2(-4),
 3646  9ALTHOUGH THIS MAY BE EXTENDED IF
R3647   DESIRED.  (LCE  L  2(-3) ALL HAVE SAME SCALING)
R3648
P3649  2TEMPORARY ERASABLE ASSIGNMENTS FOR TFF COMPUTATIONS
 3650  9PUSHLIST 00 - 19D, X1
 3651  2RTERM    =      14D
 3652            BANK   31
 3653  2CALCTFF  EXIT   0
 3654            CCS    REFSWTCH        SEE IF GROUND DESIRES 280K FF REFERENCE
 3655            TC     +4              NO
 3656            TC     +3
 36565           CAF    ZERO
 3657  2         TC     +5
 365701          CAF    NOMBURN         TEST IF ANY NOMINAL BURN (SPS1,SPS2,
 365702          MASK   FLAGWRD2        SPS3, SPS4, ARRST) FLAG SET
 365703          CCS    A
 365704          CS     TWO
 365705          INDEX  FIXLOC          X1=-2 FOR 400K FT. AND 0 FOR 280K FT.
 365706          TS     X1
 365707          TC     INTPRET
 365708          DMOVE* 1
 365709          RTB
 36571                  R280K,1
 365711                 FRESHPD
 3661  2         STORE  RTERM            2(-24)
 3662            VSQ    2
 3663            DMP    DMP
 3664            TSLT   BDSU
 3665                   VN              VEL  2 (-7)
 3666                   1/MUE           2 (+35)
 3667                   RMAG            2(-25)
 3668                   1
 3669  2                DP1/4           RMAG ALFA   2 (-3)          TO PDL 0,1
 3670            NOLOD  1
 3671            TSRT   DDV
 3672                   1
 3673                   RMAG
 3674  2         STORE  10D
 36751           NOLOD  1
 36752           BMN
 36753 2                HIECC
 3676            DMP    2
 3677            SQRT   DMP
 3678            TSLC   BDDV
 3679                   10D             ALFA  2(+21)
 3680                   MUE(37)
 3681                   10D             ALFA
 3682                   19D             -N. SAVE FOR GETTFF1
 3683                   DP2PI/16
 3684            STORE  12D             ORB PERIOD  2PI/ALFA SQRT(ALFA MUE)
A3685                                   2(-17-N)
 3686            VXV    3
 3687            VSLT   VSQ
 3688            DMP    DMP
 36881           RTB
 3689                   RN
 3690                   VN              MTRS/CS   2(-7)
 36901                  1
 3691                   1/MUE           2(+35)
 3692                   10D             ALFA  2(+21)
 3693                   NORMBYE         GET NORM COUNT BASED ON LCE SQ.
A3694  2                                LCP ALFA  2(-6)             TO PDL 2,3
 36941           NOLOD  1
 36942           DSU    BPL
 36943                  DP.36
 36944 2                LOECC
 36945           DSU    1
 36946           BMN
 36947                  10D
 36948                  ALFALIM
 36949 2                HIECC
 3695   LOECC    DMP    0
 3696                   RTERM           2(-24)
 3697                   10D             ALFA  2(+21)
A3698  2                                RTERM ALFA  2(-3)           TO PDL 4,5
 3699            DSU    0
 3700                   DP1/4
 3701                   4               RTERM ALFA  2(-3)
A3702  2                                (2-RTERM ALFA)  2(-3)       TO PDL 6,7
 3703            DMP    1
 3704            SQRT
 3705                   10D             ALFA  2(+21)
 3706  2                1/MUE           2(+35)                      TO PDL 8,9
 3707            DOT    2
 3708            TSLT    DMP
 37082           RTB
 3709                   RN
 3710                   VN              2(-7)
 37101                  1
 3711                   -               LEAVE Q1  2(-3) IN MPAC
 3712                   ARGQ1           SAVE  MPAC FOR GONE PAST TEST. , NORMLZE
 3713  2         STORE  8D              Q1  (OR Q1/2 OR 2Q1 OR 4Q1)
 3714            DMP    2                CALCULATE Q2
 3715            DSU    RTB
 3716            DAD
 3717                   -               (2-RTERM ALFA) 2(-3) FROM PDL 6,7
 3718                   -               RTERM ALFA 2(-3) FROM PDL 4,5
 3719                   -               LCP ALFA 2(-6) FROM PDL 2,3
 3720                   ARGQ2           TEST SGN, TAKE ROOT  (RT DOT NEG)
A3721                                   RETURN -Q2 (OR -Q2/2 OR -2Q2 OR -4Q2)
 3722                   8D              Q1  (AT SIMILAR SCALE)
 3723            STORE  8D              Q1-Q2  ( OR /2 OR2 OR4)
A3724  2                                LEQ +/- 2LCE  (OR 1 OR 4 OR 8)
 3725            DSU    1
 3726            RTB    DMP
 3728                   6               2-RTERM ALFA 2(-3)
 3729                   -               2-RTERM ALFA-RMAG ALFA  2(-3) IN MPAC
 3730                   GETTFF          C(MPAC) = DEN  2(-3)
 3731                   12D             ORB PERIOD    2(-17-N)
 373201          STORE  TFF
 373202          ITCQ   0
 3733   ARGQ1    INDEX  FIXLOC
 3734            INDEX  16D             COUNT BY ONES
 3735            CAF    BIT4            EFFECTIVE SH L 3  ( 2 OR 4 OR 5)
 3736            TC     SHORTMP
 3737            XCH    MPAC +2         MOVE UP
 3738            XCH    MPAC +1
 3739            TS     MPAC            MPAC IS L .5 AS REQD BY TEST LATER.
 3740            INDEX  FIXLOC
 3741            TS     18D             SAVE FOR GONE PAST TEST.
 3742  2         TC     DANZIG
 3746   ARGQ2    INDEX  FIXLOC
 3747            INDEX  17D             SH L BY 2,S
 3748            CAF    BIT7            DO EFFECTIVE SHL 6    (4 OR 8 OR 10)
 3749            TC     SHORTMP         TP ENTRY , C(MPAC+2) VALID.
 3750            CAF    ZERO
 3751            XCH    MPAC +2
 3752            XCH    MPAC +1
 3753  2         TS     MPAC
 3754            CCS    MPAC
 3755            TC     Q2ROOT
 3756            TC     +2
 3757  2         TC     NEGQ2           NO FREEFALL CONIC TO RTERM FROM HERE.
 3758            CCS    MPAC +1         CK LO WORD. IF NEG, ASSUME ROUNDOFF.
 3759            TC     Q2ROOT
 3760            TC     DANZIG
 3761   NOROOT   CAF    ZERO            NEG ARG FROM ROUNDOFF. SET =0.
 3762            TS     MPAC
 3763            TS     MPAC +1
 3764  2         TC     DANZIG
 3765   Q2ROOT   TC     BANKCALL        GO TAKE DP SQRT
 3766            CADR   SQRT3           C(MPAC +2) =0
 3767  2         TC     DANZIG
 3768   NEGQ2    CAF    POSMAX          THIS WILL LEAVE PUSHLOC AT PDL2
 3769            TS     TFF
 3770            TS     TFF +1
 3771            CS     FIXLOC          BUT RESET IT.
 3772            COM
 3773  2         TS     PUSHLOC
 3774  2         TC     INTPRET
 3775  2         ITCQ   0               AND RETURN TO CALLING PROGRAM.
R3776  2ENTER WITH (2-RTERM ALFA-RMAG ALFA) 2(-3) IN MPAC,+1. Q1-Q2 IN PDL 8,9
 3777   GETTFF   INDEX  FIXLOC
 3778            INDEX  16D             COUNT BY 1,S
 3779            CAF    BIT4            EFFECTIVE SL 3  (2 OR 4 OR 5 )
 3780            TC     SHORTMP         C(MPAC +1,+2) = DEN    ON RETURN.
 3781            INDEX  FIXLOC          (UNSCALD NUM AND DEN LEQ +/- 2 LCE)
 3782            CS     8D
 3783            XCH    MPAC +1         SAVE Q2-Q1,  GET DEN
 3784            TS     MPAC            AND SAVE.
 3785            INDEX  FIXLOC
 3786            INDEX  16D             COUNT BY 1,S
 3787            CAF    -1/2PI
 3788            EXTEND
 3789            MP     MPAC +1
 3790  2         TS     MPAC +2         -(Q2-Q1) /2PI    SAVED
 3791            TC     SPARCTAN        NUM=C(MPAC+1),DEN=C(MPAC)
A3792                                   RETURN WITH DEL ECC. ANOM/2PI IN A
A3793   RANGE (0,1)
 3794            AD     MPAC +2
 3795            XCH    MPAC            TFF NORM=(DEL E:(Q2:Q1))/2PI
A3796   FOLLOWING TEST VALID WHEN SPTEM3 L .5
 3797            INDEX  FIXLOC
 3798            XCH    18D             IF BOTH SGN Q1 AND SGN ATAN ARE
 3799            AD     +2              NEG, THEN SET TFF, +1  =+0.  (-3/4+1 )
 3800            AD     SGNATAN         LEFT BY SPARCTAN
 3801            TS     A               (=50K =-3/4 +1 FOR OVFL TEST)
 3802            TC     GETTFF3         OK, GO ON
 3803            CAF    ZERO
 3804  2         TC     NEGQ2 +1        GONE PAST. SET TFF=0.
 3805   GETTFF3  INDEX  FIXLOC
 3806            INDEX  19D             -N.  BIT4 BELOW VALID FOR N LEQ 10D.
 3807            CAF    BIT4            SCALE FACTOR,  2(-11+N)
 3808            EXTEND
 3809            MP     MPAC
 3810            TS     MPAC
 3811            XCH    LP
 3812            TS     MPAC +1         NOW READY TO MULT BY ORB PERIOD
 3813  2         TC     DANZIG
R3814   TO IMPROVE PRECISION OF SPARCTAN AT SMALLER LCE, COME HERE TO GET NORMAL
 3815  9IZATION FACTOR
R3816   BASED ON SIZE OF LCE SQ.  SHIFT BY 2,S. SCALING RESULTING FROM BELOW YIE
 3817  9LDS AT LEAST ONE LEAD ZERO IN
R3818  2NUM AND DEN USED IN SPARCTAN.
 3819   NORMBYE  CAF    OCT37440        BRACKET SIZE BY OVFL TESTS
 3820            AD     MPAC            C(MPAC)= (1-LCE SQ)  2(-6)
 3821            TS     A
 3822            TC     ENORM0          HERE IF LCE GEQ 2(-1)
 3823            AD     OCTNEG30        (EFFECTIVE CONST  37410)
 3824            TS     A
 3825            TC     ENORM1          HERE IF LCE GEQ 2(-2)
 3826            AD     OCTNEG6         (EFFECTIVE CONST  37402)
 3827            TS     A
 3828            TC     ENORM2          HERE IF LCE GEQ 2(-3)
 3829            CS     BIT2            HERE IF LCE  L  2(-3)
 3830   ENORM3   INDEX  FIXLOC
 3831            TS     16D             COUNT FOR SL BY 1,S ALSO NEEDED
 3832            AD     A
 3833            INDEX  FIXLOC
 3834            TS     17D             COUNT FOR SL BY 2,S.
 3835  2         TC     DANZIG
 3836   ENORM0   CAF    BIT1
 3837            TC     ENORM3
 3838   ENORM1   CAF    ZERO
 3839            TC     ENORM3
 3840   ENORM2   CS     BIT1
 3841  2         TC     ENORM3
 3842   OCT37440 OCT    37440
 3843   OCTNEG30 OCT    -00030
 3844  2OCTNEG6  OCT    -00006
 3845   1/MUE    2DEC*  .250876044 E-10 B35*     CS SQ/M CUBE
 3846   MUE(37)  2DEC*  3.986032233 E10 B-37*    CS SQ/M CUBE
 3847   DP2PI/16 2DEC   .39269909
 3848            DEC    -.15915494 B-2
 3849            DEC    -.15915494 B-1
 3850   -1/2PI   DEC    -.15915494
 3851            DEC    -.15915494 B1
 385101 NOMBURN  OCT    00171
 38515  ALFALIM  2DEC   6.562 E-8 B21
P3852   INVERSE TANGENT.     THE SINGLE PRECISION ARCTAN IS BASED ON A HASTINGS
 3853  9 3 TERM POLYNOMIAL.  THE PROGRAM
R3854   ACCEPTS  NUM  AND  DEN  , WHERE  TAN(THETA) = NUM/DEN, AND GIVES  THETA/
 3855  9PI  IN THE RANGE (0,1)
R3856   ENTER WITH C(MPAC +1) = NUM, AND C(MPAC) = DEN.   NOTE THAT FOR CALCTFF,
 3857  9 THETA = DEL E/2.
R3858  2SPARCTAN USES 3 SP TEMPORARIES:  SPTEMQ, SPTEM1, SPTEM2
R3859  2TEMPORARY ERASABLE ASSIGNMENTS FOR SPARCTAN ROUTINE
 3860   SPTEMQ   =      VBUF
 3861   SPTEM1   =      VBUF +1
 3862   SPTEM2   =      VBUF +2
 3863   SPATANQ  EQUALS SPTEMQ
 3864  2SGNATAN  EQUALS SPTEM1
 3865   SPARCTAN XCH    Q
 3866  2         TS     SPATANQ
 3867            CAF    BIT13           1/4 = PI/4
 3868            TS     SPTEM2
 3869            TS     SGNATAN         IF NUM=0, THETA=0
 3870            CCS    MPAC +1         NUM
 3871            TC     TESTDEN         IF DEN =0, THETA=90 DEG SGN(NUM)
 3872            TC     TESTDEN         MUST STILL TEST DEN.
 3873            TC     +2              INDETERMINATE CASE 0/0 CONSIDERED AS 90D
 3874            TC     TESTDEN -1
 3875            CS     SGNATAN
 3876            TS     SGNATAN
 3877            CS     MPAC +1
 3878  2         TS     MPAC +1         ABVAL OF NUM.
 3879   TESTDEN  CCS    MPAC            DEN
 3880            TC     SPATAN1
 3881            TC     SPATAN4         90 DEG CASE
 3882            TC     +2
 3883            TC     SPATAN4         90 DEG CASE
 3884            CS     SGNATAN
 3885            TS     SGNATAN
 3886            CS     MPAC
 3887  2         TS     MPAC            ABVAL OF DEN.
 3888            CCS    MPAC +1         EITHER POS OR +0. WAS NUM ZERO
 3889            TC     TESTDEN         NO, GO ON
 3890  2         TC     SPATANQ         YES, THETA =0      RETURN
 3891   SPATAN1  EXTEND                 HERE NEGLECT 1 BIT OF CCS. LOST IN MP.
 3892            MP     ITANC0          POLY TRANSITION TEST.
 3893            AD     MPAC +1         NUM  (PNZ, SO +0 IN CCS IMPOSS)
 3894            CCS    A               IF NEG, USE Z=N/D FOR POLY.
 3895            TC     SPATAN2         IF POS, USE Z=(N-D)/(N+D) FOR POLY.
 3896   ITANC0   DEC    -.2714558       =-(1-K)/(1+K), AND K=.573
 3897            CAF    ZERO            THIS FORM OF POLY HAS BETTER BEHAVIOR
 3898            TS     SPTEM2          NEAR ORIGIN. REPLACE PI/4 BY ZERO.
 3899            XCH    MPAC +1         SET +0 TO FIT IN WITH CALC BELOW.
 3900  2         TC     SPATAN3
 3901   SPATAN2  CS     MPAC            N-D AND N+D WILL NOT OVFL IN AD IF LCE
A3902                                   L 1.0 DUE TO NORMALIZATION BY LCE.
 3903            AD     MPAC +1         NUM
 3904   SPATAN3  TS     SR
 3905            XCH    MPAC
 3906            AD     MPAC +1
 3907            TS     A               DID IT OVFL..
 3908            TC     SPATAN5         NO, GO DO DV.
 3909            XCH    SR              YES, SHIFT BOTH NUM AND DEN R1.
 3910            XCH    SR              (NUM-DEN)/4 IN SR
 3911  2         AD     HALF            (NUM+DEN)/2 IN A.
 3912   SPATAN5  TS     MPAC            NORMALLY, (NUM+DEN)
 3913            XCH    SR              NORMALLY, (NUM-DEN) /2
 3914            EXTEND
 3915            DV     MPAC            NO OVFL PROB.
 3916            TS     MPAC            Z/2= (NUM-DEN)/2(NUM+DEN)
A3917  2                                Z/2 = NUM/2DEM       NEAR ORIGIN
 3918            EXTEND
 3919            SQUARE
 3920            TS     MPAC +1         Z Z/4
 3921            EXTEND
 3922            MP     ITANC7
 3923            AD     ITANC5
 3924            EXTEND
 3925            MP     MPAC +1
 3926            AD     ITANC3
 3927            EXTEND
 3928            MP     MPAC +1
 3929            AD     ITANC1
 3930            DOUBLE
 3931            EXTEND
 3932            MP     MPAC
 3933            AD     SPTEM2          EITHER 1/4=PI/4 OR 0
 3934            TS     Q               C(A)=THETA/PI ,RANGE( 0 ,.5) SEE NOTE
 3935            CCS    SGNATAN
 3936            XCH    Q               AFFIX SGN FOR POLY TO HAVE RANGE (-.5,.5
 3937            TC     SPATANQ
 3938            CS     Q
 3939            AD     HALF
 3940   SPATAN4  AD     HALF            90 DEG CASE COME HERE
 3941            TC     SPATANQ         RETURN WITH THETA/  PI IN A. RANGE(0,1)
A3942  2                                POLY GIVES THETA/ PI RANGE(-.5,+.5)
R3943   NOTE ■■■ RETURN TO  CALCTFF  WITH  DEL E/2 PI IN A, RANGE (0,1).
 3944  9SINCE THE OUTPUT OF  SPARCTAN ,
R3945   IS IN THE RANGE (0,1), THE +/- 90 DEG CASES ARE IDENTICAL.  FURTHER SINC
 3946  9E  FOR  CALCTFF, THE ANGLE THETA/PI
R3947   EQUALS DEL E/2 PI,  SPARCTAN  CONSIDERS BOTH 0 DEG AND 180 DEG AS 0 DEG.
 3948  9  SHOULD PROGRAMS OTHER THAN  CALCTFF
R3949   DESIRE ARC TANGENTS, THEN  SPARCTAN  CAN BE MADE GENERAL.
R3950  2
 3951   ITANC1   DEC    .318060008      =C1 /PI
 3952   ITANC3   DEC    -.40894149      = 4 C3/PI
 3953   ITANC5   DEC    .7449806        = 16 C5/PI
 3954  8ITANC7   DEC    -.79435682      = 64 C5 /PI                         74W
 3955   HIECC1   BMN    3
 3956            LXC,1  LODON
 3957            DMOVE  TSRT*
 39575           RTB
 3958                   14D
 3959                   TFFMAX
 3960                   19D
 3961                   12D
 39615                  11D,1
 3962                   FRESHPD
 3963  2         STORE  TFF
 39635 2         ITCQ   0
 3964   TFFMAX   DMOVE  1
 3965            RTB
 3966                   NEARONE
 3967                   FRESHPD
 3968  2         STORE  TFF
 3969  2         ITCQ   0
 4000   HIECC    DMOVE  1
 4001            RTB
 4002                   10D
 4003                   FRESHPD
 4004  2         STORE  14D
 4006            VXV    1
 40062           ABVAL  TSLT
 40064                  RN
 40066                  VN
 40068 2                2
 4007            NOLOD  1
 4008            DMP    TSLT
 4010                   1/MUE
 40101 2                1               H/MUE  B5  PD2,3
 4011            NOLOD  1
 4012            DMP
 4013                   0                H H/MUE  B-26  PD4,5
 4014            UNIT   2
 4015            DOT    DMP
 4016            TSLT   DSQ
 4017                   RN
 4018                   VN
 4019                   2
 4020                   2
 4021            DDV    2
 4022            DSU    DSQ
 4023            DAD    SQRT
 4024                   4D
 4025                   RMAG
 4026  2                TWO(-2)         E  B-1  PD6,7
 40291           NOLOD  0
 40292 2         STORE  ECC
 4030            NOLOD  1
 4031            BDSU   TSRT
 4032                   TWO(-2)
 4033  2                1               B-2    DEL    PD8,9
 4034            TSRT   0
 4035                   4
 4036  2                1               PD10,11  B-27
 4037            DSU    1
 4038            BDDV
 4039                   TWO(-2)
 4040  2                8D              H H/MUE(2-DEL)  B-25  =RPAR  PD10,11
 40421           TSRT   1
 40422           BDSU   BPL
 40423                  R400K
 40424                  1
 40425                  10D
 40426 2                TFFMAX
 404261          DOT    1
 404262          BPL
 404263                 RN
 404264                 VN
 4042652                HIECC1
 4043            DDV    2
 4044            DSU    TSRT
 4045            DDV
 4046                   4D
 4047                   RMAG
 4048                   TWO(-2)
 4049                   1
 4050  2                6D              COSTH  PD12,13  B-1
 40501           NOLOD  1
 4052            BMN    BDSU
 40525                  TFFMAX
 4053  2                TWO(-2)
 4054            DAD    2
 4055            BDDV   SQRT
 4056            COMP
 4057                   TWO(-2)
 4058  2                12D             PD14,15 B0  TAN(TH/2)
 4060            TSRT   2
 4061            BDDV   DSU
 4062            TSRT   DDV
 4063                   R400K
 4064                   1
 4065                   4D
 4066                   TWO(-2)
 4067                   1
 40671 2                6D
 4069            NOLOD  1
 4070            BMN    BDSU
 40701                  TFFMAX
 4071  2                TWO(-2)
 4072            DAD    2
 4073            BDDV   SQRT
 4074            COMP
 4075                   TWO(-2)
 4076  2                16D             TAN(TH1/2)  PD18,19
 4078            TSRT   1
 4079            DAD
 4080                   8D
 4081                   1
 4082  2                TWO(-2)
 4083            DSU    1
 4084            BMN    DMP
 4085                   18D
 4086                   14D
 40865 2                TFF0            (1+DEL/4)(TANTH1/2)-TAN(TH/2))
 4088            DSQ    1
 4089            DMP
 4090                   18D
 4091  2                18D             (TAN(TH1/2))CUBED  PD22,23
 4092            DSQ    1
 4093            DMP    BDSU
 4094                   14D
 4095  2                14D             PD22,23   B0
 4097            TSRT   2
 4098            BDSU   DMP
 4099            DAD
 5000                   8D
 5001                   1
 5002                   DP1/3S
 5003                   -
 5005  2                20D             B-2   PD22,23
 5006            DMP    3
 5007            TSLT   SQRT
 5008            DMP    DMP
 5009            TSRT   RTB
 5010                   10D
 5011                   1/MUE
 5012                   1
 5013                   10D
 5014                   22D
 5015                   7D
 5016                   FRESHPD
 5017  2         STORE  TFF
 5018  2         ITCQ   0
 5019   TFF0     DMOVE  1
 5020            RTB
 5021                   ZERODP
 5022                   FRESHPD
 5023  2         STORE  TFF
 5024  2         ITCQ   0
 50291 2         ITCQ   0
 5032   TWO(-2)  2DEC   .5
 5033   DP1/3S   2DEC   .3333333333 B-1
L       DUMMY 501 INITIALISATION
 0001            BANK   33
 00012  BEGINNER TC     BANKCALL        CHANGE IMUMODE AS REQUIRED.
 00013 2CADRMODE CADR   IMUREENT
 0002   BEGIN501 TC     INTPRET
 0003            VMOVE  1
 0004            ITC
 0005                   RN
 0006  2                CALCGRAV
 00061           EXIT   0
 0007            TC     PHASCHNG        SETUP SOME PHASE INFO.
 00072 2EXITLOC2 OCT    00105           5.1 MODE GOES WITH READACCS.
 0008            INHINT
 0009            CS     TIME1
 0010            AD     STARTDT1
 0011            TC     WAITLIST
 0012  2         CADR   READACCS
 0013            CS     TIME1           SPARE START ROUTINE
 0014            AD     STARTDT2
 0015            TC     WAITLIST
 0016  2         CADR   START2
 0017  2         TC     ENDOFJOB
 00171  BEGINSW  TC     BANKCALL        WAIT FOR MODE SWITCH IF NECESSARY.
 00172           CADR   IMUSTALL
 00173 2         TC
 00174 2         TC     ENDOFJOB
 00179           DEC    0               HOLE FOR 2DEC PATCHING STARTDT1 -1
 0018   STARTDT1 DEC    200
 0019  2STARTDT2 DEC    830
 0020   START2   CAF    PRIO27
 0021            TC     FINDVAC
 0022  2         CADR   S4BSMSEP
 0023            TC     TASKOVER
L      2RE-ENTRY CONTROL
 0001  2         SETLOC 56000
R0002            THE PIPUP SECTION IS A TASK WHICH READS THE PIPAS EVERY .5
R0003   SECONDS. ACCELERATION HISTORY OVER THE LAST TWO SECONDS (FOUR READINGS)
R0004   IS MAINTAINED  IN THE XPIPBUF, YPIPBUF, AND ZPIPBUF REGISTERS. EACH PIPA
R0005   READING IS SUMMED INTO THE XPIPSUM ETC. REGISTERS, AND EVERY FOURTH READ
R0006   ING AVERAGE G IS CALLED TO USE THE SUMMED READINGS TO UPDATE POSITION
R0007  2AND VELOCITY AND SET THE PIPSUM REGISTERS TO ZERO.
R0014  2  GOES THRU PIPUP ONLY EVERY 2 SEC.  (ELSEWHERE MORE OFTEN.)
 00143           CADR   REPIPASR
 00145  REPIPUP  CAF    -1
 00147 2         TC     PIPUP + 1       REREAD PIPAS IF NECESSARY.
 0015            CADR   PIPASR
 0016   PIPUP    CAF    -1
 0017  2         TC     ISWCALL          GO TO PIPAREAD SUBROUTINE.
 0018            CAF    THIRTN          PICK UP AT REDO5.13
 00181           TC     NEWPHASE
 00182 2         OCT    5               5.13 RESTART.  (NO TIME CALL.)
 00188  REDO5.13 CAF    DT
 0019            TC     WAITLIST
 0020  2         CADR   PIPUP
 00202           CS     PIPTIME + 1
 00205 2         TS     TBASE5          SAVE NEW TIME.
 0022            CAF    IPIPDT
 0023            TC     WAITLIST
 0024  2         CADR   INTERPIP         READ ACCELERATION MORE OFTEN.
 0026            CAF    PRIO16
 0027            TC     FINDVAC
 0028  2         CADR   ENTRYTOP
 0035            CAF    TWO
 0036  2         TS     PIPCTR
 00362           CAF    FOURTN          THIS WILL PICK UP AT ENTRYTOP + 3.
 00364           TC     NEWPHASE
 00366 2         OCT    5               5.14 RESTART.
 0037  4         TC     TASKOVER
 0041   IPIPDT   DEC    50
P0042  2         JOB WHICH PROCESSES PIPA READINGS TO UPDATE POSITION AND VELOCI
 0043   ENTRYTOP XCH    TENTRY          UPDATE ENTRY TIME.
 0044            AD     TWO
 0045  2         XCH    TENTRY          IN SECS SINCE START OF ENTRY.
 0046            CAF    ONE
 0047  2         TS     PIPAGE
 0048            CS     DELVX
 0049            TS     XPIPBUF + 3
 0050            CS     DELVY
 0051            TS     YPIPBUF + 3
 0052            CS     DELVZ            SAVE PIP COUNTS.
 0053  2         TS     ZPIPBUF + 3
 00581           TC     PHASCHNG
 00582           OCT    01705           5.15 RESTART PICKS UP AT REFAZE4.
 00586           TC     BANKCALL        COMPENSATE THE PIPA DATA
 00587 2         CADR   1/PIPA
 0059  2REFAZE4  TC     INTPRET
 0060            ITC    0               GO TO AVERAGE G INTEGRATION ROUTINES TO
 0061                   CALCRVG         USE PIPA READINGS TO UPDATE POSIITON AND
A0062                                   VELOCITY.
 00622           TC     PHASCHNG
 00623 2         OCT    02105           5.17 RESTART AT REFAZE8.
 00625  REFAZE8  TC     INTPRET
P0063  2 PROCESS AVERAGE G OUTPUT...SCALE IT AND GET INPUT DATA
 0064   SCALEPOP VXSC   0
 0065                   VPIP             KVSCALE = (12800/.3048)0(25766.1973 X2)
 0066                   KVSCALE          KVSCALE = .81491944
 0067  2         STORE  (V)              V VECTOR
 0068            TEST   2
 0069            VXV    VXSC             (VREL) = (V) + KWE UNITR*UNITW
 0070            VAD
 0071                   RELVELSW         SWITCH NUMBER.
 0072                   GETUNITV
 0073                   UNITR
 0074                   UNITW
 0075                   KWE
 0076                   (V)
 0077  2         STORE  (V)              NEW V VECTOR IS RELATIVE.
 0078   GETUNITV NOLOD  1
 0079            UNIT
 0080  2         STORE  UNITV            HALF MAX, OF COURSE.
 0081            TSLT   0
 0082                   28D              RESCALE MAGNITUDE SQUARED.
 0083                   2                SHIFT COUNT.  (2 BECAUSE HALF-LEN SQRD
 0084  2         STORE  VSQUARE          VELOCITY SQUARED. (NORMAL SCALING)
 0085            DSU    0                LEQ = VSQUARE-1
 0086                   VSQUARE          4 G-S FULL SCALE
 0087                   FOURTH
 0088  2         STORE  LEQ
 0089            TSLT   0
 0090                   30D
 0091                   1
 0092  2         STORE  V
 0093            DOT    1
 0094            TSLT
 0095                   (V)              RDOT = V.UNITR
 0096                   UNITR
 0097                   1                AND SCALE BACK UP, UNITS ARE 1/2.
 0098  8         STORE  RDOT
 0099            DMOVE  0                SAVE OLD DRAG VALUE.
 0100                   D
 0101  2         STORE  DOLD
 0102            ABVAL  2
 0103            TSLT   DMP
 0104            BZE
 0105                   DELV             KASCALE=5.85 16384/(4 .3048 805 100)
 0106                   2                2 FOR 2 SEC,  3 FOR 1 SEC, 4 FOR  .5 --
 0107                   KASCALE           = 3.   /4                       /25
 0108                   SETMIND
 0109  2         STORE  D                ACCELERATION   (DRAG, ALMOST)
 0110   GETUNI   VXV    1                UNI = UNIT(V*R)
 0111            UNIT
 0112                   (V)              COULD USE UNITV.
 0113                   UNITR
 0114  2         STORE  UNI              INERTIAL OR RELATIVE AS IS (V).
R0115  2   SOME OF THE FOLLOWING TARGETTING MIGHT BE DONE LESS OFTEN THAN ABOVE.
 0116            TEST   1                THIS TEST MIGHT BE COMBINED WITH  THE
 0117            DMOVE                   PREVIOUS ONE IF ALL CALCULATIONS ARE
 0118                   RELVELSW         DONE EVERY CYCLE.
 0119                   GETETA
 0120                   PIPTIME
 0121  8         STORE  DTEAROT
 0122   UPDATERT ITC    0                UPDATE PREDICTED TARGET VECTOR RT
 0123  2                EARROT2
 0124            NOLOD  1
 0125            DOT    RTB              SINCE (RT) UNIT VEC, THIS IS 1/4 MAX.
 0126                   UNI              LATANG = RT.UNI
 0127                   FRESHPD
 0128            STORE  LATANG           LATANG = MAC LATANGLE/4 (NO 2 PI)
A0129  2                                 UNUSUAL SCALING FOR LATANG. ( = ASIN L.
 0130   GETANGLE DOT    3                THETA = ARCCOS(RT.UNITR)
 0131            DSU    BPL              RT IS UNIT VECTOR
 0132            DAD    TSLT
 0133            ACOS
 0134                   RT
 0135                   UNITR
 0136                   NEAR1/4          TO IMPROVE ACCURACY, CALC RANGE BY
 0137                   TINYTHET         TINYTHET IF HIGH ORDER PART OF
 0138                   NEAR1/4          ARCCOS ARGUMENT IS ZERO
 0139                   1
 0140  2         STORE  THETAH
 01402 2         EXIT   0
 01404  REFAZE10 TC     PHASCHNG
 01405           OCT    02205           5.18 RESTART AT REFAZE10
 01407           TC        INTPRET
P0141  2         JUMP TO PARTICULAR RE-ENTRY PHASE.
 0142   SEQUENCE ITCI   0               BRANCHES TO VARIOUS CONTROL PHASES.
 0143  2                GOTOADDR        ADDRESS OF PHASE EQS STORED HERE.
R0144            GOTOADDR CONTAINS THE ADDRESS OF THE ROLL COMMAND EQUATIONS
R0145  2APPROPRIATE TO THE CURRENT PHASE OF RE-ENTRY.  SEQUENCING IS AS FOLLOWS:
R0146   INITROLL SET HERE INITIALLY.  HOLDS INITIAL ROLL ATTITUDE UNTIL KAT  EX-
R0147            CEEDED. THEN HOLDS NEW ROLL ATTITUDE UNTIL VRTHRESH EXCEEDED.
R0148  2         THEN BRANCHES TO
R0149   HUNTEST  THIS SECTION CHECKS TO SEE IF THE PREDICTED RANGE AT NOMINAL
R0150            L/D FROM PRESENT CONDITIONS IS LESS THAN THE DESIRED RANGE
R0151              IF NOT-- A ROLL COMMAND IS GENERATED BY THE CONSTANT DRAG
R0152              CONTROLLER.
R0153              IF SO-- CONTROL AND GOTOADDR ARE SET TO UPCONTRL
R0154            USUALLY NO ITERATION IS INVOLVED EXCEPT IF THE RANGE DESIRED IS
R0155  2         TOO LONG ON THE FIRST PASS THRU HUNTEST.
R0156   UPCONTRL CONTROLS ROLL DURING THE SUPER-CIRCULAR PHASE. UPCONTRL IS TERM
R0157            INATED EITHER (A) WHEN THE DRAG (AS MEASURED BY THE PIPAS)
R0158            FALLS BELOW Q7 OR (B) IF RDOT IS NEGATIVE AND REFERENCE VL
R0159            EXCEEDS V.  IN CASE (A), GOTOADDR IS SET TO KEP2 AND IN (B) TO
R0160  2         PREDICT3, SKIPPING THE KEPLER PHASE OF ENTRY.
R0161   KEP2     GOTOADDR IS SET HERE DURING THE KEPLER PHASE TO MONITOR DRAG.
R0163            SPACECRAFT IS INSTANTANEOUSLY TRIMMED IN PITCH AND YAW TO THE
R0164            COMPUTED RELATIVE VELOCITY VECTOR.  THE LAST COMPUTED ROLL
R0165            ANGLE IS MAINTAINED.  WHEN THE MEASURED DRAG EXCEEDS Q7+.5,
R0166  2         GOTOADDR IS SET TO
R0167   PREDICT3 THIS CONTROLS THE FINAL SUB-ORBITAL PHASE. ROLL COMMANDS CEASE
R0168            WHEN V IS LESS THAN VQUIT.  AN EXIT IS MADE TO TERMALT WHEN
R0169            TERMINAL ALTITUDE IS REACHED.
P0180  2  OUT OF SEQUENCE SUBSECTION TO COMPUTE ETA.
 01805           BANK   30
 0181   GETETA   TEST   1
 0182            DMP                     NOT USED AT LOW VEL WHERE THETA NEG.
 0183                   EGSW
 0184                   SUBETA           BRANCHES IF INTO EQ. GLIDE PHASE.
 0185                   THETAH
 0186                   KTETA             = 1000X2PI/(2)E14 163.84
 0187  2         STORE  ETA              DONT REALLY WANT IT, BUT NO PUSH WANTED
 0188   GETETA2  NOLOD  1
 0189            DAD
 0190                   PIPTIME
 0191  2         STORE  DTEAROT
 0192            ITC    0
 0193  2                UPDATERT
 0194   SUBETA   DSU    1                SWITCH FROM INERTIAL TO RELATIVE
 0195            BPL    SWITCH           VELOCITY WHEN V LESS THAN .5 VSAT.
 0196                   V
 0197                   FOURTH
 0198                   SUBETA2
 0199  2                RELVELSW         SHOULD CHANGE TO OFF (NON-BRANCH) STATE
 0200   SUBETA2  DMP    1
 0201            DDV    ITC
 0202                   THETAH
 0203                   KT               KT = RE(2 PI)/ 2 VS 16384 163.84
 0204                   V                                       /2 VSAT
 0205  2                GETETA2
 0206   SETMIND  DMOVE  0                MAKE D NON-ZERO.
 0207                   1BITDP
 0208  2         STORE  D
 0209            ITC    0
 0210  2                GETUNI
 0211   TINYTHET NOLOD  3                ENTER WITH  X-.249
 0212            DSU    ABS              GET 1/4 - MPAC
 0213            TSLT   SQRT             SCALE UP BEFORE SQRT.
 0214            DMP                     HAS FACTOR FOR UP SCALING.
 0215                   1BITDP + 1       X = SQRT(2(1-COSX)),   IN RADIANS
 0216                   13D              X/2PI=(1/64PI)(SQRT(((1-COSX)/4)2EXP13)
 0217                   KACOS
 0218  2         STORE  THETAH
 02181           RTB    0                OFF TO PRE-SEQUENCER...
 02182                  REFAZE10
P02183           MAINTAINS INITIAL ROLL UNTIL D = KAT, GOES INTO HUNTEST WHEN
R02184 4RDOT = VRCONT.
 02186 2         BANK   31
 021865 KEPCADR1 CADR   KEP2
 02187 2HUNTCADR CADR   HUNTEST
 0219   INITROLL DMOVE  0
 02192                  INITL/D
 02194 2         STORE  L/D
 02196           TEST   2               IF D-.05 G NEG, GO TO LIMITL/D
 0220            DSU    BMN              IF NOT, SET .05 G SWITCH FOR SCS
 0221            EXIT
R02215 4RDOT = VRCONT.
 0222                   INRLSW
 0223                   INITRL1
 02231                  D
 02232                  .05G
 02233 2                LIMITL/D
 0224            TC     RELAYON          SEND .05 G SIGNAL TO SCS.
 0225            OCT    40100
 0226            TC     NEWMODE          SET MODE TO AFTER .05 G STATE.
 0227            OCT    00064
 0228  2         TC     INTPRET
 022802          DMOVE  0               MAY WANT THIS IN UPDWNTST FOR 278
 022804                 LAD
 0228052         STORE  L/D
 022806          NOLOD  0
 0228072         STORE  INITL/D
 022808          SWITCH 2                IF V-VFINAL NEG, GO TO FINAL PHASE
 02281           DSU    BPL
 022812          EXIT
 022814                 INRLSW
 022816                 V
 022818                 VFINAL
 02282 2                UPDWNTST
 022822          CAF    KEPCADR1
 022824          TS     GOTOADDR
 0228262         TC     INTPRET
 022828          ITC    0
 02283 2                LIMITL/D
 022832 UPDWNTST DDV    0
 022834                 RDOT
 0228362                V                RESULT INTO PD
 022838          NOLOD  5                IF V-VFINAL+K(RDOT/V)CUBED POS,L/D=-LAD
 02284           DSQ    DMP
 022842          DDV    DSU
 022844          DAD    BOV
 022846          BMN    LODON
 022848          COMP
 02285                  -
 022854                 K44
 022856                 VFINAL
 022858                 V
 02286                  LIMITL/D
 022862                 LIMITL/D
 022864                 LAD
 02287 2         STORE  INITL/D
 022872          NOLOD  0
 0228752         STORE  L/D
 02288           ITC    0
 0228852                LIMITL/D
 0229   INITRL1  DSU    2                IF KAT-D POS, GO TO OUT WITH COMMAND
 0230            BPL    LODON                IF NEG,  L/D = LAD
 0231            DMOVE
 0232                   KAT
 0233                   D
 0234                   VRTHRES
 0236                   LAD              WHEN D GREATER THAN KAT, L/D = LAD
 0237  2         STORE  L/D
 0238   VRTHRES  DAD    1               IF RDOT + VRCONT NEG, GO TO STEER
 0239            BMN    EXIT            IF POS, SET SELECTOR TO HUNTEST.
 0240                   RDOT
 0241                   VRCONT
 0242                   LIMITL/D         DO LATERAL CONTROL IF NEEDED.
A0243                                                                 SPACER.
 0244            CAF    HUNTCADR
 0245            TS     GOTOADDR        AND FALL THRU INTO HUNTEST.
P0246  2 ... HUNTEST SECTION... CHECKS TO SEE WHEN PREDICTED RANGE = DESIRED ONE
A02465 2KEEP WITH ABOVE CODING........
 0247  2         TC     INTPRET
 0248   HUNTEST  DMOVE  0
 0249                   LEWD1
 0250  2         STORE  LEWD
 0251            DSU    2
 0252            BMN    LODON
 02525           DMOVE
 0253                   D
 0254                   C20
 0255                   HUNTESTA
 02555                  LEWD2
 0256  2         STORE  LEWD
 02562           DMOVE  0
 02564                  D               A1 = D
 02566 2         STORE  A1
 0257   HUNTESTA DMOVE  0                IF RDOT POS, TEM1B = LAD
 0258                   LAD
 0259  2         STORE  TEM1B
 0260            BMN    1
 0261            LODON  DMOVE
 0262                   RDOT
 0263                   A0CALC
 0264                   LEWD
 0265  2         STORE  TEM1B
 0266   A0CALC   DDV    1                V1 = V + RDOT/TEM1B
 0267            DAD
 0268                   RDOT
 0269                   TEM1B
 0270                   V
 0271  2         STORE  V1
 0272            DSQ    3                A0=(V1/V)SQ(D0+RDOT SQ/(TEM1B 2 C1 HS)
 0273            DDV    DDV
 0274            DAD    DMP
 0275            DMP    DDV
 0276                   RDOT
 0277                   TEM1B
 0278                   2C1HS
 0279                   D
 0280                   V1
 0281                   V1
 0282                   VSQUARE
 0283  2         STORE  A0
 02832           BPL    0               IF RDOT NEG, A1 = A0
 02834                  RDOT
 02836 2                TESTHSW
 02837           DMOVE  0
 02838                  A0
 02839 2         STORE  A1
 0284   TESTHSW  TEST   1                IF HUNTSW1 ON (BRANCH), GO TO HUNTEST1
 0285            SWITCH
 0286                   HUNTSW1
 028702                 HUNTEST1
 0287042                HUNTSW1
 028706          DMOVE     0             ZERO DIFFOLD THE FIRST TIME THRU.
 028708                 3ZEROS
 02871 2         STORE  DIFFOLD
 028712          DAD    0                V1OLD = V1 + C18  (500FPS)
 028714                 V1               MAKES OLD VCORR -500 AND NEW +500 ..
 028716                 C18              INITIAL VALUE ON VCORR = -500 FPS SO
 0287182         STORE  V1OLD            (IN+TIAL 0ALUES IF NEEDED ON 1ST PASS+
 02872           DMOVE  0                Q7 = Q7F
 028722                 Q7F
 0287242         STORE  Q7
 028726 HUNTEST1 DMP    2                ALP = A0 2HSD/LWD / V1 V1
 0288            DDV    RTB
 0289            DDV    DDV
 0290                   A0
 0291                   2C1HS
 0292                   V1
 0293                   FRESHPD
 0294                   V1
 02945                  LEWD
 0295  2         STORE  ALP
 0296            NOLOD  1
 0297            BDSU   BDDV
 0298                   NEARONE          FACT1 = V1 / (1 - ALP)
 0299                   V1
 0300  2         STORE  FACT1
 0301            DSU    1
 0302            DMP    DDV              FACT2 = ALP(ALP - 1) / A0
 0303                   ALP
 0304                   NEARONE
 0305                   ALP
 0306                   A0
 0307  2         STORE  FACT2
 0308            DMP    2                VL = FACT1(1 - SQRT(ALP + Q7 FACT2))
 0309            DAD    SQRT
 0310            BDSU   DMP
 0311                   Q7
 0312                   FACT2
 0313                   ALP
 0314                   NEARONE
 0315                   FACT1
 0316  2         STORE  VL
 0317            NOLOD  2                GAMMAL = LEWD(V1-VL)/VL
 0318            BDSU   DMP
 0319            DDV
 0320                   V1
 0321                   LEWD
 0322                   VL
 0323  2         STORE  GAMMAL1          GAMMAL1 USED IN UPCONTRL
 0324            DSU    1                IF VL-VMIN NEG, GO TO SHORT
 0325            BMN
 0326                   VL
 0327                   VMIN
 0328  2                PREFINAL         PREFINAL = SHORT
 0329            DSQ    0                VBARS = VL VL
 0330                   VL
 0331  2         STORE  VBARS
 0332            DSU    1                IF VSAT - VL NEG,  GO TO CONSTD.
 0333            BMN
 0334                   HALVE            VSAT = .5
 0335                   VL
 0336                   BECONSTD         GOTOADDR MAY BE SIDETRACKED.
 0337  2         STORE  DVL              DVL = VSAT - VL
 0338            DMOVE  0
 0339                   HALVE            VS = VSAT
 0340  2         STORE  VS
 0341            NOLOD  2
 0342            DSU    BMN              IF V1 GREATER THAN VSAT, GO ON.
 0343            BDSU
 0344                   V1
 0345                   GETDHOOK
 0346                   DVL              DVL = DVL - (VSAT-V1) =  V1 - VL
 0347  2         STORE  DVL
 0348            DMOVE  0
 0349                   V1
 0350  2         STORE  VS               VS = V1
 0351   GETDHOOK TSRT   3                DHOOK = ((1-VS/FACT1)SQ - ALP)/FACT2
 0352            DDV    BDSU
 0353            TSLT   DSQ
 0354            DSU    DDV
 0355                   VS
 03552                  1
 0356                   FACT1
 0357                   HALVE
 0358                   1
 0359                   ALP
 0360                   FACT2
 0361  2         STORE  DHOOK
 0362            TSRT   1               RESCALE BY 32.
 0363            DDV    DSU
 0364                   DHOOK
 0365                   5
 03655                  Q7
 0366                   CHOOK
 0367  2         STORE  AHOOKDV
 0368            NOLOD  4
 0369            DAD    DMP              GAMMAL = GAMMAL1-CH1 DVLSQ(1+AHOOK DVL
 0370            DMP    DMP                     /DHOOK VBARS
 0371            DDV    DDV
 0372            BDSU   BMN
 0373                   1/8TH
 0374                   CH1
 0375                   DVL
 0376                   DVL
 0377                   DHOOK
 0378                   VBARS
 0379                   GAMMAL1
 0380                   NEGAMA           FIND CONDITIONS FOR GAMMAL = 0.
 0381            STORE  GAMMAL
P0382  2   ... PREDICT RANGES FOR EACH PHASE OF TRAJECTORY...
 0383   RANGER   DSQ    1
 0384            TSRT   BDSU             COSG = 1-GAMMAL SQ/2 , TRUNCATED SERIES
 0385                   GAMMAL
 0386                   2
 0387                   HALVE
 0388  2         STORE  COSG/2
 0389            DSU    3
 0390            DMP    DMP              E=SQRT(1+VBARS-2)VBARS COSG COSG)
 0391            DMP    TSLT
 0392            DAD    SQRT
 0393                   VBARS
 0394                   HALVE
 0395                   VBARS
 0396                   COSG/2
 0397                   COSG/2
 0398                   2                MULT BY 4
 0399  2                C1/16            E  (E/4 REALLY) INTO PD.
 0400            DMP    2                ASKEP/2 = ARCSIN(VBARS COSG SING/E)
 0401            DMP    DDV
 0402            ASIN   TSLT
 0403                   VBARS
 0404                   COSG/2
 0405                   GAMMAL
 0406                   -                E FROM PD.
 0407  2                1                ASKEP INTO PD.
 0408            DMP    1                ASP1 = Q2 + Q3(VL-Q4) = Q2' + Q3 VL
 0409            DAD    DAD
 0410                   VL
 0411                   Q3
 0412  2                Q2               ASP1 + ASKEP INTO PD.
 041202          DMP    0               MODIFY GAMMAL1
 041204                 GAMMAL1
 041206                 POINT8
 041208          DMP    1
 04121           DAD
 041212                 GAMMAL
 041214                 POINT2
 0412162         STORE  GAMMAL1
 0413            DSQ    3                ASPUP = -C12 LOG(V1 V1 Q7/VBARS D)/GAMM
 0414            DMP    DDV                                             AL1
 0415            DDV    RTB
 0416            DMP    DDV
 0417                   V1
 0418                   Q7
 0419                   VBARS
 0420                   A0
 0421                   LOG
 0422                   C12
 0423  2                GAMMAL1          ASPUP UNTO PD
 0424            DMP    1                ASPDWN = KC3 RDOT V / A0
 0425            DMP    DDV
 0426                   KC3
 0427                   RDOT
 0428                   V
 0429  2                A0               ASPDWN INTO PD.
 0430            DSU    2                ASP3 = Q5(Q6-GAMMAL)
 0431            DMP    DAD
 0432            DAD    DAD
 0433                   Q6
 0434                   GAMMAL           ASP = ASP1+ASKEP+ASPUP+ASP3
 0435  2                Q5               ASP INTO PD
 0436            NOLOD  1
 0437            BDSU   TSRT
 0438                   THETAH
 0439                   4                DIFF = (ASP-THETA)/16
 0440  2         STORE  DIFF             END OF TEST
 0441            NOLOD  4
 0442            ABS    DSU              IF ABS((THETAH-ASP) - 25NM NEG,GOTOUPSY
 0443            BMN    TEST             IF HIND SET, GO TO GET LV THE REPEATWAY
 0444            LODON  BMN              IF  DIFF NEG, GO TO CONSTD
 0445            LODON  DSU              VCORR = V1 - V1OLD
 0446                   25NM
 0447                   GOTOUPSY
 0448                   HIND
 0449                   GETVCOR
 0450                   DIFF
 0451  2                DCONSTD          SETTING UP DIFFOLD ON THE WAY
 0452                   V1
 0453                   V1OLD            VCORR = V1 - V1OLD
 0454  2         STORE  VCORR
 0455   GETVCOR  DSU    2
 0456            TSRT   DDV
 0457            BDDV   TSRT
 0460                   DIFFOLD
 0461                   DIFF
 04615                  2
 0462                   VCORR
 0463                   DIFF
 04635                  2
 0464  2         STORE  VCORR
 04641 2         EXIT   0
 04642           TC     PHASCHNG        HAVE GROUP 3 PICK UP AT PREHUNT.
 04643 2         OCT    02003           3.16 RESTART.
 04644           CAF    ADENDEXT        SIDETRACK NEXT PASS UNTIL THIS ONE DONE.
 04645 2         TS     GOTOADDR        ONLY AFTER RESTART IS LEFT AFTER DETOUR.
 04646           CAF    ZERO            ZERO OVFIND TO GUARD AGAINST FUTURE BOV
 04647 2         TS     OVFIND
 04649 2         TC     INTPRET
 0465            NOLOD  2
 0466            BDSU   BPL              IS VCORR - 1000 POS,
 0467            DAD                     VCORR = 1000
 0468                   VCORLIM
 0469                   CHKVL
 0470                   VCORR            LEAVING VCORLIM IN MPAC
 0471  2         STORE  VCORR
 0472   CHKVL    DAD    2
 0473            DSU    BMN              IF VL + VCORR - VSAT POS, VCORR=VCORR/
 0474            LODON  TSRT
 0475                   VCORR
 0476                   VL
 0477                   HALVE
 0478                   GETNUV1
 0479                   VCORR
 0480                   1
 0481  2         STORE  VCORR
 0482   GETNUV1  DAD    0
 0483                   V1
 0484                   VCORR
 0485  2         STORE  V1
 0486            DMOVE  0                SAVE OLD VALUE OF ASP
 0487                   DIFF
 0488  2         STORE  DIFFOLD
 0489            TEST   1                SET HIND AND GO TO HUNTEST1
 0490            SWITCH ITC
 0491                   HIND
 0492                   HUNTEST1
 0493                   HIND
 0494  4                HUNTEST1
 0495   NEGAMA   NOLOD  1                ENTER WITH GAMMAL IN  MPAC
 0496            DMP    DMP              FIND GAMMAL VL / 3
 0497                   VL
 0498  2                1/3RD               .. AND PUSH DOWN PARTIAL RESULT..
 04982           DMP    0
 04984                  LEWD
 04986                  1/3RD           PUSH LEWD/3 ALSO
 0499            DAD    3
 0500            DMP    DMP              DEL VL = GAMMAL VL/3)/(LEWD/3 - DVL(2/3
 0501            DDV    DDV                  + AHOOKDV)(CH1 GS/DHOOK VL))
 0502            BDSU   BDDV
 0503                      AHOOKDV
 0504                      1/12TH
 0505                      DVL
 0506                      CH1
 0507                      DHOOK
 0508  2                VL              2 OUT OF ,1 INTO PUSH
 0510            DAD    0
 0511                   VL
 0512  2         STORE  VL               VL = VL + DEL VL
 0513            NOLOD  3                VL IS IN MPAC
 0514            DDV    BDSU             Q7 = ((1-VL/FACT1)SQ - ALP)/ FACT2
 0515            DSQ    DSU
 0516            DDV
 0517                      FACT1
 0518                      NEARONE
 0519                      ALP
 0520                      FACT2
 0521  2         STORE  Q7
 05212           DSQ    0               GET NEW VBARS.
 05213                  VL
 05214 2         STORE  VBARS
 0522            DMOVE   0
 0523                   3ZEROS
 0524  2         STORE  GAMMAL           GAMMAL = 0
 0525            ITC    0
 0526  4                RANGER
 05262 2ADENDEXT CADR   ENDEXIT
 052622 PREHUNT  TC     STATEUP         SET HUNTSW1 AND HIND SWITCHES
 0526242         OCT    00140
 0526262         TC     HUNTEST -1
 05264 2         BANK   27
 0527  2UPCADR   CADR   UPCONTRL
 0528  2GOTOUPSY EXIT   0               BACK TO BASIC.
 0529   HUNTDUMP CAF    UPCADR          RESET GOTOADDR
 05292           TS     GOTOADDR
 05295           TC     NEWMODE         CHANGE MODE TO SIGNAL END OF HUNT-TEST.
 05297 2         OCT    00065
 05298           CS     ONE             MAKE GROUP 3 INACTIVE WHEN DONE WITH
 052985          TC     NEWPHASE               THE ITERATIONS.
 05299 2         OCT    3               GROUP 3.
 0530            CS     FIXLOC          RESET PUSHDOWN POINTER
 05302           COM
 05304 2         TS     PUSHLOC
 05306           TC     INTPRET         ...AND FALL INTO UPCONTROL...
P0531  2THIS SECTION IS THE UPCONTROL FOR THE SUPERCIRCULAR PHASE
 0532   UPCONTRL DSU    3                IF V-V1 POS, GO TO DOWNCONTROL
 0533            BPL    LODON            IF D-Q7 NEG, GO TO KEP
 0534            DSU    BMN
 0535            LODON  BMN              IF RDOT NEG, GO TO VLTEST
 0536                   V                VLTEST TESTS FOR START OF FINAL PHASE
 0537                   V1
 0538                   DOWNCNTL
 0539                   D
 0540                   Q7
 0541                   KEP              SET CONSTS, ETC FOR BALLISTIC PHASE.
 0542                   RDOT
 0543  2                VLTEST
 0544   CONT1    DSU    1
 0545            BPL
 0546                   D                IF D-A0 NEG,L/D=LAD,GO TO 310
 0547                   A0
 0548                   GOPOSLAD
 0549            DMP    2                VREF=FACT1(1-SQRT(FACT2 D + ALP))
 0550            DAD    SQRT
 0551            BDSU   DMP
 0552                   D
 0553                   FACT2
 0554                   ALP
 0555                   NEARONE
 0556                   FACT1
 0557  2         STORE  VREF
 0558            NOLOD  1                RDOTREF = LEWD(V1-VREF)
 0559            BDSU   DMP
 0560                   V1
 0561                   LEWD
 0562  2         STORE  RDOTREF
 0563            DSU    1                IF VSAT - VREF NEG, GO TO CONTINU2
 0564            BMN    NOLOD            NOLOD TO PUSH DOWN (HALVE-VREF)
 0565                   VS
 0566                   VREF             NO RDHOOK UNTIL VREF LESS THAN VSAT.
 0567  2                CONTINU2         PUSHING DOWN IF NO BRANCH.
 0568            NOLOD  5                RDHOOK=CH1(AHOOKDVL/DVL(DV+1))DV DV
 0569            DMP    DDV                    /DHOOK VREF
 0570            DAD    DMP              WHERE DV = VS - VREF
 0571            DMP    DMP
 0572            DDV    DDV
 0573            BDSU
 0574                   AHOOKDV
 0575                   DVL
 0576                   1/8TH
 0577                   CH1
 0578                   0                ABOVE SHOULD HAVE PUSHED INTO LOC 0.
 0579                   -
 0580                   DHOOK
 0581                   VREF
 0582                   RDOTREF
 0583  2         STORE  RDOTREF          RDOTREF = RDOTREF - RDHOOK
 05832  CONTINU2 DSU    1               BYPASS FACTOR CALC, IF D-Q7MIN NEG.
 05834           BMN
 05836                  D
 05838                  Q7MIN
 05839 2                CONTINU3
 0584            DSU    0
 0585                   A1              FACTOR = (D-Q7)/(A1-Q7)
 0586  2                Q7               PARTIAL RESULT IN PD
 0587            DSU    1
 0588            DDV
 0589                   D
 0590                   Q7
 0591  2         STORE  FACTOR
 0592   CONTINU3 DSU    3               L/D = LEWD
 0593            DMP    DDV             -((RDOT-RDOTREF)F1/KB1+V-VREF)F1/KB2
 0594            DAD    DSU
 0595            DMP    DDV
 0596                   RDOT
 0597                   RDOTREF
 0598                   FACTOR
 0599                   KB1
 0600                   V
 0601                   VREF
 0602                   FACTOR
 0603  2                KB2             DELTA L/D INTO PD
 0604            BOV    3               NONLINEAR CIRCUIT FOR REDUCING HIGH
 0605            ABS    DSU             GAINS HERE
 0606            BMN    DMP
 0607            DAD    SIGN
 0608                   GOMXL/D1
 0609                   0
 0610                   PT1/16
 0611                   NEXT1
 0612                   POINT1
 0613                   PT1/16
 0614   NEXT1    TSLT   1
 0615            DAD    BOV
 0616                   -
 0617                   4
 06175                  LEWD
 0618  2                GOMXL/D1        PUSHES IF NO BRANCH, NO MATTER
 0619   NEGTESTS NOLOD  0
 0620  2         STORE  L/D
 062002          NOLOD  3               IF L/D NEG, AND D-C20 POS, L/D = 0
 062004          BPL    LODON
 062006          DSU    BMN
 062008          DMP
 06201                  LIMITL/D
 062012                 D
 062014                 C20
 062016                 LIMITL/D
 062018                 3ZEROS          L/D=0 NO NEG LIFT
 06202 2         STORE  L/D
 062022          ITC    0
 0620242                LIMITL/D
 062026 GOMXL/D1 RTB    1
 06203           DMP    ITC
 062032                 SIGNMPAC
 062034                 LAD
 062036                 NEGTESTS
P0621            CONSTANT DRAG CONTROLLER
 0624   DCONSTD  DMOVE  0
 0625                   DIFF             SAVE OLD VALUE OF DIFF FOR NEXT PASS.
 0626  2         STORE  DIFFOLD
 0627            DMOVE  0                V1OLD = V1
 0628                   V1
 0629  2         STORE  V1OLD
 0630   BECONSTD AXT,1  1                RESETS GOTOADDR  TO GO TO HUNTEST
 0631            RTB    SXA,1
 0632                   HUNTEST
 06325                  FRESHPD
 0633  2                GOTOADDR
 0634   CONSTD   DMP    0
 0635                   LEQ
 0636  2                C/D0             C/D0 LEQ INTO PD
 0637            DMP    2
 0638            DDV    DAD
 0639            DMP    DAD
 0640                   2HS              RDOTREF = - 2 HS D0/V
 0641                   C19             D0 = C19
 0642                   V
 0643                   RDOT
 0644  2                K2D              C/D0 LEQ + K2D(RDOT-RDOTREF) INTO PD
 0645            DMOVE  0
 0646                   C19
 0647   CONSTD1  DSU    3
 0648            DMP    DAD
 0649            TSLT   BOV
 06495           ITC
 0650                   D
 0651                   -
 0652                   K1D
 0653                   -
 0654                   8D
 0655                   GOMXL/D1
 0656  2                NEGTESTS
 0659   DOWNCNTL DSU    2                RDTR = LAD(V1-V)
 0660            DMP    DAD
 0661            DMP    DAD
 0662                   V
 0663                   V1
 0664                   LAD
 0665                   RDOT
 0666                   K2D
 0667  2                LAD/256          LAD + K2D(RDOT-RDTR) INTO PD
 0668            DSU    1
 0669            DSQ    DDV
 0670                   V1
 0671                   V
 0672  2                2C1HSLAD         (V1-V)SQ/(2 C1 HS/LAD) INTO PD
 0673            DSQ    2                DREF = (V/V1)SQ A0 - PD
 0674            DDV    BDDV
 0675            DSU
 0676                   V1
 0677                   VSQUARE
 0678  2                A0
 0679            ITC    0
 06791 2                CONSTD1
 0680  2KEP      EXIT   0
 0681            CAF    KEPCADR         SET GOTOADDR TO KEPLER PHASE.
 06815           TS     GOTOADDR
 0682            TC     NEWMODE         SET MODE TO KEPLER PHASE.
 06825 2         OCT    00066
 0683  2         TC     INTPRET
 0684   KEP2     DSU    1
 06841           BMN    EXIT
 06842                  D
 06843                  .05G
 06844 2                NO.05G
 06845           TC     RELAYON
 06846           OCT    40100           SEND .05G INDICATION
 06847 2         TC     INTPRET
 06848  KEP3     DAD    1               IF Q7+KDMIN - D NEG, GO TO FINAL PHASE
 0685            DSU    BMN
 0686                   Q7               MIN DRAG = Q7 + .5 FT/SEC/SEC
 0687                   KDMIN
 0688                   D
 0689  2                PREFINAL         FALL THRU IF POS...
 0690   ENDEXIT  EXIT   0                GOTOADDR IS SET HERE DURING VLHUNT.
 0691  2         TC     OVERNOUT
 06912  NO.05G   EXIT   0
 06914           TC     RELAYOFF        REMOVE .05G INDICATION
 06916           OCT    40100
 06918 2         TC     KEP3 -1
 06919  KEPCADR  CADR   KEP2
 0691952P3CADR   CADR   PREDICT3
 0692   VLTEST   DSU    1                IF V-VL-C18 NEG,EGSW=1,SELECTOR=PREDIC
 0693            DSU    BPL              GO TO PREDICT3
 0694                   V
 0695                   VL
 0696                   C18
 0697  2                CONT1
 0698   PREFINAL SWITCH 1                CHANGE GOTOADDR TO PREDICT3 AND FALL
 0699            EXIT                    INTO PREDICT3
 06995 2                EGSW
 06997           CS     ONE
 06998           TC     NEWPHASE
 06999 2         OCT    3
 0700            CAF    P3CADR
 07005           TS     GOTOADDR        SET TO PREDICT3 PHASE.
 0701            TC     NEWMODE
 07015 2         OCT    00067
 0702            TC     INTPRET         ... AND FALL INTO PREDICT3...
P0703  2  SUBORBITAL CONTROL  (REFERENCE TRAJECTOORY BY TABLE LOOK-UP.)
 0704   PREDICT3 DSU    4
 0705            BMN    LODON            IF V - VQUIT NEG,  STOP STEERING
 0706            TEST
 0707            VXV    DOT              IF (RT)*UNITR.UNI NEG, SET GONEPAST
 0708            BMN    EXIT
 0709                   V
 0710                   VQUIT
 0711                   STEER
 0712                   GONEPAST
 0713                   GONEGLAD
 0714                   RT
 0715                   UNITR
 0716                   UNI              (MIGHT SAVE THIS FROM EARLIER..
 0717  2                SETGPAST
 0718            CS     NEG14
 0719  2BACK     TS     JJ
 0720            CS     V
 0721            INDEX  JJ
 0722            AD     VREFER           VREF - V, HIGHEST VREF AT END OF TABLE.
 0723            CCS    A                IF VREF-V POS LOOP BACK
 0724            CCS    JJ               DECREMENT JJ , JJ CANNOT BE ZERO
 0725  2         TC     BACK
 0726            AD     ONE
 0727  2         TS     TEM1B            V-VREF IN TEM1B (MUST BE POSITIVE NUM)
 0728            INDEX  JJ
 0729            CS     VREFER
 0730            INDEX  JJ
 0731            AD     VREFER + 1       V(K+1) - V(K)     (POS NUM)
 0732            XCH    TEM1B
 0733            EXTEND
 0734            DV     TEM1B
 0735  2         TS     GRAD             GRAD = (V-VREF)/(VK+1 - VK)   (POS NUM
 0736            CAF    FIVE
 0737   BACK2    TS     M1
 0738            CAF    DEC15
 0739            AD     JJ
 0740            TS     JJ
 0741            INDEX  A
 0742            CS     VREFER
 0743            INDEX  JJ
 0744            AD     VREFER + 1       X(K+1) - X(K)
 0745            EXTEND
 0746            MP     GRAD
 0747            INDEX  JJ
 0748            AD     VREFER
 0749            INDEX  M1
 0750            TS     FX               FX = AK + GRAD (AK+1 - AK)
 0751            CCS    M1
 0752  2         TC     BACK2
 0753            CS     FX +1           DON:T DESTROY FX +1
 0754            COM
 0755            AD     D
 0756            EXTEND
 0757            MP     FX + 5           F1
 0758  2         TS     TEM1B            TEM1B= F1(D-DREF)
 0759            CS     RDOT             FORM RDOTREF - RDOT
 0760            DOUBLE
 0761            DOUBLE                  SCALE UP BY 8 FOR THIS PHASE.
 0762            DOUBLE
 0763            AD     FX + 3           RDOTREF
 0764            EXTEND
 0765            MP     FX + 4           F2
 0766            AD     TEM1B            ADD F2(DADV1-DADVR)
 0767            AD     FX + 2           RTOGO
 0768            XCH    PREDANG          NO OVERFLOW SKIP PLEASE.
 0769  2         TC     INTPRET
 0770            SMOVE  1
 0771            TSRT   BDSU            THETAH - PRED ANGLE
 0772                   PREDANG
 0773                   3
 0774  2                THETAH
 0775            SMOVE  3
 0776            BDDV   TSLT
 0777            BOV    DAD
 0778            BOV
 07782                  FX              FX = DRANGE/D L/D = Y
 07784                  -
 0779                   5
 0780                   GOMAXL/D
 0781                   LOD
 0782                   GOMAXL/D
 0783  2         STORE  L/D
 0784            ITC    0
 0785  2                GLIMITER
 0786   GOPOSLAD DMOVE  0
 0787                   LAD
 0788  2         STORE  L/D
 0789            ITC    0
 0790  2                LIMITL/D
 0791   SETGPAST SWITCH 0                SHOULD BE BY TARGET IF HERE.
 0792  2                GONEPAST
 0793   GONEGLAD COMP   0
 0794                   LAD              L/D = - LAD
 0795  2         STORE  L/D
 0796            ITC    0
 0797  2                GLIMITER
 0798   GOMAXL/D RTB    1
 0799            DMP                     L/D = LAD SIG(MPAC)
 0800                   SIGNMPAC
 0801                   LAD
 0802  2         STORE  L/D              AND FALLS INTO LIMITL/D SECTION.
 0803   GLIMITER DSU    2                IF GMAX/2-D POS, GO TO LIMITL/D
 0804            BPL    DAD              IF GMAX-D NEG, GO TO GOPOSLAD
 0805            BMN    DMP
 0806                   GMAX/2
 0807                   D
 0808                   LIMITL/D
 0809                   GMAX/2
 0810                   GOPOSLAD
 0811  2                2HS              2HS(GMAX-D) INTO PD
 0812            DMP    1
 0813            DAD    DMP
 0814                   LEQ
 0815                   1/GMAX
 0816  2                LAD              2HS(GMAX-D) (LEQ/GMAX+LAD) INTO PD
 0817            DDV    2
 0818            DAD    SQRT             XLIM = SQRT(PD+(2HSGMAX/V)SQ)
 0819            DAD    BMN             IF RDOT+XLIM NEG, L/D=LAD
 0821                   2HSGMXSQ
 0822                   VSQUARE
 0823                   -
 0824                   RDOT             KGLIM2= -5 SCALED
 0825                   GOPOSLAD
P0836  2COMES HERE TO COMPUTE ROLL COMMAND, CHECK LATERAL ERRORS, AND STEER
 0838   LIMITL/D TEST   1                NO LATERAL CONTROL IF PAST TARGET
 0839            DMP    DAD              Y = KLAT VSQUARE + LATBIAS
 0840                   GONEPAST
 0841                   L355
 0842                   VSQUARE
 0843                   KLAT
 0844                   LATBIAS
 0845  2         STORE  Y
 0846   L350     ABS    4                IF ABS(L/D)-L/DCMINR NEG, GO TO L353
 0847            DSU    BMN
 0848            LODON  SIGN             IF K2ROLL LATANG NEG, GO TO L357
 0849            BMN    LODON
 0850            TSRT                    Y = Y/2
 0851                   L/D
 0852                   L/DCMINR
 0853                   L353
 0854                   LATANG
 0855                   K2ROLL
 0856                   L357
 0857                   Y
 0858                   1
 0859  2         STORE  Y
 0860   L353     SIGN   2                IF LATANG SIGN(K2ROLL) - Y POS, SWITCH
 0861            DSU    BMN              IF POS, GO TO BL361 IN BASIC.
 0862            RTB
 0863                   LATANG
 0864                   K2ROLL
 0865                   Y
 0866                   L355
 0869  2                BL361
 0870   L355     DDV    2                ROLLC = ACOS((L/D)/LAD)
 0871            TSRT   ACOS
 0872            SIGN                    ROLLC = ROLLC SIGN(K2ROLL)
 0873                   L/D
 0874                   LAD
 0875                   1
 0876                   K2ROLL
 0877  8         STORE  ROLLC
 0878   STEER    EXIT   0
 0882   STEER2   CAF    BIT12           1/8 TH.
 0883            EXTEND
 0884            MP     ROLLC           SCALE ROLL OUTPUT FOR 16 SPEED.
 08841 2         TS     MPAC
 08842           CAF    BIT11           1/16 TH.
 08843           EXTEND
 08844           MP     ROLLBIAS        BIAS AOG FROM LIFT UP ORIENTATION
 08845           AD     MPAC            ROLL = ROLLC/8 + ROLLBIAS/16 + K1ROLL
 0885            AD     K1ROLL
 0886            TS     MPAC             AFRAID TO STORE POSS BAD NUM IN THETAD
 0887            TC     +4               SKIPS ON OVERFLOW
 0888            INDEX  A
 0889            CAF    LIMITS           ALLOW OVERFLOW (GO TO NEGMAX FROM POSMX
 0890  2         AD     MPAC
 08908           INHINT
 0891            TS     THETAD           THETAD = X CDU = ROLL
 08912           CS     BIT3
 08913           MASK   TMMARKER
 08914           AD     BIT3             SET BIT 3 IN TMMARKER WHEN THETAD COMP
 08915           TS     TMMARKER
 0892   OVERNOUT TC     PHASCHNG        RECYCLE GROUP 5 TO PIPUP WAIT STATE.
 08922 2         OCT    01405           5.12 RESTART.  (PIPUP SYNCED WITH 2 SEC)
 08923           TC     GRABDSP
 08924 2         TC     ENDENTRY
 08925           CAF    V06N62          DISPLAY TIME, VELOCITY, AND THETAH
 08926           TC     NVSUB
 08927 2         TC     RELDSPON
 08928 2         TC     FREEDSP
 08929 4ENDENTRY TC     ENDOFJOB
 0892958V06N62   OCT    00662
 0893   BL361    CS     K2ROLL           K2ROLL = - K2ROLL
 0894  2         TS     K2ROLL
 0895            CCS    L/D              IF L/D POS, EXIT
 0896            TC     RE-ENTER         SO IT WONT STORE IN PUSH LIST.
 0897            TC     RE-ENTER
 0898            TC     +2
 0899  2         TC     RE-ENTER
 0900            CCS    K2ROLL           K1ROLL = K1ROLL + K3ROLL SIGN(K2ROLL)
 0901            CAF    K3ROLL           K3ROLL = - .125
 0902            TC     +2
 0903            CS     K3ROLL
 0904            AD     K1ROLL
 0905            TS     K1ROLL
 0906  2         TC     RE-ENTER         SKIPS THIS ON OVERFLOW.
 0907            INDEX  A                POSMAX + 1 = NEGMAX  ETC.
 0908            CAF    LIMITS           NO LIMIT ON NUMBER OF ROLL REVS DURING
 0909            AD     K1ROLL               ENTRY.   (ROUTINE IS GENERAL.)
 0910            TS     K1ROLL           STILL DOESNT WORRY ABOUT 2SCOMP, THO.
 0911  4         TC     RE-ENTER
 0912   L357     SIGN   0
 0913                   L/DCMINR         L/D = L/DCMINR SIGN(L/D)
 0914                   L/D
 0915  2         STORE  L/D
 0916            ITC    0
 0917                   L355
P0922  2     ROUTINE TO PREDICT AND SET PITCH ANGLE FOR 2ND ENTRY CONDITIONS.
 0923   UPTHETA3 CAF    PRIO14
 0924            TC     FINDVAC
 0925  2         CADR   UPTHETA1
 0926  2         TC     TASKOVER
 0927  2UPTHETA1 TC     INTPRET          STARTS OFF IN BASIC
 0928   UPTHETA  ITC    0                FIND DESIRED SPACECRAFT ORIENTATION.
 0929  2                GETUNB
 0930            ITC    0                GET OGC, IGC, MGC.,GIMBAL COMMANDS
 0931  2                CALCGTA
 0932            DSU    1               GET UNCORRECTED ROLLBIAS
 09325           EXIT
 0933                   OGC
 09335 2                ROLLCTEM
 0934            XCH    MPAC
 09345           DOUBLE
 0935            TS     MPAC +2
 09355           TC     +4              OVERFLOW CORRECT
 0936            INDEX  A
 09365           CAF    LIMITS
 0937  2         AD     MPAC +2
 09375           XCH    ROLLBIAS        STORE NEW VALUE AND FETCH OLD.
 0938            COM
 09385           TS     MPAC +2
 0939            AD     ROLLBIAS
 09392           TS     A               LIMIT CHANGE IN ROLLBIAS TO 180 DEG.
 09394 2         TC     +3
 09396           CS     MPAC +2
 09398 2         TS     ROLLBIAS        USE OLD VALUE IF TOO BIG.
 0940            CS     IGC
 09402           COM
 09404           DOUBLE
 09406 2         XCH    THETAD +1       COMMAND PITCH ANGLE. (NO SKIPS)
 09407           CS     MGC
 09408           COM
 09409           DOUBLE                 CHANGE FROM INTERPRETER SCALING TO CDU
 0940952         XCH    THETAD +2       YAW, MG ANGLE COMMAND
 0941            INHINT
 0942            CAF    PITCHDT          CALL UP ATTITUDE CONTROL LOOP PITCHDT
 0943            TC     WAITLIST         SECONDS AFTER FINISHING THIS TIME.
 0944  2         CADR   UPTHETA3
 0945  4UPNOVER  TC     ENDOFJOB
 094501 PITCHDT  DEC    3
P09451 2   PIPAS ARE READ (BUT NOT CLEARED) AT A HIGHER RATE HERE.
 094512 INTERPIP CS     PIPAX
 094514          INDEX  PIPCTR
 094516          TS     XPIPBUF
 094518          CS     PIPAY
 09452           INDEX  PIPCTR
 094522          TS     YPIPBUF
 094524          CS     PIPAZ
 094526          INDEX  PIPCTR
 0945282         TS     ZPIPBUF
 09453           CCS    PIPCTR
 094532          TC     +4
 094534          CAF    TWO
 094536          TS     PIPCTR
 094538          TC     TASKOVER        WOULD GO TO PIPSETUP IF SMOOTHER WRITTEN
 09454 2         TS     PIPCTR
 094545          CAF    IPIPDT1
 094548          TC     WAITLIST
 09455 2         CADR   INTERPIP
 0945554         TC     TASKOVER
 09456  PIPSETUP CAF    PRIO15          LOWER THAN AVG G - HIGHER THAN UPTHETA.
 094562          TC     NOVAC
 094564          CADR   SMOOTHER
 0945664         TC     TASKOVER
 09457 4SMOOTHER TC     ENDOFJOB        WHEN WRITTEN, FIND A GOOD BANK FOR THIS.
 09458  IPIPDT1  DEC    50
P0946  2DETERMINE TIME TO OPEN CHUTE HERE IF NEEDED
 09465 2         BANK   27
 0957   DT       DEC    200              MAIN LOOP DT.
 0958  2DEC15    DEC    15
 0959   K3ROLL   DEC    -.125
R0961  2DEFINED BY EQUALS
 0963   ASP      EQUALS 0
 0964   Y        EQUALS 20D              TEMP
 0965   GAMMAL1  EQUALS 22D
 09655  A1       EQUALS FX
P0966  4    TABLE USED FOR SUB-ORBITAL REFERENCE TRAJECTORY CONTROL.
 0967   VREFER   DEC    0                REFERENCE VELOCITY SCALED V/51552.3946
 0968            DEC    .006539          15 POINTS ARE STORED AS THE INDEPENDENT
 0969            DEC    .020958          VARIABLE AND THEN SIX 15 POINT FUNC-
 0970            DEC    .040809          TIONS OF V ARE STORED CONSECUTIVELY
 0971            DEC    .076107
 0972            DEC    .122156
 0973            DEC    .165546
 0974            DEC    .196012
 0975            DEC    .271945
 0976            DEC    .309533
 0977            DEC    .356222
 0978            DEC    .404192
 0979            DEC    .448067
 0980            DEC    .456023
 0981  2         DEC    .67918           HIGH VELOCITY FOR SAFETY
 0982            DEC    -.008035         DRANGE/DA   SCALED DRDA/(2700/805)
 0983            DEC    -.008035
 0984            DEC    -.010820
 0985            DEC    -.016550
 0986            DEC    -.026935
 0987            DEC    -.042039
 0988            DEC    -.058974
 0989            DEC    -.070721
 0990            DEC    -.098538
 0991            DEC    -.107482
 0992            DEC    -.147762
 0993            DEC    -.193289
 0994            DEC    -.602557
 0995            DEC    -.99999
 0996  2         DEC    -.99999
 0997            DEC    0                -DRANGE/DRDOT
 0998            DEC    0                SCALED((2VS/8 2700) DR/DRDOT)
 0999            DEC    -.0494520  B-3
 1000            DEC    -.0683663  B-3
 1001            DEC    -.1343468  B-3
 1002            DEC    -.2759846  B-3
 1003            DEC    -.4731437  B-3
 1004            DEC    -.6472087  B-3
 1005            DEC    -1.171693  B-3
 1006            DEC    -1.466382  B-3
 1007            DEC    -1.905171  B-3
 1008            DEC    -2.547990  B-3
 1009            DEC    -4.151220  B-3
 1010            DEC    -5.813617  B-3
 1011  2         DEC    -5.813617  B-3
 1012            DEC    -.00642065  B3   RDOTREF    SCALED (8 RDT/2VS)
 1013            DEC    -.00642065  B3
 1014            DEC    -.0134426   B3
 1015            DEC    -.013947    B3
 1016            DEC    -.013462    B3
 1017            DEC    -.011813    B3
 1018            DEC    -.0095631   B3
 1019            DEC    -.00806946  B3
 1020            DEC    -.006828    B3
 1021            DEC    -.00806946  B3
 1022            DEC    -.0109791   B3
 1023            DEC    -.0151496   B3
 1024            DEC    -.0179817   B3
 1025            DEC    -.0159061   B3
 1026  2         DEC    -.0159061   B3
 1027            DEC    0                RANGE TO GO SCALED RTOGO/2700
 1028            DEC    0
 1029            DEC    .00100                    2.7  NM
 1030            DEC    .0032963                  8.9
 1031            DEC    .0081852                  22.1
 1032            DEC    .017148
 1033            DEC    .027926
 1034            DEC    .037
 1035            DEC    .063296
 1036            DEC    .077889
 1037            DEC    .098815
 1038            DEC    .127519
 1039            DEC    .186963
 1040            DEC    .238148
 1041  2         DEC    .238148
 1042            DEC    -.042360         -AREF    SCALED  AREF/805
 1043            DEC    -.042360
 1044            DEC    -.052919
 1045            DEC    -.074534
 1046            DEC    -.101242
 1047            DEC    -.116646
 1048            DEC    -.122360
 1049            DEC    -.127081
 1050            DEC    -.147453
 1051            DEC    -.155528
 1052            DEC    -.149565
 1053            DEC    -.118509
 1054            DEC    -.034907
 1055            DEC    -.007950
 1056  2         DEC    -.007950
 1057            DEC    .000371          DRANGE/D L/D SCALED Y/2700
 1058            DEC    .000371
 1059            DEC    .004770
 1060            DEC    .008081
 1061            DEC    .016030
 1062            DEC    .035815
 1063            DEC    .069422
 1064            DEC    .104519
 1065            DEC    .122
 1066            DEC    .172407
 1067            DEC    .252852
 1068            DEC    .363148
 1069            DEC    .512963
 1070            DEC    .558519
 1071            DEC    .558519          END OF STORED REFERENCE
P1073  2   CONTINUATION OF RE-ENTRY SECTION IN 2ND BANK.  (CONSTANTS AND M923=8
 1074            BANK   30
 1080   NEARONE  2DEC   .999999999
 1081   1/3RD    2DEC   .333333333             ONE THIRD
 1082    1/12TH  2DEC   .0833333333      ONE TWELFTH
R1083  2                       VSAT = 25766.1973  FT/SEC.
R1084  2                                           RE = 21,202,900  FEET
 1085   LEWD1    2DEC   .1
 1086   LEWD2    2DEC   .2
 1087   FOURTH   2DEC   .25
 1088   3ZEROS   2DEC   0
 1089   1BITDP   2OCT   00000 00001      DOUBLE PREC 1 BIT
 1090            DEC    0
 1091   NEAR1/4  2OCT   07777 00000      1/4 LESS 1 BIT IN UPPER PART.
 1092   C18      2DEC   .0097026346      500/2VS
 1093   KDMIN    2DEC   .00062111801     .5/805
 1094   C1/16    2DEC   .0625            1/16
 1096   Q2       2DEC   -.046388889      -1002/21600 =(643/21600-Q2(23500/2VS))
 1097   Q3       2DEC   .167003132       .07 2VS/21600
 1098   Q5       2DEC   .326388889       .3 23500/21600
 1099   Q6       2DEC   .034893617       820/23500
 1100   Q7F      2DEC   .0074534161      6/805    (VALUE OF Q7 IN FIXED MEM.)
 1102   VMIN     2DEC   .34929485        18000/2VS
 1103   C12      2DEC   .00684572901     32 28500/(21102900 2 PI)
 1105   KB1      2DEC   .29411765        1/3.4
 1106   KB2      2DEC   -.0057074322 B4 -16/(.0034 2 VS)
 1107   C19      2DEC   .16149068       130/805
 1108   VCORLIM  2DEC   .019405269       1000/2VS
 1109  2VQUIT    EQUALS VCORLIM          BOTH ARE 1000 FT/SEC
 1111   C20      2DEC   .21739130        (175 FPSS) LIFT UP IF ABOVE C20
 1112   25NM     2DEC   .0011574074 B-4  25/(21600 16)      (25 NAUT MILES)
 1113   K1D      2DEC   .0314453125     .01 805/256
 11135  K2D      2DEC   -.201298418     -.001 2VS/256
 1114   KVSCALE  2DEC   .81491944        12800/(2 VS .3048)
 1115   KASCALE  2DEC   .97657358        5.85 16384/(4 .3048 100 805)
 1116   KTETA    2DEC*  .383495203 E2 B-14*        1000 2PI/16384(163.84)
 1117   KT       2DEC*  .157788327 E2 B-14*       RE(2PI)/2VS(16384)163.84
 11175  .05G     2DEC   .002             .05/25
 1118   LAD      2DEC   .3
 1119   LAD/256  2DEC   .001171875       .3/256
 1120   KLAT     2DEC   .0125
 1121   LATBIAS  2DEC   .00003           APPRX .5 NM/ 4(21600/2 PI)
 1122   KWE      2DEC   .120056652
 1123   KACOS    2DEC   .004973592       1/32(2PI)
 1126   CHOOK    2DEC   1 B-5            .25/8
 1127   1/8TH    2DEC   .125
 1128   CH1      2DEC   .24              8 CH1/ 25         (CH1 = .75)
 1129   KC3      2DEC   -.082540747      KC3 (2VS)SQ /2PI 25 32.2 LAD R
 1130   LOD      2DEC   .18
 1131   VRCONT   2DEC   .0135836886      700/2 VSAT
 1132   HALVE    2DEC   .5
 1133  2NEG1/8   EQUALS K3ROLL           ONLY A SINGLE PRECISION NUMBER.
 1134   L/DCMINR 2DEC   .2895            LAD COS(15 DEG)
 1135   C/D0     2DEC   -.00387019231
 1138   GMAX/2   2DEC   .2               5/25
 1139   1/GMAX   2DEC   .4
 1140   2HS      2DEC   .0172786611      2 28500 25 32.2/(4 VS VS)
 1141   2HSGMXSQ 2DEC   .000047768341    ((2 28500 322/(4VS VS))SQ
 1142   KWIEM    2DEC   .147323336       RESULT IN METERS OVER 12800
 1143   COS(13)  2DEC   .9763            REAL COS OF 12.5 DEG. NOT 1/2 COSINE.
 1144  4-SIN(13) 2DEC   -.21644          REAL SIN OF 12.5 DEG.  NO FACTOR OF 1/2
 1145   2C1HS    2DEC   .0215983264     2 1.25 28500 805/(2 VS)SQ
 1146   2C1HSLAD 2DEC   .071994421      2 1.25 28500 805/(.3 4 VS VS)
 1147   POINT1   2DEC   .1
 1148   K44      2DEC   .00175626224    2 VS/(156 57.3 57.3 57.3)
 1149   VFINAL   2DEC   .48513173       25000/2 VS
 1150   KAT      2DEC   .08             2 G-S (2/25)
 11502  POINT8   2DEC   .8
 11504  POINT2   2DEC   .2
 11506  Q7MIN    2DEC   .043478261      35/805
 11508  PT1/16   2DEC   .00625
R1151   ... END OF RE-ENTRY CONSTANTS ...
P1169            CLOSED SUBROUTINE TO COMPUTE DESIRED NAV BASE ORIENTATION
R1170  2         NEEDED DURING ENTRY PHASE.
R1171            ENTER WITH VN, UNITR, UNITW, AND ROLLC
R1172  4         COMPUTES UXNB, UYNB, AND UZNB.  (NAV BASE UNIT VECTORS)
 1173   GETUNB   RTB    3                RESET PUSH COUNTER.
 1174            VXV    VXSC             GET VELOCITY OF ATMOSPHERE
 1175            VAD    UNIT             GET UVA., RELATIVE VELOCITY
 1176            VXSC                    RESOLVE BY COS OF 13 DEG.
 1177                   FRESHPD
 1178                   UNITR
 1179                   UNITW            NEG OF REAL VEL.
 1180                   KWIEM            EARTH RATE CONST IN METERS X 4.
 1181                   VN
 1182  2                COS(13)          UVA COS(13) INTO PD.
 1183            NOLOD  1
 1184            VXV    UNIT             UYA = UNIT(VA*RN)
 1185                   UNITR
 1186  2         STORE  16D              UYA INTO LOC 16 OF VAC AREA.
 1187            DMOVE  0               SAVE ROLLC SO THAT IT CANNOT CHANGE
 1188                   ROLLC             DURING THIS SUBROUTINE
 1189  2         STORE  ROLLCTEM        INTO LOC 14 OF PUSH LIST
 1190            NOLOD  1               COS(ROLLC)
 1191            COS    VXSC            UYA COS(ROLLC).  PUSH INTO LOC 6.
 1192  2                16D
 11924           SIN    0
 11926 2                ROLLCTEM        SIN(ROLLC) INTO PD AT LOC 12.
 1193            VXV    2                UNA = UNIT(UYA*UVA)
 1194            UNIT   VXSC             UNB = UYA COS(ROLL) + UNA SIN(ROLL)
 1195            VAD    UNIT             UNIT COULD BE REPLACED BY  VSLT   1.
 1196                   16D                UYA STORED AT LOC 16
 1197                   0                UVA FIRST ITEM INTO PUSH LIST
 1198  2         STORE  UYNB             1 SCAL AND  1 VEC FROM PD.
 1199            NOLOD  2
 1200            VXV    UNIT             UN = UNIT (UYNB*UVA)
 1201            VXSC   VSU              UXNB = -UN SIN(13) - UVA COS(13)
 1202                   0
 1203                   -SIN(13)         PULLS UVA COS(13) FRON PD.
 1204  2         STORE  UXNB
 1205            NOLOD  1
 1206            VXV    VSLT             UZNB = UXNB*UYNB
 1207                   UYNB
 1208                   1
 1209  2         STORE  UZNB
 1210  4         ITCQ   0                AND RETURN.
 12105  ROLLCTEM EQUALS 14D
P1300      SUBROUTINE TO READ PIPA COUNTERS, TRYING TO BE VERY CAREFUL SO THAT
R1301  2IT WILL BE RESTARTABLE.
R1302              (ARRIVE IN INTERRUPTED STATE OR INHIBITED AFTER RESTART.)
R1303  2   (EXIT IS THRU  ISWRETRN)
 1304   PIPASR   CS     ZERO             PUT THESE INTO THE IMPOSSIBLE STATE
 1305            TS     TEMX             FOR THEIR INITIAL VALUES.
 1306            TS     TEMY
 1307            TS     TEMZ
 1308            CAF    ZERO
 1309            TS     DELVX + 1
 1310            TS     DELVY + 1        PIP COUNTERS MAY NOT HAVE POS ZERO IN
 1311            TS     DELVZ + 1
 1312  2         TS     PIPAGE           ZERO THIS TO INDICATE IN PIPA READING.
 1313   REPIP1   TC     READTIME + 1     PROBABLY NOT NEEDED SINCE NOT MUCH
 1314            CS     RUPTSTOR + 1     CHANCE OF TIME1 OVERFLOWING NOW.  (BUT
 1315            TS     PIPTIME + 1      JUST POSSIBLE IF MANY RESTARTS.
 1316            CS     RUPTSTOR
 1317  2         TS     PIPTIME
 1318            CS     PIPAX
 1319            TS     TEMXY
 1320            XCH    TEMX             PUT NEGZERO INTO PIPACTRS AS READ.
 1321            XCH    PIPAX
 1322   REPIP1B  TS     DELVX
 1323  2         TS     DELVX + 1        DOUBLE SAVE.
 1324   REPIP2   CS     PIPAY
 1325            TS     TEMXY
 1326            XCH    TEMY
 1327            XCH    PIPAY
 1328   REPIP2B  TS     DELVY
 1329  2         TS     DELVY + 1
 1330   REPIP3   CS     PIPAZ            REPEAT PROCESS FOR Z PIPA.
 1331            TS     TEMXY            SAVE NEG OF PIPA READ
 1332            XCH    TEMZ             SAVE HERE AS PICK UP NEGZERO
 1333            XCH    PIPAZ            RESETTING PIPA AS READ OUT)
 1334   REPIP3B  TS     DELVZ            AND STORE IN Z.
 1335  2         TS     DELVZ + 1        SHOWS THAT IT REALLY MADE IT.
 1336   REPIP4   CS     ZERO             LEAVE THESE AT NEGZERO
 1337            TS     DELVX + 1
 1338            TS     DELVY + 1
 1339            TS     DELVZ + 1
 13392           CS     BIT1
 13393           MASK   TMMARKER
 13394           AD     BIT1             SET BIT 1 IN TM MARKER.
 13395           TS     TMMARKER
 1340            TC     ISWRETRN         AND EXIT.  SHOULD HAVE COME THRU ICALL
P1341  2         ROUTINE TO RESTART IF READING PIPA COUNTERS.
 1346   REPIPASR CCS    PIPAGE          WAS I READING PIPS.
 1347            TC     PIPASR          NO.. PIPAGE = PLUS CONST.
 1348            CCS    DELVZ + 1        PIPAGE = 0  (I WAS READING PIPS.)
 1349            TC     REPIP4           Z WAS READ OK.
 1350            TC     +3               Z NOT DONE, CHECK Y.
 1351            TC     REPIP4
 1352            TC     REPIP4
 1353            CCS    DELVY + 1        HAS IT CHANGED FROM ITS +ZERO INIT VALU
 1354            TC     +3               YES, Y DONE. TRY TO REDO Z.
 1355            TC     CHKDELVX         NO, GO LOOK AT X.
 1356            TC     +1               YES.
 1357            CCS    TEMZ             DOES TEMZ STILL = -0.
 1358            TC     +4               NO TRY TO RESTORE
 1359            TC     +3
 1360            TC     +2
 1361            TC     REPIP3           YES, GO BACK AND READ Z AGAIN.
 1362            CS     TEMXY            MUCH MORE LOGIC COULD BE INCORPORATED
 1363  2         TC     REPIP3B          TO CHECK PIPA CTR FOR SIZE.
 1364   CHKDELVX CCS    DELVX + 1        HAS THIS CHANGED.
 1365            TC      +3              YES
 1366            TC     CHKTEMX          NO.
 1367            TC     +1               YES
 1368            CCS    TEMY
 1369            TC     +4
 1370            TC     +3
 1371            TC     +2
 1372            TC     REPIP2
 1373            CS     TEMXY
 1374  2         TC     REPIP2B
 1375   CHKTEMX  CCS    TEMX             HAS THIS CHANGED.
 1376            TC     +4               YES
 1377            TC     +3               YES
 1378            TC     +2               YES
 1379            TC     REPIP1           NO
 1380            CS     TEMXY
 1381            TC     REPIP1B
P3000    ENTRY INITIALIZATION ROUTINE.
R3001    -----------------------------
 3002   STARTENT TC     PHASCHNG        KEEP UPTHETA RUNNING IN CASE OF RESTART.
 3004  2         OCT    03204           4.26 RESTART.
 3006            TC     PHASCHNG        PICK UP CURRENT STRING AT NEWMODE63.
 3008  2         OCT    02305           5.19 RESTART.  RESYNCING PIPUP ALSO.
 3010            INHINT
 3012            CAF    PRIO14          ESTABLISH UPTHETA FOR 1ST TIME.
 3015            TC     FINDVAC
 3020  2         CADR   UPTHETA1        START UPTHETA JOB.
 3025            RELINT
 3030   NUMODE63 TC     NEWMODE
 3035  2         OCT    00063           ENTRY PHASE = MODE 63
 3040            CAF    INITCADR
 3045            TS     GOTOADDR
 3050            CAF    EARGCADR
 3055            TS     CALCG
 3060            CAF    ZERO
 3065            TS     TENTRY
 3066            TS     ROLLBIAS
 3070            CAF    NUDELTAT
 3075            TS     DELTAT
 3080            CAF    NU/PIPDT
 3085            TS     1/PIPADT
 3086            CS     ENTMASK
 30865           INHINT                 INITIALIZE SWITCHES (BITS 6:10,15 IN
 3087            MASK   STATE           STATE) 6=GONEPAST,7=RELVELSW,8=EGSW
 3088            AD     ENTRYSW         9=HUNTSW1, 10=HIND, 15=INRLSW
 3089            TS     STATE           ALL BUT RELVELSW SET TO NON-BRANCH (1)
 30895           RELINT
 3125  2         TC     INTPRET
 3130            RTB    2               SET CDUX AGAIN JUST IN CASE.
 3135            VXV    DOT
 3140            COMP   RTB
 3145                   CDUXFIX
 3150                   VN
 3155                   UNITR
 3160                   RTINIT          THIS GIVES LATANG.
 3165                   SIGNMPAC        GETS SIGN OF MPAC
 3170  2         STORE  K2ROLL          K2ROLL = - SIGN(LATANG)
 3175            DOT    1
 3180            TSLT   ACOS
 3185                   UNITR
 3190                   RTINIT
 3195                   1
 3200  2         STORE  THETAH
 3205            VMOVE  0
 3210                   RT
 3215  2         STORE  RTINIT
 3220            COMP   0
 3225                   DTEAROT
 3230  2         STORE  DTEAROT
 3235            ITC    0
 3240                   EARROT1
 3245            RTB    0
 3250  4                OVERNOUT        EXIT SETTING RESTART BITS TO 5.12 FOR EN
 3255   INITCADR CADR   INITROLL
 3260   EARGCADR CADR   CALCGEAR
 3261   NUDELTAT DEC    200 B5
 3262   NU/PIPDT DEC    200 B6
 3264   ENTMASK  OCT    01741
 3265   ENTRYSW  OCT    01341
L      2AVERAGE G INTEGRATOR
R0001            ROUTINE CALCRVG INTEGRATES THE EQUATIONS OF MOTION BY AVERAGING
 0002  9 THE THRUST AND GRAVITATIONAL ACCELERA-
R0003   TIONS OVER A TIME INTERVAL, DELTAT
R0004            FOR THE EARTH-CENTERED GRAVITATIONAL FIELD THE PERTURBATION DUE
 0005  9 TO OBLATENESS IS COMPUTED TO THE FIRST
R0006   HARMONIC COEFFICIENT J
R0007            ROUTINE NORMLISE MUST BE CALLED PRIOR TO THE FIRST ENTRY INTO C
 0008  9ALCRVG. IT REQUIRES RN SCALED TO 2(+29)M
R0009   IT LEAVES RN NORMALISED, SO THAT THE SCALED MAGNITUDE OF THE VECTOR CONT
 0010  9AINS ONE LEADING ZERO, BY SHIFTING THE
R0011   VECTOR LEFT N BINARY PLACES
R0012            ROUTINE CALCRVG REQUIRES
R0013                   1) THRUST ACCELERATION INCREMENTS IN DELV SCALED SAME AS
 0014  9 PIPAX,Y,Z
R0015                   2) VN SCALED AT 2(+7) M/CS
R0016                   3) ADDRESS OF CALCGLUN OR CALCGEAR IN CALCG
R0017                   4) DELTAT SCALED AT 2(+9) CS
R0018                   5) PUSH-DOWN COUNTER SET TO ZERO
R0019  4IT LEAVES UPDATED RN, SCALED AT 2(29-N) M, VN, AND GRAVITY SCALED AT 2(-
 0020  95) M/CS/CS
R0021  2  CONTINUE ON IN BANK 30.
 0022   NORMLISE ABVAL  3               COUNT NUMBER OF LEADING ZEROS IN
 0023            TSLC   INCR,1          ABVAL (RN) AND STORE -N(=2-M) IN NSHIFT
 0024            SXA,1  INCR,1          RN MUST BE SCALED AT 2(+29)M
 0025            SXA,1  ITA
 0026                   RN
 0027                   X1
 0028                   2
 0029                   NSHIFT          SAVE C(X1)=-N
 0030                   14D
 0031                   XSHIFT          SAVE C(X1) =14-N
 0032  2                S2
 0033            VMOVE  1
 0034            VSLT*
 0035                   RN
 0036                   14D,1
 0037  2         STORE  RN              RN SCALED AT 2(29-N)METRES
 0038            ITC    0
 0039  2                CALCGRV1
 0040            ITCI   0
 0041  8                S2
 0042   CALCRVG  VXSC   0
 0043                   DELV
 0044  2                KPIP            DV TO PD SCALED AT 2(+4)M/CS
 0045            VXSC   1
 0046            LXA,1  BVSU
 0047                   GRAVITY
 0048                   DELTAT
 0049                   XSHIFT
 0050  2                0               (DV-(OLD GDT))/2 TO PD SCALED 2(+3)M/CS
 0051            NOLOD  3
 0052            VSRT   VAD
 0053            VXSC   VSLT*
 0054            VAD    ITA
 0055                   4
 0056                   VN
 0057                   DELTAT
 0058                   0,1
 0059                   RN
 0060                   S2
 0061  2         STORE  RN1             SCALED AT 2(29-N) METERS
 0062            ITC    0
 0063  2                CALCGRV1
 0064            NOLOD  3
 0065            VXSC   BVSU
 0066            VAD    VSRT
 0067            VAD
 0068                   DELTAT
 0069                   -               (DV-(OLD GDT))/2
 0070                   -               DV/2
 0071                   4
 0072                   VN
 0073  2         STORE  VN1             SCALED AT 2(+7) MET/CS
R0074  2 IN AVERAGE G, UP THE PHASE BITS BY 2 OF ACTIVE PROG BEFORE COPY CYCLE.
 0075  2         EXIT   0
 0076            INDEX  FIXLOC
 0077            CS     S2              SAVE NEG RETURN ADDRESS IN NON-VAC AREA.
 0078  2CALCRVG2 TS     AVGRETRN        SAVE NEGATIVE OF RETURN ADDRESS.
 0079            CS     -PHASE1 + 4     PICK UP PHASE5.
 0080            AD     ONE             INCREMENT BY 1.
 0081            TC     NEWPHASE        AND CALL ROUTINE TO CHANGE PHASE.
 0082  2         OCT    00005
 0083   REFAZE6  INHINT
 0084            CAF    ELEVEND
 0085            TS     MPAC            USE MPAC FOR LOOP COUNTER.
 0086            INDEX  MPAC
 0087            CS     RN1             RN1 AND VN1 MUST BE IN ORDER.
 0088            COM                    LEAVE RN1 ALONE IN CASE OF RESTARTS.
 0089            INDEX  MPAC            SELECT THE RIGHT TERM.
 0090  2         TS     RN              ...AND GO THRU COPY CYCLE.
 0091            CCS    MPAC            ARE WE DONE..
 0092            TC     REFAZE6 + 2     NO, NOT YET.
 0093            CS     BIT2            YES, MPAC = 0.
 0094            MASK   TMMARKER
 0095            AD     BIT2            SET BIT 2 TO ONE IN TMMARKER.
 0096  2         TS     TMMARKER
A0097                                   WHAT ABOUT GRAVITY FOR RESTART..
 0098            RELINT
 0099            CS     AVGRETRN        NEG OF ADDRESS WAS STORED.
 0100  4         TC     BANKJUMP
 0101  4ELEVEND  DEC    11              11D  (ELEVEN DECIMAL, OF COURSE.)
 0102   CALCGRAV LXA,1  0
 0103  2                XSHIFT
 0104   CALCGRV1 NOLOD  1
 0105            UNIT
 0106  2         STORE  UNITR
 0107            DMOVE  1
 0108            TSLT
 01081                  30D
 01082                  1
 0109  2         STORE  RMAG            SCALED AT 2(30-N)M
 0110            TSLT   0
 0111                   28D
 0112                   2
 0113  2         STORE  RMAGSQ          SCALED AT 2(+50)M(+2)
 0114            ITA    1
 0115            XAD,1
 0116                   27D
 0117  2                NSHIFT
 0119   CALCGEAR DOT    0
 0120                   UNITR
 0121                   UNITW
 0122  2         STORE  25D
 0123            NOLOD  2
 0124            DSQ    DMP
 0125            TSLT   BDSU
 0126                   DP(5/8)
 0127                   4
 0128  2                DP2(-3)
 0129            DDV    1
 0130            TSLT*
 0131                   J(RE)SQ         SCALED AT 2(+40) M(+2)
 0132                   RMAGSQ
 0133                   0,1
 0134  2         STORE  23D             J(RE/RN) SQ SCALED AT 2(-3)
 0135            NOLOD  2
 0136            DMP    VXSC
 0137            VAD
 0138                   -
 0139                   UNITR
 0140  2                UNITR
 0141            DMP    1
 0142            VXSC   VAD
 0143                   23D
 0144                   25D
 0145  2                UNITW
 0146            DMOVE  1
 0147            ITC
 0148                   MUEARTH
 0149  2                MU/RSQ
 0150   CALCGLUN VMOVE  0
 0151  2                UNITR
 0152            DMOVE  1
 0153            INCR,1
 0154                   MUMOON
 0155  2                6
 0156   MU/RSQ   NOLOD  2
 0157            DDV    TSLT*
 0158            VXSC
 0159                   RMAGSQ          C(X1)=14-2N  (EARTH)
 0160                   5,1                  =20-2N  (MOON)
 0161  2         STORE  GRAVITY         SCALED AT 2(-5) M/CS/CS
 0162            ITCI   0
 0163  2                27D
 0164   KPIP     2DEC   0.59904
 0165   DP2(-3)  2DEC   0.125
 0166   DP(5/8)  2DEC   0.625
 0167   MUEARTH  2DEC   .009063188 B-3  SCALED AT 2(+45)M(+3)/CS(+2)
 0168   MUMOON   2DEC   0.007134481     4.90277800 E12        2(+36)M(+3)/CS(+2)
 0169   J(RE)SQ  2DEC   .06006663 B-3   SCALED AT 2(+43)M(+2)
P0200            ROUTINE FOR FLIGHTS 501 &2 TO INCORPORATE STATE VECTOR UPDATE D
 0201  9URING AVERAGE G. EACH PASS THROUGH
R0202  2SERVICER COMES HERE TO SEE IF AN UPDATE IS READY.
 0203  2         BANK   26
 0204   501UPCHK DSU    2               IF PIPTIME IS GREATER THAN OR EQUAL TO
 0205            BMN    TEST              UPTIME, AND UPTIME IS NOT TOO OLD, AND
 02055           DSU    BPL               UPDATFLG IS SET, DO THE UPDATE. UPTIME
 0206                   PIPTIME           IS NORMALLY SET TO POSMAX
 0207                   UPTIME          POSMAX.
 0208                   REGSTEP
 0209                   UPDATFLG
 0210  2                REGSTEP
 02104                  2.5SEC26
 02108                  BADUPTIM
 0211            MXV    1               TRANSFORM DATA IN STBUFF TO SM COORDS.
 0212            VSLT
 0213                   STBUFF +6
 0214                   REFSMMAT
 0215                   1               THIS ASSUMES THAT UPDATE SCALED 2(7)M/CS
 0216  2         STORE  VN1
 0217            MXV    1
 02175           VSLT
 0218                   STBUFF
 0219                   REFSMMAT
 0220                   2               THIS ASSUMES THAT UPDATE SCALED 2(26)M
 0221  2         STORE  RN1
 0222            ITC    0               CALCULATE THE ASSOCIATED GRAVITY VECTOR
 0223  2                CALCGRAV        FOR THE NEXT TIME STEP.
 0224  2         EXIT   0
 0225            TC     PHASCHNG        UPDATE RESTART POINT BEFORE SETTING
 0226  2         OCT    03005           UPTIME TO SHOW THAT THE DATA HAS BEEN
 0227   REDO5.24 TC     FLAG1DWN        INCORPORATED. ALSO, INDICATE THIS TO THE
 0228  2         OCT    20000           GROUND BY RESETTING UPDATFLG.
 0229            CAF    POSMAX
 0230            TS     UPTIME
 0231  2         TS     UPTIME +1
 0233            CS     501AVEX         SET UP FOR AVERAGE G TO RETURN TO USUAL
 0234            TC     POSTJUMP        POINT IN SERVICER
 02345 2         CADR   CALCRVG2
 02346  BADUPTIM EXIT   0               COME HERE IF UPTIME REPRESENTS PAST TIME
 02347           TC     ALARM
 02348 2         OCT    01411
 02349           CAF    POSMAX
 0235            TS     UPTIME
 02351 2         TS     UPTIME +1
 02352           TC     FLAG1DWN        RESET UPDAT FLAG
 02353 2         OCT    20000
 02354 2         TC     INTPRET
 02355           ITC    0
 02356 2                REGSTEP
 02357  2.5SEC26 2DEC   250
 02358  501AVEX  CADR   AVGRET
P0500  4SIM FLIGHT SPECIAL
 0501  2         BANK   31
 0502  2MALSJOB  TC     INTPRET
 0503            VXM    0
 0504                   STBUFF
 0505                   REFSMMAT
 0506  2         STORE  STBUFF
 0507            VXM    1
 0508            VSLT
 05085                  STBUFF +6
 0509                   REFSMMAT
 05095                  1
 0510  2         STORE  STBUFF +6
 0511  2         EXIT   0
 0512            TC     ENDOFJOB
L      2VERIFICATION ASSISTANCE PROGRAMS
R0001            WAITLIST EXERCISE PROGRAM. TIMES ARE GIVEN IN THE FORM NN + NN/
 0002  932 + YY, WHERE THE NS REFER TO TIME
R0003  2SINCE THE BEGINNING OF THE TEST, AND YS ADDITIONAL MCT.
 0004            BANK   13
 0005   WLTEST   XCH    IN2
 0006            CCS    IN2             GET IN PHASE WITH T3 INCREMENTS.
 0007            TC     +2
 0008  2         TC     -2
 0009            CCS    IN2
 0010            TC     -1
 0011  2         TS     OUTCR1          TO INITIALIZE.
R0012            THE FIRST TASK IS ENTERED INTO SLOT 1 WITH A T3 INCREMENT BETWE
 0013  9EN THE TWO T3 REFERENCES. CALL AT
R0014  210 +00/32 -25. SPECIFY WAIT TO 30/32.
 0015            TC     OUTCR1WT
 0016  2         DEC    29
 0017            TC     OUTCR1WT        GO WAIT FOR THIS AND SPECIFY RESET TO
 0018  2         DEC    42              20 +8/32.
R0019  2         AT 30/32 +16, WAIT 12 MCT BEFORE ENTERING TASK 1.
 0020            CAF    ZERO            TUNING CONSTANT.
 0021            CCS    A
 0022            TC     -1
 0023            CAF    ONE             TASK ENTRY WITH T3 INC BETWEEN TWO T3
 0024            TC     WAITLIST        REFERENCES.
 0025  2         CADR   NOPLWAIT +2     TASK IN HIGH SWITCHED BANK.
 0026            TC     OUTCR1WT        WAIT FOR 20 +8/32. CALL FOR RESET TO
 0027  2         DEC    23              20 +31/32.
 0028            CAF    ONE             AT 20 +8/32 + 16, ENTER TASK 2 DUE AT
 0029            TC     WAITLIST        30.
 0030            CADR   QTSK2
P0031            WAIT FOR 20 +31/32 +16 AND AT THAT TIME WAIT FOR T3 TO OVERFLOW
 0032  9 BEFORE ENTERING TASK 3. REQUIRES RESET
R0033  2TO 30 +10/32.
 0034            TC     OUTCR1WT
 0035            DEC    11
 0036            CCS    TIME3
 0037            TC     -1
 0038            CAF    ONE             ENTER TASK 3 AFTER T3 OVF.
 0039            TC     WAITLIST
 0040  2         CADR   QTSK3
 0041            TC     OUTCR1WT        TASK 3 IS DUE AT 40. WAIT FOR 30 +10/32
 0042  2         DEC    53              CALLING FOR RESET TO 40 +31/32.
R0043            AT 30 +10/32 +16, ENTER TASKS 4 AND 5 DUE SAME RUPT AT 50. THEY
 0044  9 WILL BE INHIBITED FOR 6 MS SO THAT T3
R0045  2WILL TICK WHILE IT IS BEING RESET IN THE DISPATCH OF 5.
 0046            CAF    TWO             ENTERED INTO SLOTS 2 AND 3.
 0047            TC     WAITLIST
 0048            CADR   QTSK4
 0049            CAF    TWO
 0050            TC     WAITLIST
 0051  2         CADR   TCTSKOVR        TASK IN FIXED-FIXED.
 0052            TC     OUTCR1WT        WAIT FOR 40 +31/32 +16, CALLING FOR
 0053  2         DEC    19              RESET TO 50 +18/32.
 0054            TC     OUTCR1WT +1     AT 40 +31/32 +16, INHIBIT UNTIL
 0055  2         DEC    24              50 +18/32 +16 AND RESET TO 60 +10/32.
 0056            TC     OUTCR1WT        AT 50 +18/32 +16, WAIT UNTIL 60 10/32,
 0057            DEC    21              RESETTING TO 60 +31/32.
P0058            AT 60 +10/32 +16, ENTER TASKS 6 AND 7 DUE AT 70 AND 8 DUE AT 80
 0059  9. T3 WILL INCREMENT DURING TASK 7
R0060  2DISPATCH, MAKING TASK 8 DUE THAT INTERRUPT.
 0061            CAF    ONE
 0062            TC     WAITLIST        ENTER TWO TASKS DUE SAME T3 RUPT AND
 0063            CADR   QTSK6           ANOTHER DUE THE FOLLOWING RUPT.
 0064            CAF    ONE
 0065            TC     WAITLIST
 0066            CADR   QTSK7
 0067            CAF    TWO             A T3 INC WILL OCCUR WHILE TASK 7 IS
 0068            TC     WAITLIST        SETTING T3 FOR THIS TASK AND CAUSE IT TO
 0069  2         CADR   QTSK8           BE THE THIRD TASK DUE THAT RUPT.
 0070            TC     OUTCR1WT        WAIT UNTIL 60 +31/32 +16, INHINTING
 0071            DEC    19              70 +18/32 +16.
 0072            TC     OUTCR1WT +1
 0073  2         DEC    1
 0074            CAF    FIVE            SYSTEMMATICALLY ENTER TASKS IN ALL 6
 0075  2         TS     MPAC            SLOTS.
 0076   QTSKLOOP RELINT
 0077            INHINT
 0078            CS     MPAC
 0079            AD     SEVEN
 0080            TC     WAITLIST
 0081            CADR   QTSK10
 0082            CCS    MPAC
 0083  2         TC     QTSKLOOP -1
 0084   QENDTEST TC
P0085  2         THE FOLLOWING SUBROUTINE USES OUTCR1 AS A FINE TIMER DURING THE
 0086  9 WAITLIST TEST.
 0087   OUTCR1WT RELINT
 0088            XCH    Q
 0089            TS     MPAC
 0090            INDEX  A
 0091            CS     0               NUMBER OF THIRTY-SECONDS OF 10MS TO WAIT
 0092            AD     HALF
 0093            AD     HALF
 0094  2         TS     MPAC +1         NEW OUTCR SETTING.
 0095            CCS    OUTCR1
 0096  2         TC     -1
 0097   OUTCR1W2 XCH    MPAC +1
 0098            TS     OUTCR1
 0099            CAF    1WTCODE
 0100            TS     OUT2
 0101            INHINT
 0102            INDEX  MPAC
 0103  2         TC     1
 0104   1WTCODE  OCT    26000
P0105  2         TASKS FOR WAITLIST TESTER.
 0106   QTSK2    TC     TASKOVER
 0107   QTSK3    TC     TASKOVER
 0108   QTSK4    CAF    QTSK4DEL        WAIT SO THAT T3 WILL TICK DURING DISPTCH
 0109            CCS    A
 0110            TC     -1
 0111  2         TC     TASKOVER
 0112   QTSK6    CAF    QTSK6DEL
 0113  2         TC     QTSK4 +1
 0114   QTSK7    TC     TASKOVER
 0115   QTSK8    TC     TASKOVER
 0116  2QTSK10   TC     TASKOVER
 0117   QTSK4DEL DEC    77              TUNING CONSTANTS.
 0118   QTSK6DEL DEC    78
*       ENDOFJOB
